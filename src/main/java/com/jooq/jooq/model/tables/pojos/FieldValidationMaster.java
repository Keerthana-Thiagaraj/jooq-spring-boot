/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.pojos;


import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "field_validation_master",
    schema = "jooq_demo",
    uniqueConstraints = {
        @UniqueConstraint(name = "KEY_field_validation_master_PRIMARY", columnNames = { "validation_id" })
    },
    indexes = {
        @Index(name = "FK_FIELD_ID_idx", columnList = "field_id ASC")
    }
)
public class FieldValidationMaster implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer validationId;
    private Integer fieldId;
    private String  validationType;
    private String  validationFormat;
    private String  validationMsg;
    private String  status;

    public FieldValidationMaster() {}

    public FieldValidationMaster(FieldValidationMaster value) {
        this.validationId = value.validationId;
        this.fieldId = value.fieldId;
        this.validationType = value.validationType;
        this.validationFormat = value.validationFormat;
        this.validationMsg = value.validationMsg;
        this.status = value.status;
    }

    public FieldValidationMaster(
        Integer validationId,
        Integer fieldId,
        String  validationType,
        String  validationFormat,
        String  validationMsg,
        String  status
    ) {
        this.validationId = validationId;
        this.fieldId = fieldId;
        this.validationType = validationType;
        this.validationFormat = validationFormat;
        this.validationMsg = validationMsg;
        this.status = status;
    }

    /**
     * Getter for <code>jooq_demo.field_validation_master.validation_id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "validation_id", nullable = false, precision = 10)
    public Integer getValidationId() {
        return this.validationId;
    }

    /**
     * Setter for <code>jooq_demo.field_validation_master.validation_id</code>.
     */
    public FieldValidationMaster setValidationId(Integer validationId) {
        this.validationId = validationId;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.field_validation_master.field_id</code>.
     */
    @Column(name = "field_id", precision = 10)
    public Integer getFieldId() {
        return this.fieldId;
    }

    /**
     * Setter for <code>jooq_demo.field_validation_master.field_id</code>.
     */
    public FieldValidationMaster setFieldId(Integer fieldId) {
        this.fieldId = fieldId;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.field_validation_master.validation_type</code>.
     */
    @Column(name = "validation_type", length = 45)
    @Size(max = 45)
    public String getValidationType() {
        return this.validationType;
    }

    /**
     * Setter for <code>jooq_demo.field_validation_master.validation_type</code>.
     */
    public FieldValidationMaster setValidationType(String validationType) {
        this.validationType = validationType;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.field_validation_master.validation_format</code>.
     */
    @Column(name = "validation_format", length = 200)
    @Size(max = 200)
    public String getValidationFormat() {
        return this.validationFormat;
    }

    /**
     * Setter for <code>jooq_demo.field_validation_master.validation_format</code>.
     */
    public FieldValidationMaster setValidationFormat(String validationFormat) {
        this.validationFormat = validationFormat;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.field_validation_master.validation_msg</code>.
     */
    @Column(name = "validation_msg", length = 100)
    @Size(max = 100)
    public String getValidationMsg() {
        return this.validationMsg;
    }

    /**
     * Setter for <code>jooq_demo.field_validation_master.validation_msg</code>.
     */
    public FieldValidationMaster setValidationMsg(String validationMsg) {
        this.validationMsg = validationMsg;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.field_validation_master.status</code>.
     */
    @Column(name = "status", length = 45)
    @Size(max = 45)
    public String getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>jooq_demo.field_validation_master.status</code>.
     */
    public FieldValidationMaster setStatus(String status) {
        this.status = status;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final FieldValidationMaster other = (FieldValidationMaster) obj;
        if (validationId == null) {
            if (other.validationId != null)
                return false;
        }
        else if (!validationId.equals(other.validationId))
            return false;
        if (fieldId == null) {
            if (other.fieldId != null)
                return false;
        }
        else if (!fieldId.equals(other.fieldId))
            return false;
        if (validationType == null) {
            if (other.validationType != null)
                return false;
        }
        else if (!validationType.equals(other.validationType))
            return false;
        if (validationFormat == null) {
            if (other.validationFormat != null)
                return false;
        }
        else if (!validationFormat.equals(other.validationFormat))
            return false;
        if (validationMsg == null) {
            if (other.validationMsg != null)
                return false;
        }
        else if (!validationMsg.equals(other.validationMsg))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.validationId == null) ? 0 : this.validationId.hashCode());
        result = prime * result + ((this.fieldId == null) ? 0 : this.fieldId.hashCode());
        result = prime * result + ((this.validationType == null) ? 0 : this.validationType.hashCode());
        result = prime * result + ((this.validationFormat == null) ? 0 : this.validationFormat.hashCode());
        result = prime * result + ((this.validationMsg == null) ? 0 : this.validationMsg.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("FieldValidationMaster (");

        sb.append(validationId);
        sb.append(", ").append(fieldId);
        sb.append(", ").append(validationType);
        sb.append(", ").append(validationFormat);
        sb.append(", ").append(validationMsg);
        sb.append(", ").append(status);

        sb.append(")");
        return sb.toString();
    }
}
