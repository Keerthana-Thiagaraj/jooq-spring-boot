/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.records;


import com.jooq.jooq.model.tables.FieldMaster;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "Field_master",
    schema = "jooq_demo",
    uniqueConstraints = {
        @UniqueConstraint(name = "KEY_Field_master_PRIMARY", columnNames = { "sno" })
    },
    indexes = {
        @Index(name = "fk_tab_master_idx", columnList = "tab_id ASC")
    }
)
public class FieldMasterRecord extends UpdatableRecordImpl<FieldMasterRecord> implements Record8<Integer, Integer, String, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jooq_demo.Field_master.sno</code>.
     */
    public FieldMasterRecord setSno(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>jooq_demo.Field_master.sno</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "sno", nullable = false, precision = 10)
    public Integer getSno() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>jooq_demo.Field_master.tab_id</code>.
     */
    public FieldMasterRecord setTabId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>jooq_demo.Field_master.tab_id</code>.
     */
    @Column(name = "tab_id", precision = 10)
    public Integer getTabId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>jooq_demo.Field_master.form_field_lable</code>.
     */
    public FieldMasterRecord setFormFieldLable(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>jooq_demo.Field_master.form_field_lable</code>.
     */
    @Column(name = "form_field_lable", length = 45)
        @Size(max = 45)
    public String getFormFieldLable() {
        return (String) get(2);
    }

    /**
     * Setter for <code>jooq_demo.Field_master.form_field_id</code>.
     */
    public FieldMasterRecord setFormFieldId(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>jooq_demo.Field_master.form_field_id</code>.
     */
    @Column(name = "form_field_id", length = 45)
        @Size(max = 45)
    public String getFormFieldId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>jooq_demo.Field_master.RPMV</code>.
     */
    public FieldMasterRecord setRpmv(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>jooq_demo.Field_master.RPMV</code>.
     */
    @Column(name = "RPMV", length = 45)
    @Size(max = 45)
    public String getRpmv() {
        return (String) get(4);
    }

    /**
     * Setter for <code>jooq_demo.Field_master.FRMR</code>.
     */
    public FieldMasterRecord setFrmr(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>jooq_demo.Field_master.FRMR</code>.
     */
    @Column(name = "FRMR", length = 45)
    @Size(max = 45)
    public String getFrmr() {
        return (String) get(5);
    }

    /**
     * Setter for <code>jooq_demo.Field_master.ATPY</code>.
     */
    public FieldMasterRecord setAtpy(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>jooq_demo.Field_master.ATPY</code>.
     */
    @Column(name = "ATPY", length = 45)
    @Size(max = 45)
    public String getAtpy() {
        return (String) get(6);
    }

    /**
     * Setter for <code>jooq_demo.Field_master.status</code>.
     */
    public FieldMasterRecord setStatus(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>jooq_demo.Field_master.status</code>.
     */
    @Column(name = "status", length = 45)
    @Size(max = 45)
    public String getStatus() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Integer, String, String, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, Integer, String, String, String, String, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return FieldMaster.FIELD_MASTER.SNO;
    }

    @Override
    public Field<Integer> field2() {
        return FieldMaster.FIELD_MASTER.TAB_ID;
    }

    @Override
    public Field<String> field3() {
        return FieldMaster.FIELD_MASTER.FORM_FIELD_LABLE;
    }

    @Override
    public Field<String> field4() {
        return FieldMaster.FIELD_MASTER.FORM_FIELD_ID;
    }

    @Override
    public Field<String> field5() {
        return FieldMaster.FIELD_MASTER.RPMV;
    }

    @Override
    public Field<String> field6() {
        return FieldMaster.FIELD_MASTER.FRMR;
    }

    @Override
    public Field<String> field7() {
        return FieldMaster.FIELD_MASTER.ATPY;
    }

    @Override
    public Field<String> field8() {
        return FieldMaster.FIELD_MASTER.STATUS;
    }

    @Override
    public Integer component1() {
        return getSno();
    }

    @Override
    public Integer component2() {
        return getTabId();
    }

    @Override
    public String component3() {
        return getFormFieldLable();
    }

    @Override
    public String component4() {
        return getFormFieldId();
    }

    @Override
    public String component5() {
        return getRpmv();
    }

    @Override
    public String component6() {
        return getFrmr();
    }

    @Override
    public String component7() {
        return getAtpy();
    }

    @Override
    public String component8() {
        return getStatus();
    }

    @Override
    public Integer value1() {
        return getSno();
    }

    @Override
    public Integer value2() {
        return getTabId();
    }

    @Override
    public String value3() {
        return getFormFieldLable();
    }

    @Override
    public String value4() {
        return getFormFieldId();
    }

    @Override
    public String value5() {
        return getRpmv();
    }

    @Override
    public String value6() {
        return getFrmr();
    }

    @Override
    public String value7() {
        return getAtpy();
    }

    @Override
    public String value8() {
        return getStatus();
    }

    @Override
    public FieldMasterRecord value1(Integer value) {
        setSno(value);
        return this;
    }

    @Override
    public FieldMasterRecord value2(Integer value) {
        setTabId(value);
        return this;
    }

    @Override
    public FieldMasterRecord value3(String value) {
        setFormFieldLable(value);
        return this;
    }

    @Override
    public FieldMasterRecord value4(String value) {
        setFormFieldId(value);
        return this;
    }

    @Override
    public FieldMasterRecord value5(String value) {
        setRpmv(value);
        return this;
    }

    @Override
    public FieldMasterRecord value6(String value) {
        setFrmr(value);
        return this;
    }

    @Override
    public FieldMasterRecord value7(String value) {
        setAtpy(value);
        return this;
    }

    @Override
    public FieldMasterRecord value8(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public FieldMasterRecord values(Integer value1, Integer value2, String value3, String value4, String value5, String value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FieldMasterRecord
     */
    public FieldMasterRecord() {
        super(FieldMaster.FIELD_MASTER);
    }

    /**
     * Create a detached, initialised FieldMasterRecord
     */
    public FieldMasterRecord(Integer sno, Integer tabId, String formFieldLable, String formFieldId, String rpmv, String frmr, String atpy, String status) {
        super(FieldMaster.FIELD_MASTER);

        setSno(sno);
        setTabId(tabId);
        setFormFieldLable(formFieldLable);
        setFormFieldId(formFieldId);
        setRpmv(rpmv);
        setFrmr(frmr);
        setAtpy(atpy);
        setStatus(status);
    }
}
