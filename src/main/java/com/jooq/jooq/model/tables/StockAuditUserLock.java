/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.StockAuditUserLockRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StockAuditUserLock extends TableImpl<StockAuditUserLockRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.stock_audit_user_lock</code>
     */
    public static final StockAuditUserLock STOCK_AUDIT_USER_LOCK = new StockAuditUserLock();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StockAuditUserLockRecord> getRecordType() {
        return StockAuditUserLockRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.stock_audit_user_lock.USER_ID</code>.
     */
    public final TableField<StockAuditUserLockRecord, String> USER_ID = createField(DSL.name("USER_ID"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.stock_audit_user_lock.PLANT_CODE</code>.
     */
    public final TableField<StockAuditUserLockRecord, String> PLANT_CODE = createField(DSL.name("PLANT_CODE"), SQLDataType.VARCHAR(4).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.stock_audit_user_lock.STORAGE_LOCATION</code>.
     */
    public final TableField<StockAuditUserLockRecord, String> STORAGE_LOCATION = createField(DSL.name("STORAGE_LOCATION"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.stock_audit_user_lock.STATUS</code>.
     */
    public final TableField<StockAuditUserLockRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>vendor_portal_pbx.stock_audit_user_lock.DOWNLOADED_DATE</code>.
     */
    public final TableField<StockAuditUserLockRecord, LocalDateTime> DOWNLOADED_DATE = createField(DSL.name("DOWNLOADED_DATE"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.stock_audit_user_lock.DOWNLOADED_BY</code>.
     */
    public final TableField<StockAuditUserLockRecord, String> DOWNLOADED_BY = createField(DSL.name("DOWNLOADED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.stock_audit_user_lock.FLAG</code>.
     */
    public final TableField<StockAuditUserLockRecord, String> FLAG = createField(DSL.name("FLAG"), SQLDataType.VARCHAR(45), this, "");

    private StockAuditUserLock(Name alias, Table<StockAuditUserLockRecord> aliased) {
        this(alias, aliased, null);
    }

    private StockAuditUserLock(Name alias, Table<StockAuditUserLockRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.stock_audit_user_lock</code> table reference
     */
    public StockAuditUserLock(String alias) {
        this(DSL.name(alias), STOCK_AUDIT_USER_LOCK);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.stock_audit_user_lock</code> table reference
     */
    public StockAuditUserLock(Name alias) {
        this(alias, STOCK_AUDIT_USER_LOCK);
    }

    /**
     * Create a <code>vendor_portal_pbx.stock_audit_user_lock</code> table reference
     */
    public StockAuditUserLock() {
        this(DSL.name("stock_audit_user_lock"), null);
    }

    public <O extends Record> StockAuditUserLock(Table<O> child, ForeignKey<O, StockAuditUserLockRecord> key) {
        super(child, key, STOCK_AUDIT_USER_LOCK);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<StockAuditUserLockRecord> getPrimaryKey() {
        return Keys.KEY_STOCK_AUDIT_USER_LOCK_PRIMARY;
    }

    @Override
    public List<UniqueKey<StockAuditUserLockRecord>> getKeys() {
        return Arrays.<UniqueKey<StockAuditUserLockRecord>>asList(Keys.KEY_STOCK_AUDIT_USER_LOCK_PRIMARY);
    }

    @Override
    public StockAuditUserLock as(String alias) {
        return new StockAuditUserLock(DSL.name(alias), this);
    }

    @Override
    public StockAuditUserLock as(Name alias) {
        return new StockAuditUserLock(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StockAuditUserLock rename(String name) {
        return new StockAuditUserLock(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StockAuditUserLock rename(Name name) {
        return new StockAuditUserLock(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, String, LocalDateTime, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
