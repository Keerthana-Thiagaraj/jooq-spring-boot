/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.CcmsSecurityTypeMasterRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CcmsSecurityTypeMaster extends TableImpl<CcmsSecurityTypeMasterRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.ccms_security_type_master</code>
     */
    public static final CcmsSecurityTypeMaster CCMS_SECURITY_TYPE_MASTER = new CcmsSecurityTypeMaster();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CcmsSecurityTypeMasterRecord> getRecordType() {
        return CcmsSecurityTypeMasterRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.ccms_security_type_master.id</code>.
     */
    public final TableField<CcmsSecurityTypeMasterRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_security_type_master.security_type</code>.
     */
    public final TableField<CcmsSecurityTypeMasterRecord, String> SECURITY_TYPE = createField(DSL.name("security_type"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_security_type_master.security_name</code>.
     */
    public final TableField<CcmsSecurityTypeMasterRecord, String> SECURITY_NAME = createField(DSL.name("security_name"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_security_type_master.status</code>.
     */
    public final TableField<CcmsSecurityTypeMasterRecord, String> STATUS = createField(DSL.name("status"), SQLDataType.VARCHAR(45).defaultValue(DSL.inline("A", SQLDataType.VARCHAR)), this, "");

    private CcmsSecurityTypeMaster(Name alias, Table<CcmsSecurityTypeMasterRecord> aliased) {
        this(alias, aliased, null);
    }

    private CcmsSecurityTypeMaster(Name alias, Table<CcmsSecurityTypeMasterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.ccms_security_type_master</code> table reference
     */
    public CcmsSecurityTypeMaster(String alias) {
        this(DSL.name(alias), CCMS_SECURITY_TYPE_MASTER);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.ccms_security_type_master</code> table reference
     */
    public CcmsSecurityTypeMaster(Name alias) {
        this(alias, CCMS_SECURITY_TYPE_MASTER);
    }

    /**
     * Create a <code>vendor_portal_pbx.ccms_security_type_master</code> table reference
     */
    public CcmsSecurityTypeMaster() {
        this(DSL.name("ccms_security_type_master"), null);
    }

    public <O extends Record> CcmsSecurityTypeMaster(Table<O> child, ForeignKey<O, CcmsSecurityTypeMasterRecord> key) {
        super(child, key, CCMS_SECURITY_TYPE_MASTER);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public Identity<CcmsSecurityTypeMasterRecord, Integer> getIdentity() {
        return (Identity<CcmsSecurityTypeMasterRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CcmsSecurityTypeMasterRecord> getPrimaryKey() {
        return Keys.KEY_CCMS_SECURITY_TYPE_MASTER_PRIMARY;
    }

    @Override
    public List<UniqueKey<CcmsSecurityTypeMasterRecord>> getKeys() {
        return Arrays.<UniqueKey<CcmsSecurityTypeMasterRecord>>asList(Keys.KEY_CCMS_SECURITY_TYPE_MASTER_PRIMARY);
    }

    @Override
    public CcmsSecurityTypeMaster as(String alias) {
        return new CcmsSecurityTypeMaster(DSL.name(alias), this);
    }

    @Override
    public CcmsSecurityTypeMaster as(Name alias) {
        return new CcmsSecurityTypeMaster(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CcmsSecurityTypeMaster rename(String name) {
        return new CcmsSecurityTypeMaster(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CcmsSecurityTypeMaster rename(Name name) {
        return new CcmsSecurityTypeMaster(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
