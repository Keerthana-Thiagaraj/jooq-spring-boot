/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.PincodeMasterRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PincodeMaster extends TableImpl<PincodeMasterRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.pincode_master</code>
     */
    public static final PincodeMaster PINCODE_MASTER = new PincodeMaster();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PincodeMasterRecord> getRecordType() {
        return PincodeMasterRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.pincode_master.PINCODE</code>.
     */
    public final TableField<PincodeMasterRecord, String> PINCODE = createField(DSL.name("PINCODE"), SQLDataType.VARCHAR(7).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.pincode_master.REGION_CODE</code>.
     */
    public final TableField<PincodeMasterRecord, String> REGION_CODE = createField(DSL.name("REGION_CODE"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.pincode_master.COUNTRY_CODE</code>.
     */
    public final TableField<PincodeMasterRecord, String> COUNTRY_CODE = createField(DSL.name("COUNTRY_CODE"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.pincode_master.REGION_NAME</code>.
     */
    public final TableField<PincodeMasterRecord, String> REGION_NAME = createField(DSL.name("REGION_NAME"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>vendor_portal_pbx.pincode_master.DISTRICT_NAME</code>.
     */
    public final TableField<PincodeMasterRecord, String> DISTRICT_NAME = createField(DSL.name("DISTRICT_NAME"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>vendor_portal_pbx.pincode_master.STATUS</code>.
     */
    public final TableField<PincodeMasterRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(45), this, "");

    private PincodeMaster(Name alias, Table<PincodeMasterRecord> aliased) {
        this(alias, aliased, null);
    }

    private PincodeMaster(Name alias, Table<PincodeMasterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.pincode_master</code> table reference
     */
    public PincodeMaster(String alias) {
        this(DSL.name(alias), PINCODE_MASTER);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.pincode_master</code> table reference
     */
    public PincodeMaster(Name alias) {
        this(alias, PINCODE_MASTER);
    }

    /**
     * Create a <code>vendor_portal_pbx.pincode_master</code> table reference
     */
    public PincodeMaster() {
        this(DSL.name("pincode_master"), null);
    }

    public <O extends Record> PincodeMaster(Table<O> child, ForeignKey<O, PincodeMasterRecord> key) {
        super(child, key, PINCODE_MASTER);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<PincodeMasterRecord> getPrimaryKey() {
        return Keys.KEY_PINCODE_MASTER_PRIMARY;
    }

    @Override
    public List<UniqueKey<PincodeMasterRecord>> getKeys() {
        return Arrays.<UniqueKey<PincodeMasterRecord>>asList(Keys.KEY_PINCODE_MASTER_PRIMARY);
    }

    @Override
    public PincodeMaster as(String alias) {
        return new PincodeMaster(DSL.name(alias), this);
    }

    @Override
    public PincodeMaster as(Name alias) {
        return new PincodeMaster(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PincodeMaster rename(String name) {
        return new PincodeMaster(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PincodeMaster rename(Name name) {
        return new PincodeMaster(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, String, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
