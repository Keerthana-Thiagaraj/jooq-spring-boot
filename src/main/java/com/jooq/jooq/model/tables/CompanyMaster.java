/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.CompanyMasterRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompanyMaster extends TableImpl<CompanyMasterRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.company_master</code>
     */
    public static final CompanyMaster COMPANY_MASTER = new CompanyMaster();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CompanyMasterRecord> getRecordType() {
        return CompanyMasterRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.company_master.COMP_CODE</code>.
     */
    public final TableField<CompanyMasterRecord, String> COMP_CODE = createField(DSL.name("COMP_CODE"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.company_master.DESC</code>.
     */
    public final TableField<CompanyMasterRecord, String> DESC = createField(DSL.name("DESC"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    private CompanyMaster(Name alias, Table<CompanyMasterRecord> aliased) {
        this(alias, aliased, null);
    }

    private CompanyMaster(Name alias, Table<CompanyMasterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.company_master</code> table reference
     */
    public CompanyMaster(String alias) {
        this(DSL.name(alias), COMPANY_MASTER);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.company_master</code> table reference
     */
    public CompanyMaster(Name alias) {
        this(alias, COMPANY_MASTER);
    }

    /**
     * Create a <code>vendor_portal_pbx.company_master</code> table reference
     */
    public CompanyMaster() {
        this(DSL.name("company_master"), null);
    }

    public <O extends Record> CompanyMaster(Table<O> child, ForeignKey<O, CompanyMasterRecord> key) {
        super(child, key, COMPANY_MASTER);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<CompanyMasterRecord> getPrimaryKey() {
        return Keys.KEY_COMPANY_MASTER_PRIMARY;
    }

    @Override
    public List<UniqueKey<CompanyMasterRecord>> getKeys() {
        return Arrays.<UniqueKey<CompanyMasterRecord>>asList(Keys.KEY_COMPANY_MASTER_PRIMARY);
    }

    @Override
    public CompanyMaster as(String alias) {
        return new CompanyMaster(DSL.name(alias), this);
    }

    @Override
    public CompanyMaster as(Name alias) {
        return new CompanyMaster(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CompanyMaster rename(String name) {
        return new CompanyMaster(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CompanyMaster rename(Name name) {
        return new CompanyMaster(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
