/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.records;


import com.jooq.jooq.model.tables.CircularDisplayDetails;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CircularDisplayDetailsRecord extends UpdatableRecordImpl<CircularDisplayDetailsRecord> implements Record9<String, String, String, String, String, String, String, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>vendor_portal_pbx.circular_display_details.COMP_CODE</code>.
     */
    public CircularDisplayDetailsRecord setCompCode(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.circular_display_details.COMP_CODE</code>.
     */
    public String getCompCode() {
        return (String) get(0);
    }

    /**
     * Setter for <code>vendor_portal_pbx.circular_display_details.CUSTOMER_CODE</code>.
     */
    public CircularDisplayDetailsRecord setCustomerCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.circular_display_details.CUSTOMER_CODE</code>.
     */
    public String getCustomerCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>vendor_portal_pbx.circular_display_details.SERIAL_NO</code>.
     */
    public CircularDisplayDetailsRecord setSerialNo(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.circular_display_details.SERIAL_NO</code>.
     */
    public String getSerialNo() {
        return (String) get(2);
    }

    /**
     * Setter for <code>vendor_portal_pbx.circular_display_details.COUNTRY_CODE</code>.
     */
    public CircularDisplayDetailsRecord setCountryCode(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.circular_display_details.COUNTRY_CODE</code>.
     */
    public String getCountryCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>vendor_portal_pbx.circular_display_details.REGION_CODE</code>.
     */
    public CircularDisplayDetailsRecord setRegionCode(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.circular_display_details.REGION_CODE</code>.
     */
    public String getRegionCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>vendor_portal_pbx.circular_display_details.ROLE_ID</code>.
     */
    public CircularDisplayDetailsRecord setRoleId(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.circular_display_details.ROLE_ID</code>.
     */
    public String getRoleId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>vendor_portal_pbx.circular_display_details.TYPE_ID</code>.
     */
    public CircularDisplayDetailsRecord setTypeId(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.circular_display_details.TYPE_ID</code>.
     */
    public String getTypeId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>vendor_portal_pbx.circular_display_details.BLOCKED_BY</code>.
     */
    public CircularDisplayDetailsRecord setBlockedBy(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.circular_display_details.BLOCKED_BY</code>.
     */
    public String getBlockedBy() {
        return (String) get(7);
    }

    /**
     * Setter for <code>vendor_portal_pbx.circular_display_details.BLOCKED_ON</code>.
     */
    public CircularDisplayDetailsRecord setBlockedOn(LocalDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.circular_display_details.BLOCKED_ON</code>.
     */
    public LocalDateTime getBlockedOn() {
        return (LocalDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<String, String, String> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, String, String, String, String, String, String, String, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<String, String, String, String, String, String, String, String, LocalDateTime> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return CircularDisplayDetails.CIRCULAR_DISPLAY_DETAILS.COMP_CODE;
    }

    @Override
    public Field<String> field2() {
        return CircularDisplayDetails.CIRCULAR_DISPLAY_DETAILS.CUSTOMER_CODE;
    }

    @Override
    public Field<String> field3() {
        return CircularDisplayDetails.CIRCULAR_DISPLAY_DETAILS.SERIAL_NO;
    }

    @Override
    public Field<String> field4() {
        return CircularDisplayDetails.CIRCULAR_DISPLAY_DETAILS.COUNTRY_CODE;
    }

    @Override
    public Field<String> field5() {
        return CircularDisplayDetails.CIRCULAR_DISPLAY_DETAILS.REGION_CODE;
    }

    @Override
    public Field<String> field6() {
        return CircularDisplayDetails.CIRCULAR_DISPLAY_DETAILS.ROLE_ID;
    }

    @Override
    public Field<String> field7() {
        return CircularDisplayDetails.CIRCULAR_DISPLAY_DETAILS.TYPE_ID;
    }

    @Override
    public Field<String> field8() {
        return CircularDisplayDetails.CIRCULAR_DISPLAY_DETAILS.BLOCKED_BY;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return CircularDisplayDetails.CIRCULAR_DISPLAY_DETAILS.BLOCKED_ON;
    }

    @Override
    public String component1() {
        return getCompCode();
    }

    @Override
    public String component2() {
        return getCustomerCode();
    }

    @Override
    public String component3() {
        return getSerialNo();
    }

    @Override
    public String component4() {
        return getCountryCode();
    }

    @Override
    public String component5() {
        return getRegionCode();
    }

    @Override
    public String component6() {
        return getRoleId();
    }

    @Override
    public String component7() {
        return getTypeId();
    }

    @Override
    public String component8() {
        return getBlockedBy();
    }

    @Override
    public LocalDateTime component9() {
        return getBlockedOn();
    }

    @Override
    public String value1() {
        return getCompCode();
    }

    @Override
    public String value2() {
        return getCustomerCode();
    }

    @Override
    public String value3() {
        return getSerialNo();
    }

    @Override
    public String value4() {
        return getCountryCode();
    }

    @Override
    public String value5() {
        return getRegionCode();
    }

    @Override
    public String value6() {
        return getRoleId();
    }

    @Override
    public String value7() {
        return getTypeId();
    }

    @Override
    public String value8() {
        return getBlockedBy();
    }

    @Override
    public LocalDateTime value9() {
        return getBlockedOn();
    }

    @Override
    public CircularDisplayDetailsRecord value1(String value) {
        setCompCode(value);
        return this;
    }

    @Override
    public CircularDisplayDetailsRecord value2(String value) {
        setCustomerCode(value);
        return this;
    }

    @Override
    public CircularDisplayDetailsRecord value3(String value) {
        setSerialNo(value);
        return this;
    }

    @Override
    public CircularDisplayDetailsRecord value4(String value) {
        setCountryCode(value);
        return this;
    }

    @Override
    public CircularDisplayDetailsRecord value5(String value) {
        setRegionCode(value);
        return this;
    }

    @Override
    public CircularDisplayDetailsRecord value6(String value) {
        setRoleId(value);
        return this;
    }

    @Override
    public CircularDisplayDetailsRecord value7(String value) {
        setTypeId(value);
        return this;
    }

    @Override
    public CircularDisplayDetailsRecord value8(String value) {
        setBlockedBy(value);
        return this;
    }

    @Override
    public CircularDisplayDetailsRecord value9(LocalDateTime value) {
        setBlockedOn(value);
        return this;
    }

    @Override
    public CircularDisplayDetailsRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, LocalDateTime value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CircularDisplayDetailsRecord
     */
    public CircularDisplayDetailsRecord() {
        super(CircularDisplayDetails.CIRCULAR_DISPLAY_DETAILS);
    }

    /**
     * Create a detached, initialised CircularDisplayDetailsRecord
     */
    public CircularDisplayDetailsRecord(String compCode, String customerCode, String serialNo, String countryCode, String regionCode, String roleId, String typeId, String blockedBy, LocalDateTime blockedOn) {
        super(CircularDisplayDetails.CIRCULAR_DISPLAY_DETAILS);

        setCompCode(compCode);
        setCustomerCode(customerCode);
        setSerialNo(serialNo);
        setCountryCode(countryCode);
        setRegionCode(regionCode);
        setRoleId(roleId);
        setTypeId(typeId);
        setBlockedBy(blockedBy);
        setBlockedOn(blockedOn);
    }
}
