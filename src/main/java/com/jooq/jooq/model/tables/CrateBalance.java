/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.CrateBalanceRecord;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row17;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CrateBalance extends TableImpl<CrateBalanceRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.crate_balance</code>
     */
    public static final CrateBalance CRATE_BALANCE = new CrateBalance();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrateBalanceRecord> getRecordType() {
        return CrateBalanceRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.crate_balance.WERKS</code>.
     */
    public final TableField<CrateBalanceRecord, String> WERKS = createField(DSL.name("WERKS"), SQLDataType.VARCHAR(4).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.crate_balance.KUNNR</code>.
     */
    public final TableField<CrateBalanceRecord, String> KUNNR = createField(DSL.name("KUNNR"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.crate_balance.MATNR</code>.
     */
    public final TableField<CrateBalanceRecord, String> MATNR = createField(DSL.name("MATNR"), SQLDataType.VARCHAR(18).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.crate_balance.BUDAT</code>.
     */
    public final TableField<CrateBalanceRecord, LocalDate> BUDAT = createField(DSL.name("BUDAT"), SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.crate_balance.OPBAL</code>.
     */
    public final TableField<CrateBalanceRecord, Long> OPBAL = createField(DSL.name("OPBAL"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>vendor_portal_pbx.crate_balance.ISSUE</code>.
     */
    public final TableField<CrateBalanceRecord, Long> ISSUE = createField(DSL.name("ISSUE"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>vendor_portal_pbx.crate_balance.RECPT</code>.
     */
    public final TableField<CrateBalanceRecord, Long> RECPT = createField(DSL.name("RECPT"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>vendor_portal_pbx.crate_balance.CLBAL</code>.
     */
    public final TableField<CrateBalanceRecord, Long> CLBAL = createField(DSL.name("CLBAL"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>vendor_portal_pbx.crate_balance.TOTAL</code>.
     */
    public final TableField<CrateBalanceRecord, Long> TOTAL = createField(DSL.name("TOTAL"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>vendor_portal_pbx.crate_balance.DIFFN</code>.
     */
    public final TableField<CrateBalanceRecord, Long> DIFFN = createField(DSL.name("DIFFN"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>vendor_portal_pbx.crate_balance.UMWRK</code>.
     */
    public final TableField<CrateBalanceRecord, String> UMWRK = createField(DSL.name("UMWRK"), SQLDataType.VARCHAR(4), this, "");

    /**
     * The column <code>vendor_portal_pbx.crate_balance.FLAG</code>.
     */
    public final TableField<CrateBalanceRecord, String> FLAG = createField(DSL.name("FLAG"), SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>vendor_portal_pbx.crate_balance.BLUE</code>.
     */
    public final TableField<CrateBalanceRecord, String> BLUE = createField(DSL.name("BLUE"), SQLDataType.VARCHAR(12), this, "");

    /**
     * The column <code>vendor_portal_pbx.crate_balance.RED_SMALL</code>.
     */
    public final TableField<CrateBalanceRecord, String> RED_SMALL = createField(DSL.name("RED_SMALL"), SQLDataType.VARCHAR(12), this, "");

    /**
     * The column <code>vendor_portal_pbx.crate_balance.RED_BIG</code>.
     */
    public final TableField<CrateBalanceRecord, String> RED_BIG = createField(DSL.name("RED_BIG"), SQLDataType.VARCHAR(12), this, "");

    /**
     * The column <code>vendor_portal_pbx.crate_balance.NAME</code>.
     */
    public final TableField<CrateBalanceRecord, String> NAME = createField(DSL.name("NAME"), SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>vendor_portal_pbx.crate_balance.TOTAL1</code>.
     */
    public final TableField<CrateBalanceRecord, Long> TOTAL1 = createField(DSL.name("TOTAL1"), SQLDataType.BIGINT, this, "");

    private CrateBalance(Name alias, Table<CrateBalanceRecord> aliased) {
        this(alias, aliased, null);
    }

    private CrateBalance(Name alias, Table<CrateBalanceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.crate_balance</code> table reference
     */
    public CrateBalance(String alias) {
        this(DSL.name(alias), CRATE_BALANCE);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.crate_balance</code> table reference
     */
    public CrateBalance(Name alias) {
        this(alias, CRATE_BALANCE);
    }

    /**
     * Create a <code>vendor_portal_pbx.crate_balance</code> table reference
     */
    public CrateBalance() {
        this(DSL.name("crate_balance"), null);
    }

    public <O extends Record> CrateBalance(Table<O> child, ForeignKey<O, CrateBalanceRecord> key) {
        super(child, key, CRATE_BALANCE);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<CrateBalanceRecord> getPrimaryKey() {
        return Keys.KEY_CRATE_BALANCE_PRIMARY;
    }

    @Override
    public List<UniqueKey<CrateBalanceRecord>> getKeys() {
        return Arrays.<UniqueKey<CrateBalanceRecord>>asList(Keys.KEY_CRATE_BALANCE_PRIMARY);
    }

    @Override
    public CrateBalance as(String alias) {
        return new CrateBalance(DSL.name(alias), this);
    }

    @Override
    public CrateBalance as(Name alias) {
        return new CrateBalance(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CrateBalance rename(String name) {
        return new CrateBalance(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CrateBalance rename(Name name) {
        return new CrateBalance(name, null);
    }

    // -------------------------------------------------------------------------
    // Row17 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row17<String, String, String, LocalDate, Long, Long, Long, Long, Long, Long, String, String, String, String, String, String, Long> fieldsRow() {
        return (Row17) super.fieldsRow();
    }
}
