/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.FieldForceStaffHmbRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FieldForceStaffHmb extends TableImpl<FieldForceStaffHmbRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.field_force_staff_hmb</code>
     */
    public static final FieldForceStaffHmb FIELD_FORCE_STAFF_HMB = new FieldForceStaffHmb();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FieldForceStaffHmbRecord> getRecordType() {
        return FieldForceStaffHmbRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.field_force_staff_hmb.PLANT_CODE</code>.
     */
    public final TableField<FieldForceStaffHmbRecord, String> PLANT_CODE = createField(DSL.name("PLANT_CODE"), SQLDataType.VARCHAR(4).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.field_force_staff_hmb.HMB</code>.
     */
    public final TableField<FieldForceStaffHmbRecord, String> HMB = createField(DSL.name("HMB"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.field_force_staff_hmb.VENDOR</code>.
     */
    public final TableField<FieldForceStaffHmbRecord, String> VENDOR = createField(DSL.name("VENDOR"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.field_force_staff_hmb.HMB_NAME</code>.
     */
    public final TableField<FieldForceStaffHmbRecord, String> HMB_NAME = createField(DSL.name("HMB_NAME"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.field_force_staff_hmb.STATUS</code>.
     */
    public final TableField<FieldForceStaffHmbRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(1), this, "");

    private FieldForceStaffHmb(Name alias, Table<FieldForceStaffHmbRecord> aliased) {
        this(alias, aliased, null);
    }

    private FieldForceStaffHmb(Name alias, Table<FieldForceStaffHmbRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.field_force_staff_hmb</code> table reference
     */
    public FieldForceStaffHmb(String alias) {
        this(DSL.name(alias), FIELD_FORCE_STAFF_HMB);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.field_force_staff_hmb</code> table reference
     */
    public FieldForceStaffHmb(Name alias) {
        this(alias, FIELD_FORCE_STAFF_HMB);
    }

    /**
     * Create a <code>vendor_portal_pbx.field_force_staff_hmb</code> table reference
     */
    public FieldForceStaffHmb() {
        this(DSL.name("field_force_staff_hmb"), null);
    }

    public <O extends Record> FieldForceStaffHmb(Table<O> child, ForeignKey<O, FieldForceStaffHmbRecord> key) {
        super(child, key, FIELD_FORCE_STAFF_HMB);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<FieldForceStaffHmbRecord> getPrimaryKey() {
        return Keys.KEY_FIELD_FORCE_STAFF_HMB_PRIMARY;
    }

    @Override
    public List<UniqueKey<FieldForceStaffHmbRecord>> getKeys() {
        return Arrays.<UniqueKey<FieldForceStaffHmbRecord>>asList(Keys.KEY_FIELD_FORCE_STAFF_HMB_PRIMARY);
    }

    @Override
    public FieldForceStaffHmb as(String alias) {
        return new FieldForceStaffHmb(DSL.name(alias), this);
    }

    @Override
    public FieldForceStaffHmb as(Name alias) {
        return new FieldForceStaffHmb(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FieldForceStaffHmb rename(String name) {
        return new FieldForceStaffHmb(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FieldForceStaffHmb rename(Name name) {
        return new FieldForceStaffHmb(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
