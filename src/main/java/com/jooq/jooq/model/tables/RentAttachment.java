/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.RentAttachmentRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RentAttachment extends TableImpl<RentAttachmentRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.rent_attachment</code>
     */
    public static final RentAttachment RENT_ATTACHMENT = new RentAttachment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RentAttachmentRecord> getRecordType() {
        return RentAttachmentRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.rent_attachment.COMP_CODE</code>.
     */
    public final TableField<RentAttachmentRecord, String> COMP_CODE = createField(DSL.name("COMP_CODE"), SQLDataType.VARCHAR(4).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.rent_attachment.RENT_ID</code>.
     */
    public final TableField<RentAttachmentRecord, String> RENT_ID = createField(DSL.name("RENT_ID"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.rent_attachment.FILE_NAME</code>.
     */
    public final TableField<RentAttachmentRecord, String> FILE_NAME = createField(DSL.name("FILE_NAME"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>vendor_portal_pbx.rent_attachment.CONTENT</code>.
     */
    public final TableField<RentAttachmentRecord, String> CONTENT = createField(DSL.name("CONTENT"), SQLDataType.CLOB, this, "");

    private RentAttachment(Name alias, Table<RentAttachmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private RentAttachment(Name alias, Table<RentAttachmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.rent_attachment</code> table reference
     */
    public RentAttachment(String alias) {
        this(DSL.name(alias), RENT_ATTACHMENT);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.rent_attachment</code> table reference
     */
    public RentAttachment(Name alias) {
        this(alias, RENT_ATTACHMENT);
    }

    /**
     * Create a <code>vendor_portal_pbx.rent_attachment</code> table reference
     */
    public RentAttachment() {
        this(DSL.name("rent_attachment"), null);
    }

    public <O extends Record> RentAttachment(Table<O> child, ForeignKey<O, RentAttachmentRecord> key) {
        super(child, key, RENT_ATTACHMENT);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<RentAttachmentRecord> getPrimaryKey() {
        return Keys.KEY_RENT_ATTACHMENT_PRIMARY;
    }

    @Override
    public List<UniqueKey<RentAttachmentRecord>> getKeys() {
        return Arrays.<UniqueKey<RentAttachmentRecord>>asList(Keys.KEY_RENT_ATTACHMENT_PRIMARY);
    }

    @Override
    public RentAttachment as(String alias) {
        return new RentAttachment(DSL.name(alias), this);
    }

    @Override
    public RentAttachment as(Name alias) {
        return new RentAttachment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RentAttachment rename(String name) {
        return new RentAttachment(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RentAttachment rename(Name name) {
        return new RentAttachment(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
