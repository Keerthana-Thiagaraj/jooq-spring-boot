/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.BpCustomerRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BpCustomer extends TableImpl<BpCustomerRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.bp_customer</code>
     */
    public static final BpCustomer BP_CUSTOMER = new BpCustomer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BpCustomerRecord> getRecordType() {
        return BpCustomerRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.bp_customer.id</code>.
     */
    public final TableField<BpCustomerRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.bp_customer.customer_name</code>.
     */
    public final TableField<BpCustomerRecord, String> CUSTOMER_NAME = createField(DSL.name("customer_name"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.bp_customer.customer_code</code>.
     */
    public final TableField<BpCustomerRecord, String> CUSTOMER_CODE = createField(DSL.name("customer_code"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.bp_customer.mobile</code>.
     */
    public final TableField<BpCustomerRecord, String> MOBILE = createField(DSL.name("mobile"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.bp_customer.product_id</code>.
     */
    public final TableField<BpCustomerRecord, Integer> PRODUCT_ID = createField(DSL.name("product_id"), SQLDataType.INTEGER, this, "");

    private BpCustomer(Name alias, Table<BpCustomerRecord> aliased) {
        this(alias, aliased, null);
    }

    private BpCustomer(Name alias, Table<BpCustomerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.bp_customer</code> table reference
     */
    public BpCustomer(String alias) {
        this(DSL.name(alias), BP_CUSTOMER);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.bp_customer</code> table reference
     */
    public BpCustomer(Name alias) {
        this(alias, BP_CUSTOMER);
    }

    /**
     * Create a <code>vendor_portal_pbx.bp_customer</code> table reference
     */
    public BpCustomer() {
        this(DSL.name("bp_customer"), null);
    }

    public <O extends Record> BpCustomer(Table<O> child, ForeignKey<O, BpCustomerRecord> key) {
        super(child, key, BP_CUSTOMER);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<BpCustomerRecord> getPrimaryKey() {
        return Keys.KEY_BP_CUSTOMER_PRIMARY;
    }

    @Override
    public List<UniqueKey<BpCustomerRecord>> getKeys() {
        return Arrays.<UniqueKey<BpCustomerRecord>>asList(Keys.KEY_BP_CUSTOMER_PRIMARY);
    }

    @Override
    public BpCustomer as(String alias) {
        return new BpCustomer(DSL.name(alias), this);
    }

    @Override
    public BpCustomer as(Name alias) {
        return new BpCustomer(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BpCustomer rename(String name) {
        return new BpCustomer(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BpCustomer rename(Name name) {
        return new BpCustomer(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, String, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
