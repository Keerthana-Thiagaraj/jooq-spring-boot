/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.pojos;


import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "field_tab_master",
    schema = "jooq_demo",
    uniqueConstraints = {
        @UniqueConstraint(name = "KEY_field_tab_master_PRIMARY", columnNames = { "tab_id" })
    }
)
public class FieldTabMaster implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer tabId;
    private String  tabLable;
    private String  tabName;
    private String  status;

    public FieldTabMaster() {}

    public FieldTabMaster(FieldTabMaster value) {
        this.tabId = value.tabId;
        this.tabLable = value.tabLable;
        this.tabName = value.tabName;
        this.status = value.status;
    }

    public FieldTabMaster(
        Integer tabId,
        String  tabLable,
        String  tabName,
        String  status
    ) {
        this.tabId = tabId;
        this.tabLable = tabLable;
        this.tabName = tabName;
        this.status = status;
    }

    /**
     * Getter for <code>jooq_demo.field_tab_master.tab_id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "tab_id", nullable = false, precision = 10)
    public Integer getTabId() {
        return this.tabId;
    }

    /**
     * Setter for <code>jooq_demo.field_tab_master.tab_id</code>.
     */
    public FieldTabMaster setTabId(Integer tabId) {
        this.tabId = tabId;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.field_tab_master.tab_lable</code>.
     */
    @Column(name = "tab_lable", length = 45)
    @Size(max = 45)
    public String getTabLable() {
        return this.tabLable;
    }

    /**
     * Setter for <code>jooq_demo.field_tab_master.tab_lable</code>.
     */
    public FieldTabMaster setTabLable(String tabLable) {
        this.tabLable = tabLable;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.field_tab_master.tab_name</code>.
     */
    @Column(name = "tab_name", length = 45)
    @Size(max = 45)
    public String getTabName() {
        return this.tabName;
    }

    /**
     * Setter for <code>jooq_demo.field_tab_master.tab_name</code>.
     */
    public FieldTabMaster setTabName(String tabName) {
        this.tabName = tabName;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.field_tab_master.status</code>.
     */
    @Column(name = "status", length = 45)
    @Size(max = 45)
    public String getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>jooq_demo.field_tab_master.status</code>.
     */
    public FieldTabMaster setStatus(String status) {
        this.status = status;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final FieldTabMaster other = (FieldTabMaster) obj;
        if (tabId == null) {
            if (other.tabId != null)
                return false;
        }
        else if (!tabId.equals(other.tabId))
            return false;
        if (tabLable == null) {
            if (other.tabLable != null)
                return false;
        }
        else if (!tabLable.equals(other.tabLable))
            return false;
        if (tabName == null) {
            if (other.tabName != null)
                return false;
        }
        else if (!tabName.equals(other.tabName))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.tabId == null) ? 0 : this.tabId.hashCode());
        result = prime * result + ((this.tabLable == null) ? 0 : this.tabLable.hashCode());
        result = prime * result + ((this.tabName == null) ? 0 : this.tabName.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("FieldTabMaster (");

        sb.append(tabId);
        sb.append(", ").append(tabLable);
        sb.append(", ").append(tabName);
        sb.append(", ").append(status);

        sb.append(")");
        return sb.toString();
    }
}
