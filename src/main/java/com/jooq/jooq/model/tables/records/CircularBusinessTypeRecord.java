/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.records;


import com.jooq.jooq.model.tables.CircularBusinessType;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CircularBusinessTypeRecord extends UpdatableRecordImpl<CircularBusinessTypeRecord> implements Record4<String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>vendor_portal_pbx.circular_business_type.ACC_GRP_CODE</code>.
     */
    public CircularBusinessTypeRecord setAccGrpCode(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.circular_business_type.ACC_GRP_CODE</code>.
     */
    public String getAccGrpCode() {
        return (String) get(0);
    }

    /**
     * Setter for <code>vendor_portal_pbx.circular_business_type.ACC_GRP_NAME</code>.
     */
    public CircularBusinessTypeRecord setAccGrpName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.circular_business_type.ACC_GRP_NAME</code>.
     */
    public String getAccGrpName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>vendor_portal_pbx.circular_business_type.CATEGORY</code>.
     */
    public CircularBusinessTypeRecord setCategory(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.circular_business_type.CATEGORY</code>.
     */
    public String getCategory() {
        return (String) get(2);
    }

    /**
     * Setter for <code>vendor_portal_pbx.circular_business_type.OPTION_TYPE</code>.
     */
    public CircularBusinessTypeRecord setOptionType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.circular_business_type.OPTION_TYPE</code>.
     */
    public String getOptionType() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return CircularBusinessType.CIRCULAR_BUSINESS_TYPE.ACC_GRP_CODE;
    }

    @Override
    public Field<String> field2() {
        return CircularBusinessType.CIRCULAR_BUSINESS_TYPE.ACC_GRP_NAME;
    }

    @Override
    public Field<String> field3() {
        return CircularBusinessType.CIRCULAR_BUSINESS_TYPE.CATEGORY;
    }

    @Override
    public Field<String> field4() {
        return CircularBusinessType.CIRCULAR_BUSINESS_TYPE.OPTION_TYPE;
    }

    @Override
    public String component1() {
        return getAccGrpCode();
    }

    @Override
    public String component2() {
        return getAccGrpName();
    }

    @Override
    public String component3() {
        return getCategory();
    }

    @Override
    public String component4() {
        return getOptionType();
    }

    @Override
    public String value1() {
        return getAccGrpCode();
    }

    @Override
    public String value2() {
        return getAccGrpName();
    }

    @Override
    public String value3() {
        return getCategory();
    }

    @Override
    public String value4() {
        return getOptionType();
    }

    @Override
    public CircularBusinessTypeRecord value1(String value) {
        setAccGrpCode(value);
        return this;
    }

    @Override
    public CircularBusinessTypeRecord value2(String value) {
        setAccGrpName(value);
        return this;
    }

    @Override
    public CircularBusinessTypeRecord value3(String value) {
        setCategory(value);
        return this;
    }

    @Override
    public CircularBusinessTypeRecord value4(String value) {
        setOptionType(value);
        return this;
    }

    @Override
    public CircularBusinessTypeRecord values(String value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CircularBusinessTypeRecord
     */
    public CircularBusinessTypeRecord() {
        super(CircularBusinessType.CIRCULAR_BUSINESS_TYPE);
    }

    /**
     * Create a detached, initialised CircularBusinessTypeRecord
     */
    public CircularBusinessTypeRecord(String accGrpCode, String accGrpName, String category, String optionType) {
        super(CircularBusinessType.CIRCULAR_BUSINESS_TYPE);

        setAccGrpCode(accGrpCode);
        setAccGrpName(accGrpName);
        setCategory(category);
        setOptionType(optionType);
    }
}
