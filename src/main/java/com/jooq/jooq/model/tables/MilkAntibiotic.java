/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.MilkAntibioticRecord;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MilkAntibiotic extends TableImpl<MilkAntibioticRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.milk_antibiotic</code>
     */
    public static final MilkAntibiotic MILK_ANTIBIOTIC = new MilkAntibiotic();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MilkAntibioticRecord> getRecordType() {
        return MilkAntibioticRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.WERKS</code>.
     */
    public final TableField<MilkAntibioticRecord, String> WERKS = createField(DSL.name("WERKS"), SQLDataType.VARCHAR(4).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.CRDAT</code>.
     */
    public final TableField<MilkAntibioticRecord, LocalDate> CRDAT = createField(DSL.name("CRDAT"), SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.SHIFT</code>.
     */
    public final TableField<MilkAntibioticRecord, String> SHIFT = createField(DSL.name("SHIFT"), SQLDataType.VARCHAR(2).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.CHANNEL</code>.
     */
    public final TableField<MilkAntibioticRecord, String> CHANNEL = createField(DSL.name("CHANNEL"), SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.INSPECTION_LOT</code>.
     */
    public final TableField<MilkAntibioticRecord, String> INSPECTION_LOT = createField(DSL.name("INSPECTION_LOT"), SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.SOCIETY</code>.
     */
    public final TableField<MilkAntibioticRecord, String> SOCIETY = createField(DSL.name("SOCIETY"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.MILK_CATEG</code>.
     */
    public final TableField<MilkAntibioticRecord, String> MILK_CATEG = createField(DSL.name("MILK_CATEG"), SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.MILK_TYPE</code>.
     */
    public final TableField<MilkAntibioticRecord, String> MILK_TYPE = createField(DSL.name("MILK_TYPE"), SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.J_1KFTBUS</code>.
     */
    public final TableField<MilkAntibioticRecord, String> J_1KFTBUS = createField(DSL.name("J_1KFTBUS"), SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.ROUTE_NO</code>.
     */
    public final TableField<MilkAntibioticRecord, String> ROUTE_NO = createField(DSL.name("ROUTE_NO"), SQLDataType.VARCHAR(6), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.TRANSPORTER</code>.
     */
    public final TableField<MilkAntibioticRecord, String> TRANSPORTER = createField(DSL.name("TRANSPORTER"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.TRANS_TYPE</code>.
     */
    public final TableField<MilkAntibioticRecord, String> TRANS_TYPE = createField(DSL.name("TRANS_TYPE"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.TRUCK_NO</code>.
     */
    public final TableField<MilkAntibioticRecord, String> TRUCK_NO = createField(DSL.name("TRUCK_NO"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.ERFMG</code>.
     */
    public final TableField<MilkAntibioticRecord, BigDecimal> ERFMG = createField(DSL.name("ERFMG"), SQLDataType.DECIMAL(16, 3), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.TRUCK_TIME</code>.
     */
    public final TableField<MilkAntibioticRecord, String> TRUCK_TIME = createField(DSL.name("TRUCK_TIME"), SQLDataType.VARCHAR(12).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.NO_OF_CANS</code>.
     */
    public final TableField<MilkAntibioticRecord, String> NO_OF_CANS = createField(DSL.name("NO_OF_CANS"), SQLDataType.VARCHAR(3), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.FAT_N</code>.
     */
    public final TableField<MilkAntibioticRecord, BigDecimal> FAT_N = createField(DSL.name("FAT_N"), SQLDataType.DECIMAL(7, 2), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.SNF_N</code>.
     */
    public final TableField<MilkAntibioticRecord, BigDecimal> SNF_N = createField(DSL.name("SNF_N"), SQLDataType.DECIMAL(7, 2), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.CLR_N</code>.
     */
    public final TableField<MilkAntibioticRecord, BigDecimal> CLR_N = createField(DSL.name("CLR_N"), SQLDataType.DECIMAL(7, 2), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.MBRT_MINUTES</code>.
     */
    public final TableField<MilkAntibioticRecord, String> MBRT_MINUTES = createField(DSL.name("MBRT_MINUTES"), SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.CONDUCTIVITY</code>.
     */
    public final TableField<MilkAntibioticRecord, BigDecimal> CONDUCTIVITY = createField(DSL.name("CONDUCTIVITY"), SQLDataType.DECIMAL(7, 2), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.TEMPERATURE</code>.
     */
    public final TableField<MilkAntibioticRecord, BigDecimal> TEMPERATURE = createField(DSL.name("TEMPERATURE"), SQLDataType.DECIMAL(7, 2), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.PH</code>.
     */
    public final TableField<MilkAntibioticRecord, BigDecimal> PH = createField(DSL.name("PH"), SQLDataType.DECIMAL(4, 1), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.PROTIEN</code>.
     */
    public final TableField<MilkAntibioticRecord, BigDecimal> PROTIEN = createField(DSL.name("PROTIEN"), SQLDataType.DECIMAL(6, 2), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.ANTIBIOTIC</code>.
     */
    public final TableField<MilkAntibioticRecord, String> ANTIBIOTIC = createField(DSL.name("ANTIBIOTIC"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.AUFNR</code>.
     */
    public final TableField<MilkAntibioticRecord, String> AUFNR = createField(DSL.name("AUFNR"), SQLDataType.VARCHAR(12), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.SPCLEAN</code>.
     */
    public final TableField<MilkAntibioticRecord, String> SPCLEAN = createField(DSL.name("SPCLEAN"), SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.REPGAP</code>.
     */
    public final TableField<MilkAntibioticRecord, String> REPGAP = createField(DSL.name("REPGAP"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.DAMCANS</code>.
     */
    public final TableField<MilkAntibioticRecord, Integer> DAMCANS = createField(DSL.name("DAMCANS"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.DAMLIDS</code>.
     */
    public final TableField<MilkAntibioticRecord, Integer> DAMLIDS = createField(DSL.name("DAMLIDS"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.CANNO</code>.
     */
    public final TableField<MilkAntibioticRecord, Integer> CANNO = createField(DSL.name("CANNO"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.ADULTERATION</code>.
     */
    public final TableField<MilkAntibioticRecord, String> ADULTERATION = createField(DSL.name("ADULTERATION"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.E_MATTER</code>.
     */
    public final TableField<MilkAntibioticRecord, String> E_MATTER = createField(DSL.name("E_MATTER"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.OT</code>.
     */
    public final TableField<MilkAntibioticRecord, String> OT = createField(DSL.name("OT"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.ACIDITY</code>.
     */
    public final TableField<MilkAntibioticRecord, String> ACIDITY = createField(DSL.name("ACIDITY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_antibiotic.QUAN</code>.
     */
    public final TableField<MilkAntibioticRecord, BigDecimal> QUAN = createField(DSL.name("QUAN"), SQLDataType.DECIMAL(16, 3), this, "");

    private MilkAntibiotic(Name alias, Table<MilkAntibioticRecord> aliased) {
        this(alias, aliased, null);
    }

    private MilkAntibiotic(Name alias, Table<MilkAntibioticRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.milk_antibiotic</code> table reference
     */
    public MilkAntibiotic(String alias) {
        this(DSL.name(alias), MILK_ANTIBIOTIC);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.milk_antibiotic</code> table reference
     */
    public MilkAntibiotic(Name alias) {
        this(alias, MILK_ANTIBIOTIC);
    }

    /**
     * Create a <code>vendor_portal_pbx.milk_antibiotic</code> table reference
     */
    public MilkAntibiotic() {
        this(DSL.name("milk_antibiotic"), null);
    }

    public <O extends Record> MilkAntibiotic(Table<O> child, ForeignKey<O, MilkAntibioticRecord> key) {
        super(child, key, MILK_ANTIBIOTIC);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<MilkAntibioticRecord> getPrimaryKey() {
        return Keys.KEY_MILK_ANTIBIOTIC_PRIMARY;
    }

    @Override
    public List<UniqueKey<MilkAntibioticRecord>> getKeys() {
        return Arrays.<UniqueKey<MilkAntibioticRecord>>asList(Keys.KEY_MILK_ANTIBIOTIC_PRIMARY);
    }

    @Override
    public MilkAntibiotic as(String alias) {
        return new MilkAntibiotic(DSL.name(alias), this);
    }

    @Override
    public MilkAntibiotic as(Name alias) {
        return new MilkAntibiotic(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MilkAntibiotic rename(String name) {
        return new MilkAntibiotic(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MilkAntibiotic rename(Name name) {
        return new MilkAntibiotic(name, null);
    }
}
