/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.TcReimbursementTypeMasterRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TcReimbursementTypeMaster extends TableImpl<TcReimbursementTypeMasterRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.TC_REIMBURSEMENT_TYPE_MASTER</code>
     */
    public static final TcReimbursementTypeMaster TC_REIMBURSEMENT_TYPE_MASTER = new TcReimbursementTypeMaster();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TcReimbursementTypeMasterRecord> getRecordType() {
        return TcReimbursementTypeMasterRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.TC_REIMBURSEMENT_TYPE_MASTER.ID</code>.
     */
    public final TableField<TcReimbursementTypeMasterRecord, Integer> ID = createField(DSL.name("ID"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_REIMBURSEMENT_TYPE_MASTER.REIMBURSE_TYPE_NAME</code>.
     */
    public final TableField<TcReimbursementTypeMasterRecord, String> REIMBURSE_TYPE_NAME = createField(DSL.name("REIMBURSE_TYPE_NAME"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_REIMBURSEMENT_TYPE_MASTER.STATUS</code>.
     */
    public final TableField<TcReimbursementTypeMasterRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(1), this, "");

    private TcReimbursementTypeMaster(Name alias, Table<TcReimbursementTypeMasterRecord> aliased) {
        this(alias, aliased, null);
    }

    private TcReimbursementTypeMaster(Name alias, Table<TcReimbursementTypeMasterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.TC_REIMBURSEMENT_TYPE_MASTER</code> table reference
     */
    public TcReimbursementTypeMaster(String alias) {
        this(DSL.name(alias), TC_REIMBURSEMENT_TYPE_MASTER);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.TC_REIMBURSEMENT_TYPE_MASTER</code> table reference
     */
    public TcReimbursementTypeMaster(Name alias) {
        this(alias, TC_REIMBURSEMENT_TYPE_MASTER);
    }

    /**
     * Create a <code>vendor_portal_pbx.TC_REIMBURSEMENT_TYPE_MASTER</code> table reference
     */
    public TcReimbursementTypeMaster() {
        this(DSL.name("TC_REIMBURSEMENT_TYPE_MASTER"), null);
    }

    public <O extends Record> TcReimbursementTypeMaster(Table<O> child, ForeignKey<O, TcReimbursementTypeMasterRecord> key) {
        super(child, key, TC_REIMBURSEMENT_TYPE_MASTER);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public Identity<TcReimbursementTypeMasterRecord, Integer> getIdentity() {
        return (Identity<TcReimbursementTypeMasterRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<TcReimbursementTypeMasterRecord> getPrimaryKey() {
        return Keys.KEY_TC_REIMBURSEMENT_TYPE_MASTER_PRIMARY;
    }

    @Override
    public List<UniqueKey<TcReimbursementTypeMasterRecord>> getKeys() {
        return Arrays.<UniqueKey<TcReimbursementTypeMasterRecord>>asList(Keys.KEY_TC_REIMBURSEMENT_TYPE_MASTER_PRIMARY);
    }

    @Override
    public TcReimbursementTypeMaster as(String alias) {
        return new TcReimbursementTypeMaster(DSL.name(alias), this);
    }

    @Override
    public TcReimbursementTypeMaster as(Name alias) {
        return new TcReimbursementTypeMaster(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TcReimbursementTypeMaster rename(String name) {
        return new TcReimbursementTypeMaster(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TcReimbursementTypeMaster rename(Name name) {
        return new TcReimbursementTypeMaster(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
