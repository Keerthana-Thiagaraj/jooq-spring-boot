/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.EkoBankerStagingDataRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EkoBankerStagingData extends TableImpl<EkoBankerStagingDataRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.eko_banker_staging_data</code>
     */
    public static final EkoBankerStagingData EKO_BANKER_STAGING_DATA = new EkoBankerStagingData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EkoBankerStagingDataRecord> getRecordType() {
        return EkoBankerStagingDataRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.eko_banker_staging_data.year</code>.
     */
    public final TableField<EkoBankerStagingDataRecord, String> YEAR = createField(DSL.name("year"), SQLDataType.VARCHAR(5).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.eko_banker_staging_data.month</code>.
     */
    public final TableField<EkoBankerStagingDataRecord, String> MONTH = createField(DSL.name("month"), SQLDataType.VARCHAR(2).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.eko_banker_staging_data.plant</code>.
     */
    public final TableField<EkoBankerStagingDataRecord, String> PLANT = createField(DSL.name("plant"), SQLDataType.VARCHAR(6).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.eko_banker_staging_data.society</code>.
     */
    public final TableField<EkoBankerStagingDataRecord, String> SOCIETY = createField(DSL.name("society"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.eko_banker_staging_data.data</code>.
     */
    public final TableField<EkoBankerStagingDataRecord, String> DATA = createField(DSL.name("data"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>vendor_portal_pbx.eko_banker_staging_data.created_on</code>.
     */
    public final TableField<EkoBankerStagingDataRecord, LocalDateTime> CREATED_ON = createField(DSL.name("created_on"), SQLDataType.LOCALDATETIME(0), this, "");

    private EkoBankerStagingData(Name alias, Table<EkoBankerStagingDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private EkoBankerStagingData(Name alias, Table<EkoBankerStagingDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.eko_banker_staging_data</code> table reference
     */
    public EkoBankerStagingData(String alias) {
        this(DSL.name(alias), EKO_BANKER_STAGING_DATA);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.eko_banker_staging_data</code> table reference
     */
    public EkoBankerStagingData(Name alias) {
        this(alias, EKO_BANKER_STAGING_DATA);
    }

    /**
     * Create a <code>vendor_portal_pbx.eko_banker_staging_data</code> table reference
     */
    public EkoBankerStagingData() {
        this(DSL.name("eko_banker_staging_data"), null);
    }

    public <O extends Record> EkoBankerStagingData(Table<O> child, ForeignKey<O, EkoBankerStagingDataRecord> key) {
        super(child, key, EKO_BANKER_STAGING_DATA);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<EkoBankerStagingDataRecord> getPrimaryKey() {
        return Keys.KEY_EKO_BANKER_STAGING_DATA_PRIMARY;
    }

    @Override
    public List<UniqueKey<EkoBankerStagingDataRecord>> getKeys() {
        return Arrays.<UniqueKey<EkoBankerStagingDataRecord>>asList(Keys.KEY_EKO_BANKER_STAGING_DATA_PRIMARY);
    }

    @Override
    public EkoBankerStagingData as(String alias) {
        return new EkoBankerStagingData(DSL.name(alias), this);
    }

    @Override
    public EkoBankerStagingData as(Name alias) {
        return new EkoBankerStagingData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EkoBankerStagingData rename(String name) {
        return new EkoBankerStagingData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EkoBankerStagingData rename(Name name) {
        return new EkoBankerStagingData(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, String, String, String, String, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
