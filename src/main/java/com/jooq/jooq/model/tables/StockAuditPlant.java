/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.StockAuditPlantRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StockAuditPlant extends TableImpl<StockAuditPlantRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.stock_audit_plant</code>
     */
    public static final StockAuditPlant STOCK_AUDIT_PLANT = new StockAuditPlant();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StockAuditPlantRecord> getRecordType() {
        return StockAuditPlantRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.stock_audit_plant.PLANT</code>.
     */
    public final TableField<StockAuditPlantRecord, String> PLANT = createField(DSL.name("PLANT"), SQLDataType.VARCHAR(4).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.stock_audit_plant.PLANT_DESC</code>.
     */
    public final TableField<StockAuditPlantRecord, String> PLANT_DESC = createField(DSL.name("PLANT_DESC"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.stock_audit_plant.CATEGORY</code>.
     */
    public final TableField<StockAuditPlantRecord, String> CATEGORY = createField(DSL.name("CATEGORY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.stock_audit_plant.CREATED_BY</code>.
     */
    public final TableField<StockAuditPlantRecord, String> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.stock_audit_plant.CREATED_ON</code>.
     */
    public final TableField<StockAuditPlantRecord, LocalDateTime> CREATED_ON = createField(DSL.name("CREATED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    private StockAuditPlant(Name alias, Table<StockAuditPlantRecord> aliased) {
        this(alias, aliased, null);
    }

    private StockAuditPlant(Name alias, Table<StockAuditPlantRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.stock_audit_plant</code> table reference
     */
    public StockAuditPlant(String alias) {
        this(DSL.name(alias), STOCK_AUDIT_PLANT);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.stock_audit_plant</code> table reference
     */
    public StockAuditPlant(Name alias) {
        this(alias, STOCK_AUDIT_PLANT);
    }

    /**
     * Create a <code>vendor_portal_pbx.stock_audit_plant</code> table reference
     */
    public StockAuditPlant() {
        this(DSL.name("stock_audit_plant"), null);
    }

    public <O extends Record> StockAuditPlant(Table<O> child, ForeignKey<O, StockAuditPlantRecord> key) {
        super(child, key, STOCK_AUDIT_PLANT);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<StockAuditPlantRecord> getPrimaryKey() {
        return Keys.KEY_STOCK_AUDIT_PLANT_PRIMARY;
    }

    @Override
    public List<UniqueKey<StockAuditPlantRecord>> getKeys() {
        return Arrays.<UniqueKey<StockAuditPlantRecord>>asList(Keys.KEY_STOCK_AUDIT_PLANT_PRIMARY);
    }

    @Override
    public StockAuditPlant as(String alias) {
        return new StockAuditPlant(DSL.name(alias), this);
    }

    @Override
    public StockAuditPlant as(Name alias) {
        return new StockAuditPlant(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StockAuditPlant rename(String name) {
        return new StockAuditPlant(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StockAuditPlant rename(Name name) {
        return new StockAuditPlant(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, String, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
