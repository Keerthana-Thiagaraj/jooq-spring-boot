/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.TeamleadMasterRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeamleadMaster extends TableImpl<TeamleadMasterRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.teamlead_master</code>
     */
    public static final TeamleadMaster TEAMLEAD_MASTER = new TeamleadMaster();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TeamleadMasterRecord> getRecordType() {
        return TeamleadMasterRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.teamlead_master.PLANT</code>.
     */
    public final TableField<TeamleadMasterRecord, String> PLANT = createField(DSL.name("PLANT"), SQLDataType.VARCHAR(4).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.teamlead_master.TL_ID</code>.
     */
    public final TableField<TeamleadMasterRecord, String> TL_ID = createField(DSL.name("TL_ID"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>vendor_portal_pbx.teamlead_master.TL_NAME</code>.
     */
    public final TableField<TeamleadMasterRecord, String> TL_NAME = createField(DSL.name("TL_NAME"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.teamlead_master.STATUS</code>.
     */
    public final TableField<TeamleadMasterRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(1), this, "");

    private TeamleadMaster(Name alias, Table<TeamleadMasterRecord> aliased) {
        this(alias, aliased, null);
    }

    private TeamleadMaster(Name alias, Table<TeamleadMasterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.teamlead_master</code> table reference
     */
    public TeamleadMaster(String alias) {
        this(DSL.name(alias), TEAMLEAD_MASTER);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.teamlead_master</code> table reference
     */
    public TeamleadMaster(Name alias) {
        this(alias, TEAMLEAD_MASTER);
    }

    /**
     * Create a <code>vendor_portal_pbx.teamlead_master</code> table reference
     */
    public TeamleadMaster() {
        this(DSL.name("teamlead_master"), null);
    }

    public <O extends Record> TeamleadMaster(Table<O> child, ForeignKey<O, TeamleadMasterRecord> key) {
        super(child, key, TEAMLEAD_MASTER);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<TeamleadMasterRecord> getPrimaryKey() {
        return Keys.KEY_TEAMLEAD_MASTER_PRIMARY;
    }

    @Override
    public List<UniqueKey<TeamleadMasterRecord>> getKeys() {
        return Arrays.<UniqueKey<TeamleadMasterRecord>>asList(Keys.KEY_TEAMLEAD_MASTER_PRIMARY);
    }

    @Override
    public TeamleadMaster as(String alias) {
        return new TeamleadMaster(DSL.name(alias), this);
    }

    @Override
    public TeamleadMaster as(Name alias) {
        return new TeamleadMaster(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TeamleadMaster rename(String name) {
        return new TeamleadMaster(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TeamleadMaster rename(Name name) {
        return new TeamleadMaster(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
