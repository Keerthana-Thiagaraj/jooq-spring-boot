/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Indexes;
import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.CustomerFreezerAttachmentRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerFreezerAttachment extends TableImpl<CustomerFreezerAttachmentRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.customer_freezer_attachment</code>
     */
    public static final CustomerFreezerAttachment CUSTOMER_FREEZER_ATTACHMENT = new CustomerFreezerAttachment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CustomerFreezerAttachmentRecord> getRecordType() {
        return CustomerFreezerAttachmentRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.customer_freezer_attachment.COMP_CODE</code>.
     */
    public final TableField<CustomerFreezerAttachmentRecord, String> COMP_CODE = createField(DSL.name("COMP_CODE"), SQLDataType.VARCHAR(4).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_freezer_attachment.CUSTOMER_CODE</code>.
     */
    public final TableField<CustomerFreezerAttachmentRecord, String> CUSTOMER_CODE = createField(DSL.name("CUSTOMER_CODE"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_freezer_attachment.RETAILER_SFA_CODE</code>.
     */
    public final TableField<CustomerFreezerAttachmentRecord, String> RETAILER_SFA_CODE = createField(DSL.name("RETAILER_SFA_CODE"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_freezer_attachment.TAG_NO</code>.
     */
    public final TableField<CustomerFreezerAttachmentRecord, String> TAG_NO = createField(DSL.name("TAG_NO"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_freezer_attachment.SERIAL_NO</code>.
     */
    public final TableField<CustomerFreezerAttachmentRecord, String> SERIAL_NO = createField(DSL.name("SERIAL_NO"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_freezer_attachment.ATTACHMENT</code>.
     */
    public final TableField<CustomerFreezerAttachmentRecord, byte[]> ATTACHMENT = createField(DSL.name("ATTACHMENT"), SQLDataType.BLOB, this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_freezer_attachment.ATTACHMENT_NAME</code>.
     */
    public final TableField<CustomerFreezerAttachmentRecord, String> ATTACHMENT_NAME = createField(DSL.name("ATTACHMENT_NAME"), SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_freezer_attachment.ATTACHMENT_TYPE</code>.
     */
    public final TableField<CustomerFreezerAttachmentRecord, String> ATTACHMENT_TYPE = createField(DSL.name("ATTACHMENT_TYPE"), SQLDataType.VARCHAR(250), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_freezer_attachment.ATTACHED_DATETIME</code>.
     */
    public final TableField<CustomerFreezerAttachmentRecord, LocalDateTime> ATTACHED_DATETIME = createField(DSL.name("ATTACHED_DATETIME"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_freezer_attachment.FILE2_ATTACHMENT_NAME</code>.
     */
    public final TableField<CustomerFreezerAttachmentRecord, String> FILE2_ATTACHMENT_NAME = createField(DSL.name("FILE2_ATTACHMENT_NAME"), SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_freezer_attachment.FILE2_ATTACHMENT_TYPE</code>.
     */
    public final TableField<CustomerFreezerAttachmentRecord, String> FILE2_ATTACHMENT_TYPE = createField(DSL.name("FILE2_ATTACHMENT_TYPE"), SQLDataType.VARCHAR(250), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_freezer_attachment.FILE2_ATTACHMENT</code>.
     */
    public final TableField<CustomerFreezerAttachmentRecord, byte[]> FILE2_ATTACHMENT = createField(DSL.name("FILE2_ATTACHMENT"), SQLDataType.BLOB, this, "");

    private CustomerFreezerAttachment(Name alias, Table<CustomerFreezerAttachmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private CustomerFreezerAttachment(Name alias, Table<CustomerFreezerAttachmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.customer_freezer_attachment</code> table reference
     */
    public CustomerFreezerAttachment(String alias) {
        this(DSL.name(alias), CUSTOMER_FREEZER_ATTACHMENT);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.customer_freezer_attachment</code> table reference
     */
    public CustomerFreezerAttachment(Name alias) {
        this(alias, CUSTOMER_FREEZER_ATTACHMENT);
    }

    /**
     * Create a <code>vendor_portal_pbx.customer_freezer_attachment</code> table reference
     */
    public CustomerFreezerAttachment() {
        this(DSL.name("customer_freezer_attachment"), null);
    }

    public <O extends Record> CustomerFreezerAttachment(Table<O> child, ForeignKey<O, CustomerFreezerAttachmentRecord> key) {
        super(child, key, CUSTOMER_FREEZER_ATTACHMENT);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CUSTOMER_FREEZER_ATTACHMENT_IDX_ATTACHMENT);
    }

    @Override
    public UniqueKey<CustomerFreezerAttachmentRecord> getPrimaryKey() {
        return Keys.KEY_CUSTOMER_FREEZER_ATTACHMENT_PRIMARY;
    }

    @Override
    public List<UniqueKey<CustomerFreezerAttachmentRecord>> getKeys() {
        return Arrays.<UniqueKey<CustomerFreezerAttachmentRecord>>asList(Keys.KEY_CUSTOMER_FREEZER_ATTACHMENT_PRIMARY);
    }

    @Override
    public CustomerFreezerAttachment as(String alias) {
        return new CustomerFreezerAttachment(DSL.name(alias), this);
    }

    @Override
    public CustomerFreezerAttachment as(Name alias) {
        return new CustomerFreezerAttachment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CustomerFreezerAttachment rename(String name) {
        return new CustomerFreezerAttachment(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CustomerFreezerAttachment rename(Name name) {
        return new CustomerFreezerAttachment(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<String, String, String, String, String, byte[], String, String, LocalDateTime, String, String, byte[]> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
