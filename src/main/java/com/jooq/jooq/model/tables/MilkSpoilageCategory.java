/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.MilkSpoilageCategoryRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MilkSpoilageCategory extends TableImpl<MilkSpoilageCategoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.milk_spoilage_category</code>
     */
    public static final MilkSpoilageCategory MILK_SPOILAGE_CATEGORY = new MilkSpoilageCategory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MilkSpoilageCategoryRecord> getRecordType() {
        return MilkSpoilageCategoryRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.milk_spoilage_category.milk_code</code>.
     */
    public final TableField<MilkSpoilageCategoryRecord, String> MILK_CODE = createField(DSL.name("milk_code"), SQLDataType.VARCHAR(1).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_spoilage_category.milk_desc</code>.
     */
    public final TableField<MilkSpoilageCategoryRecord, String> MILK_DESC = createField(DSL.name("milk_desc"), SQLDataType.VARCHAR(45), this, "");

    private MilkSpoilageCategory(Name alias, Table<MilkSpoilageCategoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private MilkSpoilageCategory(Name alias, Table<MilkSpoilageCategoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.milk_spoilage_category</code> table reference
     */
    public MilkSpoilageCategory(String alias) {
        this(DSL.name(alias), MILK_SPOILAGE_CATEGORY);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.milk_spoilage_category</code> table reference
     */
    public MilkSpoilageCategory(Name alias) {
        this(alias, MILK_SPOILAGE_CATEGORY);
    }

    /**
     * Create a <code>vendor_portal_pbx.milk_spoilage_category</code> table reference
     */
    public MilkSpoilageCategory() {
        this(DSL.name("milk_spoilage_category"), null);
    }

    public <O extends Record> MilkSpoilageCategory(Table<O> child, ForeignKey<O, MilkSpoilageCategoryRecord> key) {
        super(child, key, MILK_SPOILAGE_CATEGORY);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<MilkSpoilageCategoryRecord> getPrimaryKey() {
        return Keys.KEY_MILK_SPOILAGE_CATEGORY_PRIMARY;
    }

    @Override
    public List<UniqueKey<MilkSpoilageCategoryRecord>> getKeys() {
        return Arrays.<UniqueKey<MilkSpoilageCategoryRecord>>asList(Keys.KEY_MILK_SPOILAGE_CATEGORY_PRIMARY);
    }

    @Override
    public MilkSpoilageCategory as(String alias) {
        return new MilkSpoilageCategory(DSL.name(alias), this);
    }

    @Override
    public MilkSpoilageCategory as(Name alias) {
        return new MilkSpoilageCategory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MilkSpoilageCategory rename(String name) {
        return new MilkSpoilageCategory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MilkSpoilageCategory rename(Name name) {
        return new MilkSpoilageCategory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
