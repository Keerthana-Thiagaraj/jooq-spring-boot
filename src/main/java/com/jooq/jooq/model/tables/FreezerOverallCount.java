/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.FreezerOverallCountRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FreezerOverallCount extends TableImpl<FreezerOverallCountRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.freezer_overall_count</code>
     */
    public static final FreezerOverallCount FREEZER_OVERALL_COUNT = new FreezerOverallCount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FreezerOverallCountRecord> getRecordType() {
        return FreezerOverallCountRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.freezer_overall_count.RSM_ID</code>.
     */
    public final TableField<FreezerOverallCountRecord, String> RSM_ID = createField(DSL.name("RSM_ID"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.freezer_overall_count.RSM_NAME</code>.
     */
    public final TableField<FreezerOverallCountRecord, String> RSM_NAME = createField(DSL.name("RSM_NAME"), SQLDataType.VARCHAR(250), this, "");

    /**
     * The column <code>vendor_portal_pbx.freezer_overall_count.OVERALL_FREEZER</code>.
     */
    public final TableField<FreezerOverallCountRecord, String> OVERALL_FREEZER = createField(DSL.name("OVERALL_FREEZER"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.freezer_overall_count.UPLOADED FREEZER</code>.
     */
    public final TableField<FreezerOverallCountRecord, String> UPLOADED_FREEZER = createField(DSL.name("UPLOADED FREEZER"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.freezer_overall_count.PERCENTAGE</code>.
     */
    public final TableField<FreezerOverallCountRecord, String> PERCENTAGE = createField(DSL.name("PERCENTAGE"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.freezer_overall_count.STATUS</code>.
     */
    public final TableField<FreezerOverallCountRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(1), this, "");

    private FreezerOverallCount(Name alias, Table<FreezerOverallCountRecord> aliased) {
        this(alias, aliased, null);
    }

    private FreezerOverallCount(Name alias, Table<FreezerOverallCountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.freezer_overall_count</code> table reference
     */
    public FreezerOverallCount(String alias) {
        this(DSL.name(alias), FREEZER_OVERALL_COUNT);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.freezer_overall_count</code> table reference
     */
    public FreezerOverallCount(Name alias) {
        this(alias, FREEZER_OVERALL_COUNT);
    }

    /**
     * Create a <code>vendor_portal_pbx.freezer_overall_count</code> table reference
     */
    public FreezerOverallCount() {
        this(DSL.name("freezer_overall_count"), null);
    }

    public <O extends Record> FreezerOverallCount(Table<O> child, ForeignKey<O, FreezerOverallCountRecord> key) {
        super(child, key, FREEZER_OVERALL_COUNT);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<FreezerOverallCountRecord> getPrimaryKey() {
        return Keys.KEY_FREEZER_OVERALL_COUNT_PRIMARY;
    }

    @Override
    public List<UniqueKey<FreezerOverallCountRecord>> getKeys() {
        return Arrays.<UniqueKey<FreezerOverallCountRecord>>asList(Keys.KEY_FREEZER_OVERALL_COUNT_PRIMARY);
    }

    @Override
    public FreezerOverallCount as(String alias) {
        return new FreezerOverallCount(DSL.name(alias), this);
    }

    @Override
    public FreezerOverallCount as(Name alias) {
        return new FreezerOverallCount(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FreezerOverallCount rename(String name) {
        return new FreezerOverallCount(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FreezerOverallCount rename(Name name) {
        return new FreezerOverallCount(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, String, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
