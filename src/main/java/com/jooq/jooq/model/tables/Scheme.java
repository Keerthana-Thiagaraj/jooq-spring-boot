/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.SchemeRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row17;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Scheme extends TableImpl<SchemeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.scheme</code>
     */
    public static final Scheme SCHEME = new Scheme();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SchemeRecord> getRecordType() {
        return SchemeRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.scheme.ITEM_NO</code>.
     */
    public final TableField<SchemeRecord, Integer> ITEM_NO = createField(DSL.name("ITEM_NO"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.scheme.COMP_CODE</code>.
     */
    public final TableField<SchemeRecord, String> COMP_CODE = createField(DSL.name("COMP_CODE"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.scheme.DEPARTMENT_ID</code>.
     */
    public final TableField<SchemeRecord, Integer> DEPARTMENT_ID = createField(DSL.name("DEPARTMENT_ID"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.scheme.SCHEME_NAME</code>.
     */
    public final TableField<SchemeRecord, String> SCHEME_NAME = createField(DSL.name("SCHEME_NAME"), SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>vendor_portal_pbx.scheme.FILE_NAME</code>.
     */
    public final TableField<SchemeRecord, String> FILE_NAME = createField(DSL.name("FILE_NAME"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>vendor_portal_pbx.scheme.FILE_TYPE</code>.
     */
    public final TableField<SchemeRecord, String> FILE_TYPE = createField(DSL.name("FILE_TYPE"), SQLDataType.VARCHAR(15), this, "");

    /**
     * The column <code>vendor_portal_pbx.scheme.FILE_CONTENT</code>.
     */
    public final TableField<SchemeRecord, byte[]> FILE_CONTENT = createField(DSL.name("FILE_CONTENT"), SQLDataType.BLOB, this, "");

    /**
     * The column <code>vendor_portal_pbx.scheme.FROM_DATE</code>.
     */
    public final TableField<SchemeRecord, LocalDate> FROM_DATE = createField(DSL.name("FROM_DATE"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>vendor_portal_pbx.scheme.TO_DATE</code>.
     */
    public final TableField<SchemeRecord, LocalDate> TO_DATE = createField(DSL.name("TO_DATE"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>vendor_portal_pbx.scheme.STATUS</code>.
     */
    public final TableField<SchemeRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>vendor_portal_pbx.scheme.CREATED_BY</code>.
     */
    public final TableField<SchemeRecord, String> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.scheme.CREATED_ON</code>.
     */
    public final TableField<SchemeRecord, LocalDateTime> CREATED_ON = createField(DSL.name("CREATED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.scheme.LAST_CHANGED_BY</code>.
     */
    public final TableField<SchemeRecord, String> LAST_CHANGED_BY = createField(DSL.name("LAST_CHANGED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.scheme.LAST_CHANGED_ON</code>.
     */
    public final TableField<SchemeRecord, LocalDateTime> LAST_CHANGED_ON = createField(DSL.name("LAST_CHANGED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.scheme.TITLE</code>.
     */
    public final TableField<SchemeRecord, String> TITLE = createField(DSL.name("TITLE"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>vendor_portal_pbx.scheme.MESSAGE</code>.
     */
    public final TableField<SchemeRecord, String> MESSAGE = createField(DSL.name("MESSAGE"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>vendor_portal_pbx.scheme.MESSAGE_STATUS</code>.
     */
    public final TableField<SchemeRecord, String> MESSAGE_STATUS = createField(DSL.name("MESSAGE_STATUS"), SQLDataType.VARCHAR(1), this, "");

    private Scheme(Name alias, Table<SchemeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Scheme(Name alias, Table<SchemeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.scheme</code> table reference
     */
    public Scheme(String alias) {
        this(DSL.name(alias), SCHEME);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.scheme</code> table reference
     */
    public Scheme(Name alias) {
        this(alias, SCHEME);
    }

    /**
     * Create a <code>vendor_portal_pbx.scheme</code> table reference
     */
    public Scheme() {
        this(DSL.name("scheme"), null);
    }

    public <O extends Record> Scheme(Table<O> child, ForeignKey<O, SchemeRecord> key) {
        super(child, key, SCHEME);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<SchemeRecord> getPrimaryKey() {
        return Keys.KEY_SCHEME_PRIMARY;
    }

    @Override
    public List<UniqueKey<SchemeRecord>> getKeys() {
        return Arrays.<UniqueKey<SchemeRecord>>asList(Keys.KEY_SCHEME_PRIMARY);
    }

    @Override
    public Scheme as(String alias) {
        return new Scheme(DSL.name(alias), this);
    }

    @Override
    public Scheme as(Name alias) {
        return new Scheme(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Scheme rename(String name) {
        return new Scheme(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Scheme rename(Name name) {
        return new Scheme(name, null);
    }

    // -------------------------------------------------------------------------
    // Row17 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row17<Integer, String, Integer, String, String, String, byte[], LocalDate, LocalDate, String, String, LocalDateTime, String, LocalDateTime, String, String, String> fieldsRow() {
        return (Row17) super.fieldsRow();
    }
}
