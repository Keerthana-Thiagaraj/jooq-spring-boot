/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TcRouteMaster implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer       routeCode;
    private Integer       trCenterCode;
    private String        routeName;
    private String        pickupPointName;
    private String        dropPointName;
    private Integer       tripKm;
    private LocalDate     fromDate;
    private LocalDate     toDate;
    private String        status;
    private String        createdBy;
    private LocalDateTime createdOn;
    private String        lastChangedBy;
    private LocalDateTime lastChangedOn;

    public TcRouteMaster() {}

    public TcRouteMaster(TcRouteMaster value) {
        this.routeCode = value.routeCode;
        this.trCenterCode = value.trCenterCode;
        this.routeName = value.routeName;
        this.pickupPointName = value.pickupPointName;
        this.dropPointName = value.dropPointName;
        this.tripKm = value.tripKm;
        this.fromDate = value.fromDate;
        this.toDate = value.toDate;
        this.status = value.status;
        this.createdBy = value.createdBy;
        this.createdOn = value.createdOn;
        this.lastChangedBy = value.lastChangedBy;
        this.lastChangedOn = value.lastChangedOn;
    }

    public TcRouteMaster(
        Integer       routeCode,
        Integer       trCenterCode,
        String        routeName,
        String        pickupPointName,
        String        dropPointName,
        Integer       tripKm,
        LocalDate     fromDate,
        LocalDate     toDate,
        String        status,
        String        createdBy,
        LocalDateTime createdOn,
        String        lastChangedBy,
        LocalDateTime lastChangedOn
    ) {
        this.routeCode = routeCode;
        this.trCenterCode = trCenterCode;
        this.routeName = routeName;
        this.pickupPointName = pickupPointName;
        this.dropPointName = dropPointName;
        this.tripKm = tripKm;
        this.fromDate = fromDate;
        this.toDate = toDate;
        this.status = status;
        this.createdBy = createdBy;
        this.createdOn = createdOn;
        this.lastChangedBy = lastChangedBy;
        this.lastChangedOn = lastChangedOn;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.ROUTE_CODE</code>.
     */
    public Integer getRouteCode() {
        return this.routeCode;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.ROUTE_CODE</code>.
     */
    public TcRouteMaster setRouteCode(Integer routeCode) {
        this.routeCode = routeCode;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.TR_CENTER_CODE</code>.
     */
    public Integer getTrCenterCode() {
        return this.trCenterCode;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.TR_CENTER_CODE</code>.
     */
    public TcRouteMaster setTrCenterCode(Integer trCenterCode) {
        this.trCenterCode = trCenterCode;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.ROUTE_NAME</code>.
     */
    public String getRouteName() {
        return this.routeName;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.ROUTE_NAME</code>.
     */
    public TcRouteMaster setRouteName(String routeName) {
        this.routeName = routeName;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.PICKUP_POINT_NAME</code>.
     */
    public String getPickupPointName() {
        return this.pickupPointName;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.PICKUP_POINT_NAME</code>.
     */
    public TcRouteMaster setPickupPointName(String pickupPointName) {
        this.pickupPointName = pickupPointName;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.DROP_POINT_NAME</code>.
     */
    public String getDropPointName() {
        return this.dropPointName;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.DROP_POINT_NAME</code>.
     */
    public TcRouteMaster setDropPointName(String dropPointName) {
        this.dropPointName = dropPointName;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.TRIP_KM</code>.
     */
    public Integer getTripKm() {
        return this.tripKm;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.TRIP_KM</code>.
     */
    public TcRouteMaster setTripKm(Integer tripKm) {
        this.tripKm = tripKm;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.FROM_DATE</code>.
     */
    public LocalDate getFromDate() {
        return this.fromDate;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.FROM_DATE</code>.
     */
    public TcRouteMaster setFromDate(LocalDate fromDate) {
        this.fromDate = fromDate;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.TO_DATE</code>.
     */
    public LocalDate getToDate() {
        return this.toDate;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.TO_DATE</code>.
     */
    public TcRouteMaster setToDate(LocalDate toDate) {
        this.toDate = toDate;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.STATUS</code>.
     */
    public String getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.STATUS</code>.
     */
    public TcRouteMaster setStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.CREATED_BY</code>.
     */
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.CREATED_BY</code>.
     */
    public TcRouteMaster setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.CREATED_ON</code>.
     */
    public LocalDateTime getCreatedOn() {
        return this.createdOn;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.CREATED_ON</code>.
     */
    public TcRouteMaster setCreatedOn(LocalDateTime createdOn) {
        this.createdOn = createdOn;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.LAST_CHANGED_BY</code>.
     */
    public String getLastChangedBy() {
        return this.lastChangedBy;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.LAST_CHANGED_BY</code>.
     */
    public TcRouteMaster setLastChangedBy(String lastChangedBy) {
        this.lastChangedBy = lastChangedBy;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.LAST_CHANGED_ON</code>.
     */
    public LocalDateTime getLastChangedOn() {
        return this.lastChangedOn;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_ROUTE_MASTER.LAST_CHANGED_ON</code>.
     */
    public TcRouteMaster setLastChangedOn(LocalDateTime lastChangedOn) {
        this.lastChangedOn = lastChangedOn;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TcRouteMaster other = (TcRouteMaster) obj;
        if (routeCode == null) {
            if (other.routeCode != null)
                return false;
        }
        else if (!routeCode.equals(other.routeCode))
            return false;
        if (trCenterCode == null) {
            if (other.trCenterCode != null)
                return false;
        }
        else if (!trCenterCode.equals(other.trCenterCode))
            return false;
        if (routeName == null) {
            if (other.routeName != null)
                return false;
        }
        else if (!routeName.equals(other.routeName))
            return false;
        if (pickupPointName == null) {
            if (other.pickupPointName != null)
                return false;
        }
        else if (!pickupPointName.equals(other.pickupPointName))
            return false;
        if (dropPointName == null) {
            if (other.dropPointName != null)
                return false;
        }
        else if (!dropPointName.equals(other.dropPointName))
            return false;
        if (tripKm == null) {
            if (other.tripKm != null)
                return false;
        }
        else if (!tripKm.equals(other.tripKm))
            return false;
        if (fromDate == null) {
            if (other.fromDate != null)
                return false;
        }
        else if (!fromDate.equals(other.fromDate))
            return false;
        if (toDate == null) {
            if (other.toDate != null)
                return false;
        }
        else if (!toDate.equals(other.toDate))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (createdOn == null) {
            if (other.createdOn != null)
                return false;
        }
        else if (!createdOn.equals(other.createdOn))
            return false;
        if (lastChangedBy == null) {
            if (other.lastChangedBy != null)
                return false;
        }
        else if (!lastChangedBy.equals(other.lastChangedBy))
            return false;
        if (lastChangedOn == null) {
            if (other.lastChangedOn != null)
                return false;
        }
        else if (!lastChangedOn.equals(other.lastChangedOn))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.routeCode == null) ? 0 : this.routeCode.hashCode());
        result = prime * result + ((this.trCenterCode == null) ? 0 : this.trCenterCode.hashCode());
        result = prime * result + ((this.routeName == null) ? 0 : this.routeName.hashCode());
        result = prime * result + ((this.pickupPointName == null) ? 0 : this.pickupPointName.hashCode());
        result = prime * result + ((this.dropPointName == null) ? 0 : this.dropPointName.hashCode());
        result = prime * result + ((this.tripKm == null) ? 0 : this.tripKm.hashCode());
        result = prime * result + ((this.fromDate == null) ? 0 : this.fromDate.hashCode());
        result = prime * result + ((this.toDate == null) ? 0 : this.toDate.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.createdOn == null) ? 0 : this.createdOn.hashCode());
        result = prime * result + ((this.lastChangedBy == null) ? 0 : this.lastChangedBy.hashCode());
        result = prime * result + ((this.lastChangedOn == null) ? 0 : this.lastChangedOn.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TcRouteMaster (");

        sb.append(routeCode);
        sb.append(", ").append(trCenterCode);
        sb.append(", ").append(routeName);
        sb.append(", ").append(pickupPointName);
        sb.append(", ").append(dropPointName);
        sb.append(", ").append(tripKm);
        sb.append(", ").append(fromDate);
        sb.append(", ").append(toDate);
        sb.append(", ").append(status);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(lastChangedBy);
        sb.append(", ").append(lastChangedOn);

        sb.append(")");
        return sb.toString();
    }
}
