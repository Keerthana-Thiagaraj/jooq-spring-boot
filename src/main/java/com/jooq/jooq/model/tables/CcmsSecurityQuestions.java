/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.CcmsSecurityQuestionsRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CcmsSecurityQuestions extends TableImpl<CcmsSecurityQuestionsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.ccms_security_questions</code>
     */
    public static final CcmsSecurityQuestions CCMS_SECURITY_QUESTIONS = new CcmsSecurityQuestions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CcmsSecurityQuestionsRecord> getRecordType() {
        return CcmsSecurityQuestionsRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.ccms_security_questions.id</code>.
     */
    public final TableField<CcmsSecurityQuestionsRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_security_questions.question</code>.
     */
    public final TableField<CcmsSecurityQuestionsRecord, String> QUESTION = createField(DSL.name("question"), SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_security_questions.answer</code>.
     */
    public final TableField<CcmsSecurityQuestionsRecord, String> ANSWER = createField(DSL.name("answer"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_security_questions.plant_code</code>.
     */
    public final TableField<CcmsSecurityQuestionsRecord, String> PLANT_CODE = createField(DSL.name("plant_code"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_security_questions.created_by</code>.
     */
    public final TableField<CcmsSecurityQuestionsRecord, String> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_security_questions.created_on</code>.
     */
    public final TableField<CcmsSecurityQuestionsRecord, LocalDateTime> CREATED_ON = createField(DSL.name("created_on"), SQLDataType.LOCALDATETIME(0), this, "");

    private CcmsSecurityQuestions(Name alias, Table<CcmsSecurityQuestionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CcmsSecurityQuestions(Name alias, Table<CcmsSecurityQuestionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.ccms_security_questions</code> table reference
     */
    public CcmsSecurityQuestions(String alias) {
        this(DSL.name(alias), CCMS_SECURITY_QUESTIONS);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.ccms_security_questions</code> table reference
     */
    public CcmsSecurityQuestions(Name alias) {
        this(alias, CCMS_SECURITY_QUESTIONS);
    }

    /**
     * Create a <code>vendor_portal_pbx.ccms_security_questions</code> table reference
     */
    public CcmsSecurityQuestions() {
        this(DSL.name("ccms_security_questions"), null);
    }

    public <O extends Record> CcmsSecurityQuestions(Table<O> child, ForeignKey<O, CcmsSecurityQuestionsRecord> key) {
        super(child, key, CCMS_SECURITY_QUESTIONS);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public Identity<CcmsSecurityQuestionsRecord, Integer> getIdentity() {
        return (Identity<CcmsSecurityQuestionsRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CcmsSecurityQuestionsRecord> getPrimaryKey() {
        return Keys.KEY_CCMS_SECURITY_QUESTIONS_PRIMARY;
    }

    @Override
    public List<UniqueKey<CcmsSecurityQuestionsRecord>> getKeys() {
        return Arrays.<UniqueKey<CcmsSecurityQuestionsRecord>>asList(Keys.KEY_CCMS_SECURITY_QUESTIONS_PRIMARY);
    }

    @Override
    public CcmsSecurityQuestions as(String alias) {
        return new CcmsSecurityQuestions(DSL.name(alias), this);
    }

    @Override
    public CcmsSecurityQuestions as(Name alias) {
        return new CcmsSecurityQuestions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CcmsSecurityQuestions rename(String name) {
        return new CcmsSecurityQuestions(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CcmsSecurityQuestions rename(Name name) {
        return new CcmsSecurityQuestions(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, String, String, String, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
