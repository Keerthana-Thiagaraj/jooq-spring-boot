/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Indexes;
import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.TcRequestRspRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row16;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TcRequestRsp extends TableImpl<TcRequestRspRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.TC_REQUEST_RSP</code>
     */
    public static final TcRequestRsp TC_REQUEST_RSP = new TcRequestRsp();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TcRequestRspRecord> getRecordType() {
        return TcRequestRspRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.TC_REQUEST_RSP.LINE_ID</code>.
     */
    public final TableField<TcRequestRspRecord, Integer> LINE_ID = createField(DSL.name("LINE_ID"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_REQUEST_RSP.REQUEST_ID</code>.
     */
    public final TableField<TcRequestRspRecord, String> REQUEST_ID = createField(DSL.name("REQUEST_ID"), SQLDataType.VARCHAR(15).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_REQUEST_RSP.FRANCHISE_ID</code>.
     */
    public final TableField<TcRequestRspRecord, String> FRANCHISE_ID = createField(DSL.name("FRANCHISE_ID"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_REQUEST_RSP.FRANCHISE_NAME</code>.
     */
    public final TableField<TcRequestRspRecord, String> FRANCHISE_NAME = createField(DSL.name("FRANCHISE_NAME"), SQLDataType.VARCHAR(250).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_REQUEST_RSP.OUTLET_NAME</code>.
     */
    public final TableField<TcRequestRspRecord, String> OUTLET_NAME = createField(DSL.name("OUTLET_NAME"), SQLDataType.VARCHAR(250), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_REQUEST_RSP.OUTLET_OPENING_DATE</code>.
     */
    public final TableField<TcRequestRspRecord, LocalDate> OUTLET_OPENING_DATE = createField(DSL.name("OUTLET_OPENING_DATE"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_REQUEST_RSP.SAP_CODE</code>.
     */
    public final TableField<TcRequestRspRecord, String> SAP_CODE = createField(DSL.name("SAP_CODE"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_REQUEST_RSP.AREA</code>.
     */
    public final TableField<TcRequestRspRecord, String> AREA = createField(DSL.name("AREA"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_REQUEST_RSP.STATE</code>.
     */
    public final TableField<TcRequestRspRecord, String> STATE = createField(DSL.name("STATE"), SQLDataType.VARCHAR(4).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_REQUEST_RSP.COUNTRY</code>.
     */
    public final TableField<TcRequestRspRecord, String> COUNTRY = createField(DSL.name("COUNTRY"), SQLDataType.VARCHAR(3).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_REQUEST_RSP.MOBILE_NO</code>.
     */
    public final TableField<TcRequestRspRecord, String> MOBILE_NO = createField(DSL.name("MOBILE_NO"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_REQUEST_RSP.ALTERNATE_MOBILE_NO</code>.
     */
    public final TableField<TcRequestRspRecord, String> ALTERNATE_MOBILE_NO = createField(DSL.name("ALTERNATE_MOBILE_NO"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_REQUEST_RSP.CREATED_BY</code>.
     */
    public final TableField<TcRequestRspRecord, String> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_REQUEST_RSP.CREATED_ON</code>.
     */
    public final TableField<TcRequestRspRecord, LocalDateTime> CREATED_ON = createField(DSL.name("CREATED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_REQUEST_RSP.LAST_CHANGED_BY</code>.
     */
    public final TableField<TcRequestRspRecord, String> LAST_CHANGED_BY = createField(DSL.name("LAST_CHANGED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_REQUEST_RSP.LAST_CHANGED_ON</code>.
     */
    public final TableField<TcRequestRspRecord, LocalDateTime> LAST_CHANGED_ON = createField(DSL.name("LAST_CHANGED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    private TcRequestRsp(Name alias, Table<TcRequestRspRecord> aliased) {
        this(alias, aliased, null);
    }

    private TcRequestRsp(Name alias, Table<TcRequestRspRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.TC_REQUEST_RSP</code> table reference
     */
    public TcRequestRsp(String alias) {
        this(DSL.name(alias), TC_REQUEST_RSP);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.TC_REQUEST_RSP</code> table reference
     */
    public TcRequestRsp(Name alias) {
        this(alias, TC_REQUEST_RSP);
    }

    /**
     * Create a <code>vendor_portal_pbx.TC_REQUEST_RSP</code> table reference
     */
    public TcRequestRsp() {
        this(DSL.name("TC_REQUEST_RSP"), null);
    }

    public <O extends Record> TcRequestRsp(Table<O> child, ForeignKey<O, TcRequestRspRecord> key) {
        super(child, key, TC_REQUEST_RSP);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TC_REQUEST_RSP_FK_RM_RSP_IDX);
    }

    @Override
    public UniqueKey<TcRequestRspRecord> getPrimaryKey() {
        return Keys.KEY_TC_REQUEST_RSP_PRIMARY;
    }

    @Override
    public List<UniqueKey<TcRequestRspRecord>> getKeys() {
        return Arrays.<UniqueKey<TcRequestRspRecord>>asList(Keys.KEY_TC_REQUEST_RSP_PRIMARY);
    }

    @Override
    public List<ForeignKey<TcRequestRspRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TcRequestRspRecord, ?>>asList(Keys.FK_RQ_LI_RSP, Keys.FK_RM_RSP);
    }

    private transient TcRequestLi _tcRequestLi;
    private transient RegionMaster _regionMaster;

    public TcRequestLi tcRequestLi() {
        if (_tcRequestLi == null)
            _tcRequestLi = new TcRequestLi(this, Keys.FK_RQ_LI_RSP);

        return _tcRequestLi;
    }

    public RegionMaster regionMaster() {
        if (_regionMaster == null)
            _regionMaster = new RegionMaster(this, Keys.FK_RM_RSP);

        return _regionMaster;
    }

    @Override
    public TcRequestRsp as(String alias) {
        return new TcRequestRsp(DSL.name(alias), this);
    }

    @Override
    public TcRequestRsp as(Name alias) {
        return new TcRequestRsp(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TcRequestRsp rename(String name) {
        return new TcRequestRsp(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TcRequestRsp rename(Name name) {
        return new TcRequestRsp(name, null);
    }

    // -------------------------------------------------------------------------
    // Row16 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row16<Integer, String, String, String, String, LocalDate, String, String, String, String, String, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row16) super.fieldsRow();
    }
}
