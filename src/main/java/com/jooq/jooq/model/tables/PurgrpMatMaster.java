/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.PurgrpMatMasterRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PurgrpMatMaster extends TableImpl<PurgrpMatMasterRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.purGrp_mat_master</code>
     */
    public static final PurgrpMatMaster PURGRP_MAT_MASTER = new PurgrpMatMaster();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PurgrpMatMasterRecord> getRecordType() {
        return PurgrpMatMasterRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.purGrp_mat_master.PURGRP</code>.
     */
    public final TableField<PurgrpMatMasterRecord, String> PURGRP = createField(DSL.name("PURGRP"), SQLDataType.VARCHAR(5).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.purGrp_mat_master.TL</code>.
     */
    public final TableField<PurgrpMatMasterRecord, String> TL = createField(DSL.name("TL"), SQLDataType.VARCHAR(150), this, "");

    /**
     * The column <code>vendor_portal_pbx.purGrp_mat_master.TL_EMAIL</code>.
     */
    public final TableField<PurgrpMatMasterRecord, String> TL_EMAIL = createField(DSL.name("TL_EMAIL"), SQLDataType.VARCHAR(150), this, "");

    /**
     * The column <code>vendor_portal_pbx.purGrp_mat_master.PURGRP_DESC</code>.
     */
    public final TableField<PurgrpMatMasterRecord, String> PURGRP_DESC = createField(DSL.name("PURGRP_DESC"), SQLDataType.VARCHAR(150), this, "");

    /**
     * The column <code>vendor_portal_pbx.purGrp_mat_master.NO</code>.
     */
    public final TableField<PurgrpMatMasterRecord, String> NO = createField(DSL.name("NO"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.purGrp_mat_master.STATUS</code>.
     */
    public final TableField<PurgrpMatMasterRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>vendor_portal_pbx.purGrp_mat_master.LEVEL2</code>.
     */
    public final TableField<PurgrpMatMasterRecord, String> LEVEL2 = createField(DSL.name("LEVEL2"), SQLDataType.VARCHAR(150), this, "");

    /**
     * The column <code>vendor_portal_pbx.purGrp_mat_master.LEVEL3</code>.
     */
    public final TableField<PurgrpMatMasterRecord, String> LEVEL3 = createField(DSL.name("LEVEL3"), SQLDataType.VARCHAR(150), this, "");

    private PurgrpMatMaster(Name alias, Table<PurgrpMatMasterRecord> aliased) {
        this(alias, aliased, null);
    }

    private PurgrpMatMaster(Name alias, Table<PurgrpMatMasterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.purGrp_mat_master</code> table reference
     */
    public PurgrpMatMaster(String alias) {
        this(DSL.name(alias), PURGRP_MAT_MASTER);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.purGrp_mat_master</code> table reference
     */
    public PurgrpMatMaster(Name alias) {
        this(alias, PURGRP_MAT_MASTER);
    }

    /**
     * Create a <code>vendor_portal_pbx.purGrp_mat_master</code> table reference
     */
    public PurgrpMatMaster() {
        this(DSL.name("purGrp_mat_master"), null);
    }

    public <O extends Record> PurgrpMatMaster(Table<O> child, ForeignKey<O, PurgrpMatMasterRecord> key) {
        super(child, key, PURGRP_MAT_MASTER);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<PurgrpMatMasterRecord> getPrimaryKey() {
        return Keys.KEY_PURGRP_MAT_MASTER_PRIMARY;
    }

    @Override
    public List<UniqueKey<PurgrpMatMasterRecord>> getKeys() {
        return Arrays.<UniqueKey<PurgrpMatMasterRecord>>asList(Keys.KEY_PURGRP_MAT_MASTER_PRIMARY);
    }

    @Override
    public PurgrpMatMaster as(String alias) {
        return new PurgrpMatMaster(DSL.name(alias), this);
    }

    @Override
    public PurgrpMatMaster as(Name alias) {
        return new PurgrpMatMaster(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PurgrpMatMaster rename(String name) {
        return new PurgrpMatMaster(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PurgrpMatMaster rename(Name name) {
        return new PurgrpMatMaster(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
