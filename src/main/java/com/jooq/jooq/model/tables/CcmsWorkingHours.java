/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.CcmsWorkingHoursRecord;

import java.math.BigDecimal;
import java.time.LocalTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CcmsWorkingHours extends TableImpl<CcmsWorkingHoursRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.ccms_working_hours</code>
     */
    public static final CcmsWorkingHours CCMS_WORKING_HOURS = new CcmsWorkingHours();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CcmsWorkingHoursRecord> getRecordType() {
        return CcmsWorkingHoursRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.ccms_working_hours.work_time</code>.
     */
    public final TableField<CcmsWorkingHoursRecord, LocalTime> WORK_TIME = createField(DSL.name("work_time"), SQLDataType.LOCALTIME.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_working_hours.day_count</code>.
     */
    public final TableField<CcmsWorkingHoursRecord, BigDecimal> DAY_COUNT = createField(DSL.name("day_count"), SQLDataType.DECIMAL(2, 1), this, "");

    private CcmsWorkingHours(Name alias, Table<CcmsWorkingHoursRecord> aliased) {
        this(alias, aliased, null);
    }

    private CcmsWorkingHours(Name alias, Table<CcmsWorkingHoursRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.ccms_working_hours</code> table reference
     */
    public CcmsWorkingHours(String alias) {
        this(DSL.name(alias), CCMS_WORKING_HOURS);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.ccms_working_hours</code> table reference
     */
    public CcmsWorkingHours(Name alias) {
        this(alias, CCMS_WORKING_HOURS);
    }

    /**
     * Create a <code>vendor_portal_pbx.ccms_working_hours</code> table reference
     */
    public CcmsWorkingHours() {
        this(DSL.name("ccms_working_hours"), null);
    }

    public <O extends Record> CcmsWorkingHours(Table<O> child, ForeignKey<O, CcmsWorkingHoursRecord> key) {
        super(child, key, CCMS_WORKING_HOURS);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<CcmsWorkingHoursRecord> getPrimaryKey() {
        return Keys.KEY_CCMS_WORKING_HOURS_PRIMARY;
    }

    @Override
    public List<UniqueKey<CcmsWorkingHoursRecord>> getKeys() {
        return Arrays.<UniqueKey<CcmsWorkingHoursRecord>>asList(Keys.KEY_CCMS_WORKING_HOURS_PRIMARY);
    }

    @Override
    public CcmsWorkingHours as(String alias) {
        return new CcmsWorkingHours(DSL.name(alias), this);
    }

    @Override
    public CcmsWorkingHours as(Name alias) {
        return new CcmsWorkingHours(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CcmsWorkingHours rename(String name) {
        return new CcmsWorkingHours(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CcmsWorkingHours rename(Name name) {
        return new CcmsWorkingHours(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<LocalTime, BigDecimal> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
