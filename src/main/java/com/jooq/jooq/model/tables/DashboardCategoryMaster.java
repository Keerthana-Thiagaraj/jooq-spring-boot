/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.DashboardCategoryMasterRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DashboardCategoryMaster extends TableImpl<DashboardCategoryMasterRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.dashboard_category_master</code>
     */
    public static final DashboardCategoryMaster DASHBOARD_CATEGORY_MASTER = new DashboardCategoryMaster();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DashboardCategoryMasterRecord> getRecordType() {
        return DashboardCategoryMasterRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.dashboard_category_master.CATEGORY_ID</code>.
     */
    public final TableField<DashboardCategoryMasterRecord, Integer> CATEGORY_ID = createField(DSL.name("CATEGORY_ID"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.dashboard_category_master.CATEGORY_NAME</code>.
     */
    public final TableField<DashboardCategoryMasterRecord, String> CATEGORY_NAME = createField(DSL.name("CATEGORY_NAME"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.dashboard_category_master.STATUS</code>.
     */
    public final TableField<DashboardCategoryMasterRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(45), this, "");

    private DashboardCategoryMaster(Name alias, Table<DashboardCategoryMasterRecord> aliased) {
        this(alias, aliased, null);
    }

    private DashboardCategoryMaster(Name alias, Table<DashboardCategoryMasterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.dashboard_category_master</code> table reference
     */
    public DashboardCategoryMaster(String alias) {
        this(DSL.name(alias), DASHBOARD_CATEGORY_MASTER);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.dashboard_category_master</code> table reference
     */
    public DashboardCategoryMaster(Name alias) {
        this(alias, DASHBOARD_CATEGORY_MASTER);
    }

    /**
     * Create a <code>vendor_portal_pbx.dashboard_category_master</code> table reference
     */
    public DashboardCategoryMaster() {
        this(DSL.name("dashboard_category_master"), null);
    }

    public <O extends Record> DashboardCategoryMaster(Table<O> child, ForeignKey<O, DashboardCategoryMasterRecord> key) {
        super(child, key, DASHBOARD_CATEGORY_MASTER);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<DashboardCategoryMasterRecord> getPrimaryKey() {
        return Keys.KEY_DASHBOARD_CATEGORY_MASTER_PRIMARY;
    }

    @Override
    public List<UniqueKey<DashboardCategoryMasterRecord>> getKeys() {
        return Arrays.<UniqueKey<DashboardCategoryMasterRecord>>asList(Keys.KEY_DASHBOARD_CATEGORY_MASTER_PRIMARY);
    }

    @Override
    public DashboardCategoryMaster as(String alias) {
        return new DashboardCategoryMaster(DSL.name(alias), this);
    }

    @Override
    public DashboardCategoryMaster as(Name alias) {
        return new DashboardCategoryMaster(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DashboardCategoryMaster rename(String name) {
        return new DashboardCategoryMaster(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DashboardCategoryMaster rename(Name name) {
        return new DashboardCategoryMaster(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
