/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.Arrays;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NewsLetter implements Serializable {

    private static final long serialVersionUID = 1L;

    private String        countryCode;
    private String        regionCode;
    private Integer       typeId;
    private String        uploadTypeId;
    private String        serialNo;
    private String        fileName;
    private String        fileType;
    private byte[]        fileContent;
    private String        videoUrl;
    private String        status;
    private String        createdBy;
    private LocalDateTime createdOn;
    private String        lastChangedBy;
    private LocalDateTime lastChangedOn;
    private LocalDateTime uploadedDateTime;
    private String        regionalLanguageCode;

    public NewsLetter() {}

    public NewsLetter(NewsLetter value) {
        this.countryCode = value.countryCode;
        this.regionCode = value.regionCode;
        this.typeId = value.typeId;
        this.uploadTypeId = value.uploadTypeId;
        this.serialNo = value.serialNo;
        this.fileName = value.fileName;
        this.fileType = value.fileType;
        this.fileContent = value.fileContent;
        this.videoUrl = value.videoUrl;
        this.status = value.status;
        this.createdBy = value.createdBy;
        this.createdOn = value.createdOn;
        this.lastChangedBy = value.lastChangedBy;
        this.lastChangedOn = value.lastChangedOn;
        this.uploadedDateTime = value.uploadedDateTime;
        this.regionalLanguageCode = value.regionalLanguageCode;
    }

    public NewsLetter(
        String        countryCode,
        String        regionCode,
        Integer       typeId,
        String        uploadTypeId,
        String        serialNo,
        String        fileName,
        String        fileType,
        byte[]        fileContent,
        String        videoUrl,
        String        status,
        String        createdBy,
        LocalDateTime createdOn,
        String        lastChangedBy,
        LocalDateTime lastChangedOn,
        LocalDateTime uploadedDateTime,
        String        regionalLanguageCode
    ) {
        this.countryCode = countryCode;
        this.regionCode = regionCode;
        this.typeId = typeId;
        this.uploadTypeId = uploadTypeId;
        this.serialNo = serialNo;
        this.fileName = fileName;
        this.fileType = fileType;
        this.fileContent = fileContent;
        this.videoUrl = videoUrl;
        this.status = status;
        this.createdBy = createdBy;
        this.createdOn = createdOn;
        this.lastChangedBy = lastChangedBy;
        this.lastChangedOn = lastChangedOn;
        this.uploadedDateTime = uploadedDateTime;
        this.regionalLanguageCode = regionalLanguageCode;
    }

    /**
     * Getter for <code>vendor_portal_pbx.news_letter.COUNTRY_CODE</code>.
     */
    public String getCountryCode() {
        return this.countryCode;
    }

    /**
     * Setter for <code>vendor_portal_pbx.news_letter.COUNTRY_CODE</code>.
     */
    public NewsLetter setCountryCode(String countryCode) {
        this.countryCode = countryCode;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.news_letter.REGION_CODE</code>.
     */
    public String getRegionCode() {
        return this.regionCode;
    }

    /**
     * Setter for <code>vendor_portal_pbx.news_letter.REGION_CODE</code>.
     */
    public NewsLetter setRegionCode(String regionCode) {
        this.regionCode = regionCode;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.news_letter.TYPE_ID</code>.
     */
    public Integer getTypeId() {
        return this.typeId;
    }

    /**
     * Setter for <code>vendor_portal_pbx.news_letter.TYPE_ID</code>.
     */
    public NewsLetter setTypeId(Integer typeId) {
        this.typeId = typeId;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.news_letter.UPLOAD_TYPE_ID</code>.
     */
    public String getUploadTypeId() {
        return this.uploadTypeId;
    }

    /**
     * Setter for <code>vendor_portal_pbx.news_letter.UPLOAD_TYPE_ID</code>.
     */
    public NewsLetter setUploadTypeId(String uploadTypeId) {
        this.uploadTypeId = uploadTypeId;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.news_letter.SERIAL_NO</code>.
     */
    public String getSerialNo() {
        return this.serialNo;
    }

    /**
     * Setter for <code>vendor_portal_pbx.news_letter.SERIAL_NO</code>.
     */
    public NewsLetter setSerialNo(String serialNo) {
        this.serialNo = serialNo;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.news_letter.FILE_NAME</code>.
     */
    public String getFileName() {
        return this.fileName;
    }

    /**
     * Setter for <code>vendor_portal_pbx.news_letter.FILE_NAME</code>.
     */
    public NewsLetter setFileName(String fileName) {
        this.fileName = fileName;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.news_letter.FILE_TYPE</code>.
     */
    public String getFileType() {
        return this.fileType;
    }

    /**
     * Setter for <code>vendor_portal_pbx.news_letter.FILE_TYPE</code>.
     */
    public NewsLetter setFileType(String fileType) {
        this.fileType = fileType;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.news_letter.FILE_CONTENT</code>.
     */
    public byte[] getFileContent() {
        return this.fileContent;
    }

    /**
     * Setter for <code>vendor_portal_pbx.news_letter.FILE_CONTENT</code>.
     */
    public NewsLetter setFileContent(byte[] fileContent) {
        this.fileContent = fileContent;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.news_letter.VIDEO_URL</code>.
     */
    public String getVideoUrl() {
        return this.videoUrl;
    }

    /**
     * Setter for <code>vendor_portal_pbx.news_letter.VIDEO_URL</code>.
     */
    public NewsLetter setVideoUrl(String videoUrl) {
        this.videoUrl = videoUrl;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.news_letter.STATUS</code>.
     */
    public String getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>vendor_portal_pbx.news_letter.STATUS</code>.
     */
    public NewsLetter setStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.news_letter.CREATED_BY</code>.
     */
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>vendor_portal_pbx.news_letter.CREATED_BY</code>.
     */
    public NewsLetter setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.news_letter.CREATED_ON</code>.
     */
    public LocalDateTime getCreatedOn() {
        return this.createdOn;
    }

    /**
     * Setter for <code>vendor_portal_pbx.news_letter.CREATED_ON</code>.
     */
    public NewsLetter setCreatedOn(LocalDateTime createdOn) {
        this.createdOn = createdOn;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.news_letter.LAST_CHANGED_BY</code>.
     */
    public String getLastChangedBy() {
        return this.lastChangedBy;
    }

    /**
     * Setter for <code>vendor_portal_pbx.news_letter.LAST_CHANGED_BY</code>.
     */
    public NewsLetter setLastChangedBy(String lastChangedBy) {
        this.lastChangedBy = lastChangedBy;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.news_letter.LAST_CHANGED_ON</code>.
     */
    public LocalDateTime getLastChangedOn() {
        return this.lastChangedOn;
    }

    /**
     * Setter for <code>vendor_portal_pbx.news_letter.LAST_CHANGED_ON</code>.
     */
    public NewsLetter setLastChangedOn(LocalDateTime lastChangedOn) {
        this.lastChangedOn = lastChangedOn;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.news_letter.UPLOADED_DATE_TIME</code>.
     */
    public LocalDateTime getUploadedDateTime() {
        return this.uploadedDateTime;
    }

    /**
     * Setter for <code>vendor_portal_pbx.news_letter.UPLOADED_DATE_TIME</code>.
     */
    public NewsLetter setUploadedDateTime(LocalDateTime uploadedDateTime) {
        this.uploadedDateTime = uploadedDateTime;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.news_letter.REGIONAL_LANGUAGE_CODE</code>.
     */
    public String getRegionalLanguageCode() {
        return this.regionalLanguageCode;
    }

    /**
     * Setter for <code>vendor_portal_pbx.news_letter.REGIONAL_LANGUAGE_CODE</code>.
     */
    public NewsLetter setRegionalLanguageCode(String regionalLanguageCode) {
        this.regionalLanguageCode = regionalLanguageCode;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final NewsLetter other = (NewsLetter) obj;
        if (countryCode == null) {
            if (other.countryCode != null)
                return false;
        }
        else if (!countryCode.equals(other.countryCode))
            return false;
        if (regionCode == null) {
            if (other.regionCode != null)
                return false;
        }
        else if (!regionCode.equals(other.regionCode))
            return false;
        if (typeId == null) {
            if (other.typeId != null)
                return false;
        }
        else if (!typeId.equals(other.typeId))
            return false;
        if (uploadTypeId == null) {
            if (other.uploadTypeId != null)
                return false;
        }
        else if (!uploadTypeId.equals(other.uploadTypeId))
            return false;
        if (serialNo == null) {
            if (other.serialNo != null)
                return false;
        }
        else if (!serialNo.equals(other.serialNo))
            return false;
        if (fileName == null) {
            if (other.fileName != null)
                return false;
        }
        else if (!fileName.equals(other.fileName))
            return false;
        if (fileType == null) {
            if (other.fileType != null)
                return false;
        }
        else if (!fileType.equals(other.fileType))
            return false;
        if (fileContent == null) {
            if (other.fileContent != null)
                return false;
        }
        else if (!Arrays.equals(fileContent, other.fileContent))
            return false;
        if (videoUrl == null) {
            if (other.videoUrl != null)
                return false;
        }
        else if (!videoUrl.equals(other.videoUrl))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (createdOn == null) {
            if (other.createdOn != null)
                return false;
        }
        else if (!createdOn.equals(other.createdOn))
            return false;
        if (lastChangedBy == null) {
            if (other.lastChangedBy != null)
                return false;
        }
        else if (!lastChangedBy.equals(other.lastChangedBy))
            return false;
        if (lastChangedOn == null) {
            if (other.lastChangedOn != null)
                return false;
        }
        else if (!lastChangedOn.equals(other.lastChangedOn))
            return false;
        if (uploadedDateTime == null) {
            if (other.uploadedDateTime != null)
                return false;
        }
        else if (!uploadedDateTime.equals(other.uploadedDateTime))
            return false;
        if (regionalLanguageCode == null) {
            if (other.regionalLanguageCode != null)
                return false;
        }
        else if (!regionalLanguageCode.equals(other.regionalLanguageCode))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.countryCode == null) ? 0 : this.countryCode.hashCode());
        result = prime * result + ((this.regionCode == null) ? 0 : this.regionCode.hashCode());
        result = prime * result + ((this.typeId == null) ? 0 : this.typeId.hashCode());
        result = prime * result + ((this.uploadTypeId == null) ? 0 : this.uploadTypeId.hashCode());
        result = prime * result + ((this.serialNo == null) ? 0 : this.serialNo.hashCode());
        result = prime * result + ((this.fileName == null) ? 0 : this.fileName.hashCode());
        result = prime * result + ((this.fileType == null) ? 0 : this.fileType.hashCode());
        result = prime * result + ((this.fileContent == null) ? 0 : Arrays.hashCode(this.fileContent));
        result = prime * result + ((this.videoUrl == null) ? 0 : this.videoUrl.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.createdOn == null) ? 0 : this.createdOn.hashCode());
        result = prime * result + ((this.lastChangedBy == null) ? 0 : this.lastChangedBy.hashCode());
        result = prime * result + ((this.lastChangedOn == null) ? 0 : this.lastChangedOn.hashCode());
        result = prime * result + ((this.uploadedDateTime == null) ? 0 : this.uploadedDateTime.hashCode());
        result = prime * result + ((this.regionalLanguageCode == null) ? 0 : this.regionalLanguageCode.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("NewsLetter (");

        sb.append(countryCode);
        sb.append(", ").append(regionCode);
        sb.append(", ").append(typeId);
        sb.append(", ").append(uploadTypeId);
        sb.append(", ").append(serialNo);
        sb.append(", ").append(fileName);
        sb.append(", ").append(fileType);
        sb.append(", ").append("[binary...]");
        sb.append(", ").append(videoUrl);
        sb.append(", ").append(status);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(lastChangedBy);
        sb.append(", ").append(lastChangedOn);
        sb.append(", ").append(uploadedDateTime);
        sb.append(", ").append(regionalLanguageCode);

        sb.append(")");
        return sb.toString();
    }
}
