/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FreezerAckApproval implements Serializable {

    private static final long serialVersionUID = 1L;

    private String        cfa;
    private String        customerCode;
    private String        gateEntryNo;
    private LocalDate     postingDate;
    private String        description;
    private String        division;
    private String        adminApprove;
    private LocalDateTime adminApprovedOn;
    private String        adminRemark;
    private String        sdmApprove;
    private LocalDateTime sdmApprovedOn;
    private String        sdmRemark;
    private String        rsmApprove;
    private LocalDateTime rsmApprovedOn;
    private String        rsmRemark;
    private String        hoAdminApprove;
    private LocalDateTime hoAdminApprovedOn;
    private String        hoAdminRemark;
    private String        quantity;
    private String        adminApproveStatus;
    private String        hoAdminApproveStatus;

    public FreezerAckApproval() {}

    public FreezerAckApproval(FreezerAckApproval value) {
        this.cfa = value.cfa;
        this.customerCode = value.customerCode;
        this.gateEntryNo = value.gateEntryNo;
        this.postingDate = value.postingDate;
        this.description = value.description;
        this.division = value.division;
        this.adminApprove = value.adminApprove;
        this.adminApprovedOn = value.adminApprovedOn;
        this.adminRemark = value.adminRemark;
        this.sdmApprove = value.sdmApprove;
        this.sdmApprovedOn = value.sdmApprovedOn;
        this.sdmRemark = value.sdmRemark;
        this.rsmApprove = value.rsmApprove;
        this.rsmApprovedOn = value.rsmApprovedOn;
        this.rsmRemark = value.rsmRemark;
        this.hoAdminApprove = value.hoAdminApprove;
        this.hoAdminApprovedOn = value.hoAdminApprovedOn;
        this.hoAdminRemark = value.hoAdminRemark;
        this.quantity = value.quantity;
        this.adminApproveStatus = value.adminApproveStatus;
        this.hoAdminApproveStatus = value.hoAdminApproveStatus;
    }

    public FreezerAckApproval(
        String        cfa,
        String        customerCode,
        String        gateEntryNo,
        LocalDate     postingDate,
        String        description,
        String        division,
        String        adminApprove,
        LocalDateTime adminApprovedOn,
        String        adminRemark,
        String        sdmApprove,
        LocalDateTime sdmApprovedOn,
        String        sdmRemark,
        String        rsmApprove,
        LocalDateTime rsmApprovedOn,
        String        rsmRemark,
        String        hoAdminApprove,
        LocalDateTime hoAdminApprovedOn,
        String        hoAdminRemark,
        String        quantity,
        String        adminApproveStatus,
        String        hoAdminApproveStatus
    ) {
        this.cfa = cfa;
        this.customerCode = customerCode;
        this.gateEntryNo = gateEntryNo;
        this.postingDate = postingDate;
        this.description = description;
        this.division = division;
        this.adminApprove = adminApprove;
        this.adminApprovedOn = adminApprovedOn;
        this.adminRemark = adminRemark;
        this.sdmApprove = sdmApprove;
        this.sdmApprovedOn = sdmApprovedOn;
        this.sdmRemark = sdmRemark;
        this.rsmApprove = rsmApprove;
        this.rsmApprovedOn = rsmApprovedOn;
        this.rsmRemark = rsmRemark;
        this.hoAdminApprove = hoAdminApprove;
        this.hoAdminApprovedOn = hoAdminApprovedOn;
        this.hoAdminRemark = hoAdminRemark;
        this.quantity = quantity;
        this.adminApproveStatus = adminApproveStatus;
        this.hoAdminApproveStatus = hoAdminApproveStatus;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_ack_approval.CFA</code>.
     */
    public String getCfa() {
        return this.cfa;
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_ack_approval.CFA</code>.
     */
    public FreezerAckApproval setCfa(String cfa) {
        this.cfa = cfa;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_ack_approval.CUSTOMER_CODE</code>.
     */
    public String getCustomerCode() {
        return this.customerCode;
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_ack_approval.CUSTOMER_CODE</code>.
     */
    public FreezerAckApproval setCustomerCode(String customerCode) {
        this.customerCode = customerCode;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_ack_approval.GATE_ENTRY_NO</code>.
     */
    public String getGateEntryNo() {
        return this.gateEntryNo;
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_ack_approval.GATE_ENTRY_NO</code>.
     */
    public FreezerAckApproval setGateEntryNo(String gateEntryNo) {
        this.gateEntryNo = gateEntryNo;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_ack_approval.POSTING_DATE</code>.
     */
    public LocalDate getPostingDate() {
        return this.postingDate;
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_ack_approval.POSTING_DATE</code>.
     */
    public FreezerAckApproval setPostingDate(LocalDate postingDate) {
        this.postingDate = postingDate;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_ack_approval.DESCRIPTION</code>.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_ack_approval.DESCRIPTION</code>.
     */
    public FreezerAckApproval setDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_ack_approval.DIVISION</code>.
     */
    public String getDivision() {
        return this.division;
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_ack_approval.DIVISION</code>.
     */
    public FreezerAckApproval setDivision(String division) {
        this.division = division;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_ack_approval.ADMIN_APPROVE</code>.
     */
    public String getAdminApprove() {
        return this.adminApprove;
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_ack_approval.ADMIN_APPROVE</code>.
     */
    public FreezerAckApproval setAdminApprove(String adminApprove) {
        this.adminApprove = adminApprove;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_ack_approval.ADMIN_APPROVED_ON</code>.
     */
    public LocalDateTime getAdminApprovedOn() {
        return this.adminApprovedOn;
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_ack_approval.ADMIN_APPROVED_ON</code>.
     */
    public FreezerAckApproval setAdminApprovedOn(LocalDateTime adminApprovedOn) {
        this.adminApprovedOn = adminApprovedOn;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_ack_approval.ADMIN_REMARK</code>.
     */
    public String getAdminRemark() {
        return this.adminRemark;
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_ack_approval.ADMIN_REMARK</code>.
     */
    public FreezerAckApproval setAdminRemark(String adminRemark) {
        this.adminRemark = adminRemark;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_ack_approval.SDM_APPROVE</code>.
     */
    public String getSdmApprove() {
        return this.sdmApprove;
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_ack_approval.SDM_APPROVE</code>.
     */
    public FreezerAckApproval setSdmApprove(String sdmApprove) {
        this.sdmApprove = sdmApprove;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_ack_approval.SDM_APPROVED_ON</code>.
     */
    public LocalDateTime getSdmApprovedOn() {
        return this.sdmApprovedOn;
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_ack_approval.SDM_APPROVED_ON</code>.
     */
    public FreezerAckApproval setSdmApprovedOn(LocalDateTime sdmApprovedOn) {
        this.sdmApprovedOn = sdmApprovedOn;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_ack_approval.SDM_REMARK</code>.
     */
    public String getSdmRemark() {
        return this.sdmRemark;
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_ack_approval.SDM_REMARK</code>.
     */
    public FreezerAckApproval setSdmRemark(String sdmRemark) {
        this.sdmRemark = sdmRemark;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_ack_approval.RSM_APPROVE</code>.
     */
    public String getRsmApprove() {
        return this.rsmApprove;
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_ack_approval.RSM_APPROVE</code>.
     */
    public FreezerAckApproval setRsmApprove(String rsmApprove) {
        this.rsmApprove = rsmApprove;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_ack_approval.RSM_APPROVED_ON</code>.
     */
    public LocalDateTime getRsmApprovedOn() {
        return this.rsmApprovedOn;
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_ack_approval.RSM_APPROVED_ON</code>.
     */
    public FreezerAckApproval setRsmApprovedOn(LocalDateTime rsmApprovedOn) {
        this.rsmApprovedOn = rsmApprovedOn;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_ack_approval.RSM_REMARK</code>.
     */
    public String getRsmRemark() {
        return this.rsmRemark;
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_ack_approval.RSM_REMARK</code>.
     */
    public FreezerAckApproval setRsmRemark(String rsmRemark) {
        this.rsmRemark = rsmRemark;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_ack_approval.HO_ADMIN_APPROVE</code>.
     */
    public String getHoAdminApprove() {
        return this.hoAdminApprove;
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_ack_approval.HO_ADMIN_APPROVE</code>.
     */
    public FreezerAckApproval setHoAdminApprove(String hoAdminApprove) {
        this.hoAdminApprove = hoAdminApprove;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_ack_approval.HO_ADMIN_APPROVED_ON</code>.
     */
    public LocalDateTime getHoAdminApprovedOn() {
        return this.hoAdminApprovedOn;
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_ack_approval.HO_ADMIN_APPROVED_ON</code>.
     */
    public FreezerAckApproval setHoAdminApprovedOn(LocalDateTime hoAdminApprovedOn) {
        this.hoAdminApprovedOn = hoAdminApprovedOn;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_ack_approval.HO_ADMIN_REMARK</code>.
     */
    public String getHoAdminRemark() {
        return this.hoAdminRemark;
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_ack_approval.HO_ADMIN_REMARK</code>.
     */
    public FreezerAckApproval setHoAdminRemark(String hoAdminRemark) {
        this.hoAdminRemark = hoAdminRemark;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_ack_approval.QUANTITY</code>.
     */
    public String getQuantity() {
        return this.quantity;
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_ack_approval.QUANTITY</code>.
     */
    public FreezerAckApproval setQuantity(String quantity) {
        this.quantity = quantity;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_ack_approval.ADMIN_APPROVE_STATUS</code>.
     */
    public String getAdminApproveStatus() {
        return this.adminApproveStatus;
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_ack_approval.ADMIN_APPROVE_STATUS</code>.
     */
    public FreezerAckApproval setAdminApproveStatus(String adminApproveStatus) {
        this.adminApproveStatus = adminApproveStatus;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_ack_approval.HO_ADMIN_APPROVE_STATUS</code>.
     */
    public String getHoAdminApproveStatus() {
        return this.hoAdminApproveStatus;
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_ack_approval.HO_ADMIN_APPROVE_STATUS</code>.
     */
    public FreezerAckApproval setHoAdminApproveStatus(String hoAdminApproveStatus) {
        this.hoAdminApproveStatus = hoAdminApproveStatus;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final FreezerAckApproval other = (FreezerAckApproval) obj;
        if (cfa == null) {
            if (other.cfa != null)
                return false;
        }
        else if (!cfa.equals(other.cfa))
            return false;
        if (customerCode == null) {
            if (other.customerCode != null)
                return false;
        }
        else if (!customerCode.equals(other.customerCode))
            return false;
        if (gateEntryNo == null) {
            if (other.gateEntryNo != null)
                return false;
        }
        else if (!gateEntryNo.equals(other.gateEntryNo))
            return false;
        if (postingDate == null) {
            if (other.postingDate != null)
                return false;
        }
        else if (!postingDate.equals(other.postingDate))
            return false;
        if (description == null) {
            if (other.description != null)
                return false;
        }
        else if (!description.equals(other.description))
            return false;
        if (division == null) {
            if (other.division != null)
                return false;
        }
        else if (!division.equals(other.division))
            return false;
        if (adminApprove == null) {
            if (other.adminApprove != null)
                return false;
        }
        else if (!adminApprove.equals(other.adminApprove))
            return false;
        if (adminApprovedOn == null) {
            if (other.adminApprovedOn != null)
                return false;
        }
        else if (!adminApprovedOn.equals(other.adminApprovedOn))
            return false;
        if (adminRemark == null) {
            if (other.adminRemark != null)
                return false;
        }
        else if (!adminRemark.equals(other.adminRemark))
            return false;
        if (sdmApprove == null) {
            if (other.sdmApprove != null)
                return false;
        }
        else if (!sdmApprove.equals(other.sdmApprove))
            return false;
        if (sdmApprovedOn == null) {
            if (other.sdmApprovedOn != null)
                return false;
        }
        else if (!sdmApprovedOn.equals(other.sdmApprovedOn))
            return false;
        if (sdmRemark == null) {
            if (other.sdmRemark != null)
                return false;
        }
        else if (!sdmRemark.equals(other.sdmRemark))
            return false;
        if (rsmApprove == null) {
            if (other.rsmApprove != null)
                return false;
        }
        else if (!rsmApprove.equals(other.rsmApprove))
            return false;
        if (rsmApprovedOn == null) {
            if (other.rsmApprovedOn != null)
                return false;
        }
        else if (!rsmApprovedOn.equals(other.rsmApprovedOn))
            return false;
        if (rsmRemark == null) {
            if (other.rsmRemark != null)
                return false;
        }
        else if (!rsmRemark.equals(other.rsmRemark))
            return false;
        if (hoAdminApprove == null) {
            if (other.hoAdminApprove != null)
                return false;
        }
        else if (!hoAdminApprove.equals(other.hoAdminApprove))
            return false;
        if (hoAdminApprovedOn == null) {
            if (other.hoAdminApprovedOn != null)
                return false;
        }
        else if (!hoAdminApprovedOn.equals(other.hoAdminApprovedOn))
            return false;
        if (hoAdminRemark == null) {
            if (other.hoAdminRemark != null)
                return false;
        }
        else if (!hoAdminRemark.equals(other.hoAdminRemark))
            return false;
        if (quantity == null) {
            if (other.quantity != null)
                return false;
        }
        else if (!quantity.equals(other.quantity))
            return false;
        if (adminApproveStatus == null) {
            if (other.adminApproveStatus != null)
                return false;
        }
        else if (!adminApproveStatus.equals(other.adminApproveStatus))
            return false;
        if (hoAdminApproveStatus == null) {
            if (other.hoAdminApproveStatus != null)
                return false;
        }
        else if (!hoAdminApproveStatus.equals(other.hoAdminApproveStatus))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.cfa == null) ? 0 : this.cfa.hashCode());
        result = prime * result + ((this.customerCode == null) ? 0 : this.customerCode.hashCode());
        result = prime * result + ((this.gateEntryNo == null) ? 0 : this.gateEntryNo.hashCode());
        result = prime * result + ((this.postingDate == null) ? 0 : this.postingDate.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.division == null) ? 0 : this.division.hashCode());
        result = prime * result + ((this.adminApprove == null) ? 0 : this.adminApprove.hashCode());
        result = prime * result + ((this.adminApprovedOn == null) ? 0 : this.adminApprovedOn.hashCode());
        result = prime * result + ((this.adminRemark == null) ? 0 : this.adminRemark.hashCode());
        result = prime * result + ((this.sdmApprove == null) ? 0 : this.sdmApprove.hashCode());
        result = prime * result + ((this.sdmApprovedOn == null) ? 0 : this.sdmApprovedOn.hashCode());
        result = prime * result + ((this.sdmRemark == null) ? 0 : this.sdmRemark.hashCode());
        result = prime * result + ((this.rsmApprove == null) ? 0 : this.rsmApprove.hashCode());
        result = prime * result + ((this.rsmApprovedOn == null) ? 0 : this.rsmApprovedOn.hashCode());
        result = prime * result + ((this.rsmRemark == null) ? 0 : this.rsmRemark.hashCode());
        result = prime * result + ((this.hoAdminApprove == null) ? 0 : this.hoAdminApprove.hashCode());
        result = prime * result + ((this.hoAdminApprovedOn == null) ? 0 : this.hoAdminApprovedOn.hashCode());
        result = prime * result + ((this.hoAdminRemark == null) ? 0 : this.hoAdminRemark.hashCode());
        result = prime * result + ((this.quantity == null) ? 0 : this.quantity.hashCode());
        result = prime * result + ((this.adminApproveStatus == null) ? 0 : this.adminApproveStatus.hashCode());
        result = prime * result + ((this.hoAdminApproveStatus == null) ? 0 : this.hoAdminApproveStatus.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("FreezerAckApproval (");

        sb.append(cfa);
        sb.append(", ").append(customerCode);
        sb.append(", ").append(gateEntryNo);
        sb.append(", ").append(postingDate);
        sb.append(", ").append(description);
        sb.append(", ").append(division);
        sb.append(", ").append(adminApprove);
        sb.append(", ").append(adminApprovedOn);
        sb.append(", ").append(adminRemark);
        sb.append(", ").append(sdmApprove);
        sb.append(", ").append(sdmApprovedOn);
        sb.append(", ").append(sdmRemark);
        sb.append(", ").append(rsmApprove);
        sb.append(", ").append(rsmApprovedOn);
        sb.append(", ").append(rsmRemark);
        sb.append(", ").append(hoAdminApprove);
        sb.append(", ").append(hoAdminApprovedOn);
        sb.append(", ").append(hoAdminRemark);
        sb.append(", ").append(quantity);
        sb.append(", ").append(adminApproveStatus);
        sb.append(", ").append(hoAdminApproveStatus);

        sb.append(")");
        return sb.toString();
    }
}
