/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.records;


import com.jooq.jooq.model.tables.EkoBankerStagingData;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EkoBankerStagingDataRecord extends UpdatableRecordImpl<EkoBankerStagingDataRecord> implements Record6<String, String, String, String, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>vendor_portal_pbx.eko_banker_staging_data.year</code>.
     */
    public EkoBankerStagingDataRecord setYear(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.eko_banker_staging_data.year</code>.
     */
    public String getYear() {
        return (String) get(0);
    }

    /**
     * Setter for <code>vendor_portal_pbx.eko_banker_staging_data.month</code>.
     */
    public EkoBankerStagingDataRecord setMonth(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.eko_banker_staging_data.month</code>.
     */
    public String getMonth() {
        return (String) get(1);
    }

    /**
     * Setter for <code>vendor_portal_pbx.eko_banker_staging_data.plant</code>.
     */
    public EkoBankerStagingDataRecord setPlant(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.eko_banker_staging_data.plant</code>.
     */
    public String getPlant() {
        return (String) get(2);
    }

    /**
     * Setter for <code>vendor_portal_pbx.eko_banker_staging_data.society</code>.
     */
    public EkoBankerStagingDataRecord setSociety(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.eko_banker_staging_data.society</code>.
     */
    public String getSociety() {
        return (String) get(3);
    }

    /**
     * Setter for <code>vendor_portal_pbx.eko_banker_staging_data.data</code>.
     */
    public EkoBankerStagingDataRecord setData(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.eko_banker_staging_data.data</code>.
     */
    public String getData() {
        return (String) get(4);
    }

    /**
     * Setter for <code>vendor_portal_pbx.eko_banker_staging_data.created_on</code>.
     */
    public EkoBankerStagingDataRecord setCreatedOn(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.eko_banker_staging_data.created_on</code>.
     */
    public LocalDateTime getCreatedOn() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record4<String, String, String, String> key() {
        return (Record4) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, String, String, String, String, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, String, String, String, String, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return EkoBankerStagingData.EKO_BANKER_STAGING_DATA.YEAR;
    }

    @Override
    public Field<String> field2() {
        return EkoBankerStagingData.EKO_BANKER_STAGING_DATA.MONTH;
    }

    @Override
    public Field<String> field3() {
        return EkoBankerStagingData.EKO_BANKER_STAGING_DATA.PLANT;
    }

    @Override
    public Field<String> field4() {
        return EkoBankerStagingData.EKO_BANKER_STAGING_DATA.SOCIETY;
    }

    @Override
    public Field<String> field5() {
        return EkoBankerStagingData.EKO_BANKER_STAGING_DATA.DATA;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return EkoBankerStagingData.EKO_BANKER_STAGING_DATA.CREATED_ON;
    }

    @Override
    public String component1() {
        return getYear();
    }

    @Override
    public String component2() {
        return getMonth();
    }

    @Override
    public String component3() {
        return getPlant();
    }

    @Override
    public String component4() {
        return getSociety();
    }

    @Override
    public String component5() {
        return getData();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedOn();
    }

    @Override
    public String value1() {
        return getYear();
    }

    @Override
    public String value2() {
        return getMonth();
    }

    @Override
    public String value3() {
        return getPlant();
    }

    @Override
    public String value4() {
        return getSociety();
    }

    @Override
    public String value5() {
        return getData();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedOn();
    }

    @Override
    public EkoBankerStagingDataRecord value1(String value) {
        setYear(value);
        return this;
    }

    @Override
    public EkoBankerStagingDataRecord value2(String value) {
        setMonth(value);
        return this;
    }

    @Override
    public EkoBankerStagingDataRecord value3(String value) {
        setPlant(value);
        return this;
    }

    @Override
    public EkoBankerStagingDataRecord value4(String value) {
        setSociety(value);
        return this;
    }

    @Override
    public EkoBankerStagingDataRecord value5(String value) {
        setData(value);
        return this;
    }

    @Override
    public EkoBankerStagingDataRecord value6(LocalDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public EkoBankerStagingDataRecord values(String value1, String value2, String value3, String value4, String value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EkoBankerStagingDataRecord
     */
    public EkoBankerStagingDataRecord() {
        super(EkoBankerStagingData.EKO_BANKER_STAGING_DATA);
    }

    /**
     * Create a detached, initialised EkoBankerStagingDataRecord
     */
    public EkoBankerStagingDataRecord(String year, String month, String plant, String society, String data, LocalDateTime createdOn) {
        super(EkoBankerStagingData.EKO_BANKER_STAGING_DATA);

        setYear(year);
        setMonth(month);
        setPlant(plant);
        setSociety(society);
        setData(data);
        setCreatedOn(createdOn);
    }
}
