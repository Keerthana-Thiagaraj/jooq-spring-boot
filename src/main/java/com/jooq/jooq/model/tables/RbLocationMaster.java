/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.RbLocationMasterRecord;

import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row18;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RbLocationMaster extends TableImpl<RbLocationMasterRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.RB_LOCATION_MASTER</code>
     */
    public static final RbLocationMaster RB_LOCATION_MASTER = new RbLocationMaster();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RbLocationMasterRecord> getRecordType() {
        return RbLocationMasterRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.RB_LOCATION_MASTER.RB_LOCATION_CODE</code>.
     */
    public final TableField<RbLocationMasterRecord, Integer> RB_LOCATION_CODE = createField(DSL.name("RB_LOCATION_CODE"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_LOCATION_MASTER.RB_LOCATION_NAME</code>.
     */
    public final TableField<RbLocationMasterRecord, String> RB_LOCATION_NAME = createField(DSL.name("RB_LOCATION_NAME"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_LOCATION_MASTER.TR_ADDRESS1</code>.
     */
    public final TableField<RbLocationMasterRecord, String> TR_ADDRESS1 = createField(DSL.name("TR_ADDRESS1"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_LOCATION_MASTER.TR_ADDRESS2</code>.
     */
    public final TableField<RbLocationMasterRecord, String> TR_ADDRESS2 = createField(DSL.name("TR_ADDRESS2"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_LOCATION_MASTER.TR_ADDRESS3</code>.
     */
    public final TableField<RbLocationMasterRecord, String> TR_ADDRESS3 = createField(DSL.name("TR_ADDRESS3"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_LOCATION_MASTER.CITY</code>.
     */
    public final TableField<RbLocationMasterRecord, String> CITY = createField(DSL.name("CITY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_LOCATION_MASTER.STATE</code>.
     */
    public final TableField<RbLocationMasterRecord, String> STATE = createField(DSL.name("STATE"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_LOCATION_MASTER.COUNTRY</code>.
     */
    public final TableField<RbLocationMasterRecord, String> COUNTRY = createField(DSL.name("COUNTRY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_LOCATION_MASTER.PINCODE</code>.
     */
    public final TableField<RbLocationMasterRecord, Integer> PINCODE = createField(DSL.name("PINCODE"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_LOCATION_MASTER.PHONE_NO</code>.
     */
    public final TableField<RbLocationMasterRecord, String> PHONE_NO = createField(DSL.name("PHONE_NO"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_LOCATION_MASTER.TR_LAT</code>.
     */
    public final TableField<RbLocationMasterRecord, String> TR_LAT = createField(DSL.name("TR_LAT"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_LOCATION_MASTER.TR_LONG</code>.
     */
    public final TableField<RbLocationMasterRecord, String> TR_LONG = createField(DSL.name("TR_LONG"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_LOCATION_MASTER.STATUS</code>.
     */
    public final TableField<RbLocationMasterRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_LOCATION_MASTER.CREATED_BY</code>.
     */
    public final TableField<RbLocationMasterRecord, String> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_LOCATION_MASTER.CREATED_ON</code>.
     */
    public final TableField<RbLocationMasterRecord, LocalDateTime> CREATED_ON = createField(DSL.name("CREATED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_LOCATION_MASTER.LAST_CHANGED_BY</code>.
     */
    public final TableField<RbLocationMasterRecord, String> LAST_CHANGED_BY = createField(DSL.name("LAST_CHANGED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_LOCATION_MASTER.LAST_CHANGED_ON</code>.
     */
    public final TableField<RbLocationMasterRecord, LocalDateTime> LAST_CHANGED_ON = createField(DSL.name("LAST_CHANGED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_LOCATION_MASTER.BUFFER_TIME</code>.
     */
    public final TableField<RbLocationMasterRecord, LocalTime> BUFFER_TIME = createField(DSL.name("BUFFER_TIME"), SQLDataType.LOCALTIME.defaultValue(DSL.inline("02:00:00", SQLDataType.LOCALTIME)), this, "");

    private RbLocationMaster(Name alias, Table<RbLocationMasterRecord> aliased) {
        this(alias, aliased, null);
    }

    private RbLocationMaster(Name alias, Table<RbLocationMasterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.RB_LOCATION_MASTER</code> table reference
     */
    public RbLocationMaster(String alias) {
        this(DSL.name(alias), RB_LOCATION_MASTER);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.RB_LOCATION_MASTER</code> table reference
     */
    public RbLocationMaster(Name alias) {
        this(alias, RB_LOCATION_MASTER);
    }

    /**
     * Create a <code>vendor_portal_pbx.RB_LOCATION_MASTER</code> table reference
     */
    public RbLocationMaster() {
        this(DSL.name("RB_LOCATION_MASTER"), null);
    }

    public <O extends Record> RbLocationMaster(Table<O> child, ForeignKey<O, RbLocationMasterRecord> key) {
        super(child, key, RB_LOCATION_MASTER);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<RbLocationMasterRecord> getPrimaryKey() {
        return Keys.KEY_RB_LOCATION_MASTER_PRIMARY;
    }

    @Override
    public List<UniqueKey<RbLocationMasterRecord>> getKeys() {
        return Arrays.<UniqueKey<RbLocationMasterRecord>>asList(Keys.KEY_RB_LOCATION_MASTER_PRIMARY);
    }

    @Override
    public RbLocationMaster as(String alias) {
        return new RbLocationMaster(DSL.name(alias), this);
    }

    @Override
    public RbLocationMaster as(Name alias) {
        return new RbLocationMaster(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RbLocationMaster rename(String name) {
        return new RbLocationMaster(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RbLocationMaster rename(Name name) {
        return new RbLocationMaster(name, null);
    }

    // -------------------------------------------------------------------------
    // Row18 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row18<Integer, String, String, String, String, String, String, String, Integer, String, String, String, String, String, LocalDateTime, String, LocalDateTime, LocalTime> fieldsRow() {
        return (Row18) super.fieldsRow();
    }
}
