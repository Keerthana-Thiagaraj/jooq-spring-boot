/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.TcPlantVisitRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TcPlantVisit extends TableImpl<TcPlantVisitRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.TC_PLANT_VISIT</code>
     */
    public static final TcPlantVisit TC_PLANT_VISIT = new TcPlantVisit();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TcPlantVisitRecord> getRecordType() {
        return TcPlantVisitRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.TC_PLANT_VISIT.REQUEST_ID</code>.
     */
    public final TableField<TcPlantVisitRecord, String> REQUEST_ID = createField(DSL.name("REQUEST_ID"), SQLDataType.VARCHAR(15).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_PLANT_VISIT.PLANT_CODE</code>.
     */
    public final TableField<TcPlantVisitRecord, String> PLANT_CODE = createField(DSL.name("PLANT_CODE"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_PLANT_VISIT.VISIT_DATE</code>.
     */
    public final TableField<TcPlantVisitRecord, LocalDate> VISIT_DATE = createField(DSL.name("VISIT_DATE"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_PLANT_VISIT.ROUTE_CODE</code>.
     */
    public final TableField<TcPlantVisitRecord, Integer> ROUTE_CODE = createField(DSL.name("ROUTE_CODE"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_PLANT_VISIT.START_TIME</code>.
     */
    public final TableField<TcPlantVisitRecord, LocalTime> START_TIME = createField(DSL.name("START_TIME"), SQLDataType.LOCALTIME, this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_PLANT_VISIT.END_TIME</code>.
     */
    public final TableField<TcPlantVisitRecord, LocalTime> END_TIME = createField(DSL.name("END_TIME"), SQLDataType.LOCALTIME, this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_PLANT_VISIT.CREATED_BY</code>.
     */
    public final TableField<TcPlantVisitRecord, String> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_PLANT_VISIT.CREATED_ON</code>.
     */
    public final TableField<TcPlantVisitRecord, LocalDateTime> CREATED_ON = createField(DSL.name("CREATED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_PLANT_VISIT.LAST_CHANGED_BY</code>.
     */
    public final TableField<TcPlantVisitRecord, String> LAST_CHANGED_BY = createField(DSL.name("LAST_CHANGED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_PLANT_VISIT.LAST_CHANGED_ON</code>.
     */
    public final TableField<TcPlantVisitRecord, LocalDateTime> LAST_CHANGED_ON = createField(DSL.name("LAST_CHANGED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    private TcPlantVisit(Name alias, Table<TcPlantVisitRecord> aliased) {
        this(alias, aliased, null);
    }

    private TcPlantVisit(Name alias, Table<TcPlantVisitRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.TC_PLANT_VISIT</code> table reference
     */
    public TcPlantVisit(String alias) {
        this(DSL.name(alias), TC_PLANT_VISIT);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.TC_PLANT_VISIT</code> table reference
     */
    public TcPlantVisit(Name alias) {
        this(alias, TC_PLANT_VISIT);
    }

    /**
     * Create a <code>vendor_portal_pbx.TC_PLANT_VISIT</code> table reference
     */
    public TcPlantVisit() {
        this(DSL.name("TC_PLANT_VISIT"), null);
    }

    public <O extends Record> TcPlantVisit(Table<O> child, ForeignKey<O, TcPlantVisitRecord> key) {
        super(child, key, TC_PLANT_VISIT);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<TcPlantVisitRecord> getPrimaryKey() {
        return Keys.KEY_TC_PLANT_VISIT_PRIMARY;
    }

    @Override
    public List<UniqueKey<TcPlantVisitRecord>> getKeys() {
        return Arrays.<UniqueKey<TcPlantVisitRecord>>asList(Keys.KEY_TC_PLANT_VISIT_PRIMARY);
    }

    @Override
    public List<ForeignKey<TcPlantVisitRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TcPlantVisitRecord, ?>>asList(Keys.FK_REQUEST_HA_PV);
    }

    private transient TcRequestHa _tcRequestHa;

    public TcRequestHa tcRequestHa() {
        if (_tcRequestHa == null)
            _tcRequestHa = new TcRequestHa(this, Keys.FK_REQUEST_HA_PV);

        return _tcRequestHa;
    }

    @Override
    public TcPlantVisit as(String alias) {
        return new TcPlantVisit(DSL.name(alias), this);
    }

    @Override
    public TcPlantVisit as(Name alias) {
        return new TcPlantVisit(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TcPlantVisit rename(String name) {
        return new TcPlantVisit(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TcPlantVisit rename(Name name) {
        return new TcPlantVisit(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<String, String, LocalDate, Integer, LocalTime, LocalTime, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
