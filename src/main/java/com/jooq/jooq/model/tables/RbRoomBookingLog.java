/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.RbRoomBookingLogRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row18;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RbRoomBookingLog extends TableImpl<RbRoomBookingLogRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG</code>
     */
    public static final RbRoomBookingLog RB_ROOM_BOOKING_LOG = new RbRoomBookingLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RbRoomBookingLogRecord> getRecordType() {
        return RbRoomBookingLogRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.RB_LOCATION_CODE</code>.
     */
    public final TableField<RbRoomBookingLogRecord, Integer> RB_LOCATION_CODE = createField(DSL.name("RB_LOCATION_CODE"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.BUILDING_CODE</code>.
     */
    public final TableField<RbRoomBookingLogRecord, Integer> BUILDING_CODE = createField(DSL.name("BUILDING_CODE"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.FLOOR_CODE</code>.
     */
    public final TableField<RbRoomBookingLogRecord, Integer> FLOOR_CODE = createField(DSL.name("FLOOR_CODE"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.ROOM_CODE</code>.
     */
    public final TableField<RbRoomBookingLogRecord, Integer> ROOM_CODE = createField(DSL.name("ROOM_CODE"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.BOOKED_DATE</code>.
     */
    public final TableField<RbRoomBookingLogRecord, LocalDate> BOOKED_DATE = createField(DSL.name("BOOKED_DATE"), SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.FROM_TIME</code>.
     */
    public final TableField<RbRoomBookingLogRecord, LocalTime> FROM_TIME = createField(DSL.name("FROM_TIME"), SQLDataType.LOCALTIME.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.TO_TIME</code>.
     */
    public final TableField<RbRoomBookingLogRecord, LocalTime> TO_TIME = createField(DSL.name("TO_TIME"), SQLDataType.LOCALTIME, this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.ACTUAL_SEAT</code>.
     */
    public final TableField<RbRoomBookingLogRecord, Integer> ACTUAL_SEAT = createField(DSL.name("ACTUAL_SEAT"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.BOOKED_SEAT</code>.
     */
    public final TableField<RbRoomBookingLogRecord, Integer> BOOKED_SEAT = createField(DSL.name("BOOKED_SEAT"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.AVAILABLE_SEAT</code>.
     */
    public final TableField<RbRoomBookingLogRecord, Integer> AVAILABLE_SEAT = createField(DSL.name("AVAILABLE_SEAT"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.EMAIL</code>.
     */
    public final TableField<RbRoomBookingLogRecord, String> EMAIL = createField(DSL.name("EMAIL"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.PHONE</code>.
     */
    public final TableField<RbRoomBookingLogRecord, String> PHONE = createField(DSL.name("PHONE"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.SUBJECT</code>.
     */
    public final TableField<RbRoomBookingLogRecord, String> SUBJECT = createField(DSL.name("SUBJECT"), SQLDataType.VARCHAR(250), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.STATUS_FLAG</code>.
     */
    public final TableField<RbRoomBookingLogRecord, String> STATUS_FLAG = createField(DSL.name("STATUS_FLAG"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.BOOKED_FOR</code>.
     */
    public final TableField<RbRoomBookingLogRecord, String> BOOKED_FOR = createField(DSL.name("BOOKED_FOR"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.REMARKS</code>.
     */
    public final TableField<RbRoomBookingLogRecord, String> REMARKS = createField(DSL.name("REMARKS"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.CREATED_BY</code>.
     */
    public final TableField<RbRoomBookingLogRecord, String> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.CREATED_ON</code>.
     */
    public final TableField<RbRoomBookingLogRecord, LocalDateTime> CREATED_ON = createField(DSL.name("CREATED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    private RbRoomBookingLog(Name alias, Table<RbRoomBookingLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private RbRoomBookingLog(Name alias, Table<RbRoomBookingLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG</code> table reference
     */
    public RbRoomBookingLog(String alias) {
        this(DSL.name(alias), RB_ROOM_BOOKING_LOG);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG</code> table reference
     */
    public RbRoomBookingLog(Name alias) {
        this(alias, RB_ROOM_BOOKING_LOG);
    }

    /**
     * Create a <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG</code> table reference
     */
    public RbRoomBookingLog() {
        this(DSL.name("RB_ROOM_BOOKING_LOG"), null);
    }

    public <O extends Record> RbRoomBookingLog(Table<O> child, ForeignKey<O, RbRoomBookingLogRecord> key) {
        super(child, key, RB_ROOM_BOOKING_LOG);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<RbRoomBookingLogRecord> getPrimaryKey() {
        return Keys.KEY_RB_ROOM_BOOKING_LOG_PRIMARY;
    }

    @Override
    public List<UniqueKey<RbRoomBookingLogRecord>> getKeys() {
        return Arrays.<UniqueKey<RbRoomBookingLogRecord>>asList(Keys.KEY_RB_ROOM_BOOKING_LOG_PRIMARY);
    }

    @Override
    public RbRoomBookingLog as(String alias) {
        return new RbRoomBookingLog(DSL.name(alias), this);
    }

    @Override
    public RbRoomBookingLog as(Name alias) {
        return new RbRoomBookingLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RbRoomBookingLog rename(String name) {
        return new RbRoomBookingLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RbRoomBookingLog rename(Name name) {
        return new RbRoomBookingLog(name, null);
    }

    // -------------------------------------------------------------------------
    // Row18 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row18<Integer, Integer, Integer, Integer, LocalDate, LocalTime, LocalTime, Integer, Integer, Integer, String, String, String, String, String, String, String, LocalDateTime> fieldsRow() {
        return (Row18) super.fieldsRow();
    }
}
