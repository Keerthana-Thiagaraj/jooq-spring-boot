/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.CustomerSfHistoryRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerSfHistory extends TableImpl<CustomerSfHistoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.customer_sf_history</code>
     */
    public static final CustomerSfHistory CUSTOMER_SF_HISTORY = new CustomerSfHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CustomerSfHistoryRecord> getRecordType() {
        return CustomerSfHistoryRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.customer_sf_history.COMP_CODE</code>.
     */
    public final TableField<CustomerSfHistoryRecord, String> COMP_CODE = createField(DSL.name("COMP_CODE"), SQLDataType.VARCHAR(5).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_history.USER_ID</code>.
     */
    public final TableField<CustomerSfHistoryRecord, String> USER_ID = createField(DSL.name("USER_ID"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_history.MONTH</code>.
     */
    public final TableField<CustomerSfHistoryRecord, Integer> MONTH = createField(DSL.name("MONTH"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_history.YEAR</code>.
     */
    public final TableField<CustomerSfHistoryRecord, String> YEAR = createField(DSL.name("YEAR"), SQLDataType.VARCHAR(5).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_history.PLANT_CODE</code>.
     */
    public final TableField<CustomerSfHistoryRecord, String> PLANT_CODE = createField(DSL.name("PLANT_CODE"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_history.HMB_CODE</code>.
     */
    public final TableField<CustomerSfHistoryRecord, String> HMB_CODE = createField(DSL.name("HMB_CODE"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_history.PLANT_NAME</code>.
     */
    public final TableField<CustomerSfHistoryRecord, String> PLANT_NAME = createField(DSL.name("PLANT_NAME"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_history.HMB_NAME</code>.
     */
    public final TableField<CustomerSfHistoryRecord, String> HMB_NAME = createField(DSL.name("HMB_NAME"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_history.SKIP_COUNT</code>.
     */
    public final TableField<CustomerSfHistoryRecord, Integer> SKIP_COUNT = createField(DSL.name("SKIP_COUNT"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_history.STATUS</code>.
     */
    public final TableField<CustomerSfHistoryRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_history.CREATED_BY</code>.
     */
    public final TableField<CustomerSfHistoryRecord, String> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_history.CREATED_ON</code>.
     */
    public final TableField<CustomerSfHistoryRecord, LocalDateTime> CREATED_ON = createField(DSL.name("CREATED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    private CustomerSfHistory(Name alias, Table<CustomerSfHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private CustomerSfHistory(Name alias, Table<CustomerSfHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.customer_sf_history</code> table reference
     */
    public CustomerSfHistory(String alias) {
        this(DSL.name(alias), CUSTOMER_SF_HISTORY);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.customer_sf_history</code> table reference
     */
    public CustomerSfHistory(Name alias) {
        this(alias, CUSTOMER_SF_HISTORY);
    }

    /**
     * Create a <code>vendor_portal_pbx.customer_sf_history</code> table reference
     */
    public CustomerSfHistory() {
        this(DSL.name("customer_sf_history"), null);
    }

    public <O extends Record> CustomerSfHistory(Table<O> child, ForeignKey<O, CustomerSfHistoryRecord> key) {
        super(child, key, CUSTOMER_SF_HISTORY);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<CustomerSfHistoryRecord> getPrimaryKey() {
        return Keys.KEY_CUSTOMER_SF_HISTORY_PRIMARY;
    }

    @Override
    public List<UniqueKey<CustomerSfHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<CustomerSfHistoryRecord>>asList(Keys.KEY_CUSTOMER_SF_HISTORY_PRIMARY);
    }

    @Override
    public CustomerSfHistory as(String alias) {
        return new CustomerSfHistory(DSL.name(alias), this);
    }

    @Override
    public CustomerSfHistory as(Name alias) {
        return new CustomerSfHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CustomerSfHistory rename(String name) {
        return new CustomerSfHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CustomerSfHistory rename(Name name) {
        return new CustomerSfHistory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<String, String, Integer, String, String, String, String, String, Integer, String, String, LocalDateTime> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
