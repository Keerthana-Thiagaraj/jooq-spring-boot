/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.records;


import com.jooq.jooq.model.tables.CompanyMaster;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompanyMasterRecord extends UpdatableRecordImpl<CompanyMasterRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>vendor_portal_pbx.company_master.COMP_CODE</code>.
     */
    public CompanyMasterRecord setCompCode(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.company_master.COMP_CODE</code>.
     */
    public String getCompCode() {
        return (String) get(0);
    }

    /**
     * Setter for <code>vendor_portal_pbx.company_master.DESC</code>.
     */
    public CompanyMasterRecord setDesc(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.company_master.DESC</code>.
     */
    public String getDesc() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return CompanyMaster.COMPANY_MASTER.COMP_CODE;
    }

    @Override
    public Field<String> field2() {
        return CompanyMaster.COMPANY_MASTER.DESC;
    }

    @Override
    public String component1() {
        return getCompCode();
    }

    @Override
    public String component2() {
        return getDesc();
    }

    @Override
    public String value1() {
        return getCompCode();
    }

    @Override
    public String value2() {
        return getDesc();
    }

    @Override
    public CompanyMasterRecord value1(String value) {
        setCompCode(value);
        return this;
    }

    @Override
    public CompanyMasterRecord value2(String value) {
        setDesc(value);
        return this;
    }

    @Override
    public CompanyMasterRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CompanyMasterRecord
     */
    public CompanyMasterRecord() {
        super(CompanyMaster.COMPANY_MASTER);
    }

    /**
     * Create a detached, initialised CompanyMasterRecord
     */
    public CompanyMasterRecord(String compCode, String desc) {
        super(CompanyMaster.COMPANY_MASTER);

        setCompCode(compCode);
        setDesc(desc);
    }
}
