/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.DailySchedulerLogRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DailySchedulerLog extends TableImpl<DailySchedulerLogRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.daily_scheduler_log</code>
     */
    public static final DailySchedulerLog DAILY_SCHEDULER_LOG = new DailySchedulerLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DailySchedulerLogRecord> getRecordType() {
        return DailySchedulerLogRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.daily_scheduler_log.MODULE_NAME</code>.
     */
    public final TableField<DailySchedulerLogRecord, String> MODULE_NAME = createField(DSL.name("MODULE_NAME"), SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.daily_scheduler_log.MENU</code>.
     */
    public final TableField<DailySchedulerLogRecord, String> MENU = createField(DSL.name("MENU"), SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.daily_scheduler_log.FUNCTION_NAME</code>.
     */
    public final TableField<DailySchedulerLogRecord, String> FUNCTION_NAME = createField(DSL.name("FUNCTION_NAME"), SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.daily_scheduler_log.USER_ID</code>.
     */
    public final TableField<DailySchedulerLogRecord, String> USER_ID = createField(DSL.name("USER_ID"), SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.daily_scheduler_log.CREATED_ON</code>.
     */
    public final TableField<DailySchedulerLogRecord, LocalDateTime> CREATED_ON = createField(DSL.name("CREATED_ON"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "");

    private DailySchedulerLog(Name alias, Table<DailySchedulerLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private DailySchedulerLog(Name alias, Table<DailySchedulerLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.daily_scheduler_log</code> table reference
     */
    public DailySchedulerLog(String alias) {
        this(DSL.name(alias), DAILY_SCHEDULER_LOG);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.daily_scheduler_log</code> table reference
     */
    public DailySchedulerLog(Name alias) {
        this(alias, DAILY_SCHEDULER_LOG);
    }

    /**
     * Create a <code>vendor_portal_pbx.daily_scheduler_log</code> table reference
     */
    public DailySchedulerLog() {
        this(DSL.name("daily_scheduler_log"), null);
    }

    public <O extends Record> DailySchedulerLog(Table<O> child, ForeignKey<O, DailySchedulerLogRecord> key) {
        super(child, key, DAILY_SCHEDULER_LOG);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<DailySchedulerLogRecord> getPrimaryKey() {
        return Keys.KEY_DAILY_SCHEDULER_LOG_PRIMARY;
    }

    @Override
    public List<UniqueKey<DailySchedulerLogRecord>> getKeys() {
        return Arrays.<UniqueKey<DailySchedulerLogRecord>>asList(Keys.KEY_DAILY_SCHEDULER_LOG_PRIMARY);
    }

    @Override
    public DailySchedulerLog as(String alias) {
        return new DailySchedulerLog(DSL.name(alias), this);
    }

    @Override
    public DailySchedulerLog as(Name alias) {
        return new DailySchedulerLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DailySchedulerLog rename(String name) {
        return new DailySchedulerLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DailySchedulerLog rename(Name name) {
        return new DailySchedulerLog(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, String, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
