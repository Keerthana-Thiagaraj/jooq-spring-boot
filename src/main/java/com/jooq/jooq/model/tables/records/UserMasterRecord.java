/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.records;


import com.jooq.jooq.model.tables.UserMaster;

import java.time.LocalDateTime;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "user_master",
    schema = "jooq_demo",
    uniqueConstraints = {
        @UniqueConstraint(name = "KEY_user_master_PRIMARY", columnNames = { "USER_ID" })
    }
)
public class UserMasterRecord extends UpdatableRecordImpl<UserMasterRecord> implements Record7<Integer, String, String, String, LocalDateTime, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jooq_demo.user_master.USER_ID</code>.
     */
    public UserMasterRecord setUserId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>jooq_demo.user_master.USER_ID</code>.
     */
    @Id
    @Column(name = "USER_ID", nullable = false, precision = 10)
    @NotNull
    public Integer getUserId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>jooq_demo.user_master.CREATED_BY</code>.
     */
    public UserMasterRecord setCreatedBy(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>jooq_demo.user_master.CREATED_BY</code>.
     */
    @Column(name = "CREATED_BY", length = 45)
    @Size(max = 45)
    public String getCreatedBy() {
        return (String) get(1);
    }

    /**
     * Setter for <code>jooq_demo.user_master.STATUS</code>.
     */
    public UserMasterRecord setStatus(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>jooq_demo.user_master.STATUS</code>.
     */
    @Column(name = "STATUS", length = 45)
    @Size(max = 45)
    public String getStatus() {
        return (String) get(2);
    }

    /**
     * Setter for <code>jooq_demo.user_master.NAME</code>.
     */
    public UserMasterRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>jooq_demo.user_master.NAME</code>.
     */
    @Column(name = "NAME", length = 45)
    @Size(max = 45)
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>jooq_demo.user_master.CREATED_ON</code>.
     */
    public UserMasterRecord setCreatedOn(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>jooq_demo.user_master.CREATED_ON</code>.
     */
    @Column(name = "CREATED_ON")
    public LocalDateTime getCreatedOn() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>jooq_demo.user_master.MOBILE</code>.
     */
    public UserMasterRecord setMobile(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>jooq_demo.user_master.MOBILE</code>.
     */
    @Column(name = "MOBILE", length = 10)
    @Size(max = 10)
    public String getMobile() {
        return (String) get(5);
    }

    /**
     * Setter for <code>jooq_demo.user_master.EMAIL_ID</code>.
     */
    public UserMasterRecord setEmailId(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>jooq_demo.user_master.EMAIL_ID</code>.
     */
    @Column(name = "EMAIL_ID", length = 80)
    @Size(max = 80)
    public String getEmailId() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, String, String, LocalDateTime, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, String, String, String, LocalDateTime, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return UserMaster.USER_MASTER.USER_ID;
    }

    @Override
    public Field<String> field2() {
        return UserMaster.USER_MASTER.CREATED_BY;
    }

    @Override
    public Field<String> field3() {
        return UserMaster.USER_MASTER.STATUS;
    }

    @Override
    public Field<String> field4() {
        return UserMaster.USER_MASTER.NAME;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return UserMaster.USER_MASTER.CREATED_ON;
    }

    @Override
    public Field<String> field6() {
        return UserMaster.USER_MASTER.MOBILE;
    }

    @Override
    public Field<String> field7() {
        return UserMaster.USER_MASTER.EMAIL_ID;
    }

    @Override
    public Integer component1() {
        return getUserId();
    }

    @Override
    public String component2() {
        return getCreatedBy();
    }

    @Override
    public String component3() {
        return getStatus();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public LocalDateTime component5() {
        return getCreatedOn();
    }

    @Override
    public String component6() {
        return getMobile();
    }

    @Override
    public String component7() {
        return getEmailId();
    }

    @Override
    public Integer value1() {
        return getUserId();
    }

    @Override
    public String value2() {
        return getCreatedBy();
    }

    @Override
    public String value3() {
        return getStatus();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public LocalDateTime value5() {
        return getCreatedOn();
    }

    @Override
    public String value6() {
        return getMobile();
    }

    @Override
    public String value7() {
        return getEmailId();
    }

    @Override
    public UserMasterRecord value1(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserMasterRecord value2(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public UserMasterRecord value3(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public UserMasterRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public UserMasterRecord value5(LocalDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public UserMasterRecord value6(String value) {
        setMobile(value);
        return this;
    }

    @Override
    public UserMasterRecord value7(String value) {
        setEmailId(value);
        return this;
    }

    @Override
    public UserMasterRecord values(Integer value1, String value2, String value3, String value4, LocalDateTime value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserMasterRecord
     */
    public UserMasterRecord() {
        super(UserMaster.USER_MASTER);
    }

    /**
     * Create a detached, initialised UserMasterRecord
     */
    public UserMasterRecord(Integer userId, String createdBy, String status, String name, LocalDateTime createdOn, String mobile, String emailId) {
        super(UserMaster.USER_MASTER);

        setUserId(userId);
        setCreatedBy(createdBy);
        setStatus(status);
        setName(name);
        setCreatedOn(createdOn);
        setMobile(mobile);
        setEmailId(emailId);
    }
}
