/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TcCalenderPlanner implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer   trainingCenterCode;
    private LocalDate date;
    private String    year;
    private String    month;
    private String    day;
    private String    holidayFlag;
    private String    bookedFlag;
    private String    availabilityFlag;
    private String    colorCode;
    private String    remarks;
    private LocalDate updatedOn;
    private String    updatedBy;

    public TcCalenderPlanner() {}

    public TcCalenderPlanner(TcCalenderPlanner value) {
        this.trainingCenterCode = value.trainingCenterCode;
        this.date = value.date;
        this.year = value.year;
        this.month = value.month;
        this.day = value.day;
        this.holidayFlag = value.holidayFlag;
        this.bookedFlag = value.bookedFlag;
        this.availabilityFlag = value.availabilityFlag;
        this.colorCode = value.colorCode;
        this.remarks = value.remarks;
        this.updatedOn = value.updatedOn;
        this.updatedBy = value.updatedBy;
    }

    public TcCalenderPlanner(
        Integer   trainingCenterCode,
        LocalDate date,
        String    year,
        String    month,
        String    day,
        String    holidayFlag,
        String    bookedFlag,
        String    availabilityFlag,
        String    colorCode,
        String    remarks,
        LocalDate updatedOn,
        String    updatedBy
    ) {
        this.trainingCenterCode = trainingCenterCode;
        this.date = date;
        this.year = year;
        this.month = month;
        this.day = day;
        this.holidayFlag = holidayFlag;
        this.bookedFlag = bookedFlag;
        this.availabilityFlag = availabilityFlag;
        this.colorCode = colorCode;
        this.remarks = remarks;
        this.updatedOn = updatedOn;
        this.updatedBy = updatedBy;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.TRAINING_CENTER_CODE</code>.
     */
    public Integer getTrainingCenterCode() {
        return this.trainingCenterCode;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.TRAINING_CENTER_CODE</code>.
     */
    public TcCalenderPlanner setTrainingCenterCode(Integer trainingCenterCode) {
        this.trainingCenterCode = trainingCenterCode;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.DATE</code>.
     */
    public LocalDate getDate() {
        return this.date;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.DATE</code>.
     */
    public TcCalenderPlanner setDate(LocalDate date) {
        this.date = date;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.YEAR</code>.
     */
    public String getYear() {
        return this.year;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.YEAR</code>.
     */
    public TcCalenderPlanner setYear(String year) {
        this.year = year;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.MONTH</code>.
     */
    public String getMonth() {
        return this.month;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.MONTH</code>.
     */
    public TcCalenderPlanner setMonth(String month) {
        this.month = month;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.DAY</code>.
     */
    public String getDay() {
        return this.day;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.DAY</code>.
     */
    public TcCalenderPlanner setDay(String day) {
        this.day = day;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.HOLIDAY_FLAG</code>.
     */
    public String getHolidayFlag() {
        return this.holidayFlag;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.HOLIDAY_FLAG</code>.
     */
    public TcCalenderPlanner setHolidayFlag(String holidayFlag) {
        this.holidayFlag = holidayFlag;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.BOOKED_FLAG</code>.
     */
    public String getBookedFlag() {
        return this.bookedFlag;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.BOOKED_FLAG</code>.
     */
    public TcCalenderPlanner setBookedFlag(String bookedFlag) {
        this.bookedFlag = bookedFlag;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.AVAILABILITY_FLAG</code>.
     */
    public String getAvailabilityFlag() {
        return this.availabilityFlag;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.AVAILABILITY_FLAG</code>.
     */
    public TcCalenderPlanner setAvailabilityFlag(String availabilityFlag) {
        this.availabilityFlag = availabilityFlag;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.COLOR_CODE</code>.
     */
    public String getColorCode() {
        return this.colorCode;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.COLOR_CODE</code>.
     */
    public TcCalenderPlanner setColorCode(String colorCode) {
        this.colorCode = colorCode;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.REMARKS</code>.
     */
    public String getRemarks() {
        return this.remarks;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.REMARKS</code>.
     */
    public TcCalenderPlanner setRemarks(String remarks) {
        this.remarks = remarks;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.UPDATED_ON</code>.
     */
    public LocalDate getUpdatedOn() {
        return this.updatedOn;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.UPDATED_ON</code>.
     */
    public TcCalenderPlanner setUpdatedOn(LocalDate updatedOn) {
        this.updatedOn = updatedOn;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.UPDATED_BY</code>.
     */
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>vendor_portal_pbx.TC_CALENDER_PLANNER.UPDATED_BY</code>.
     */
    public TcCalenderPlanner setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TcCalenderPlanner other = (TcCalenderPlanner) obj;
        if (trainingCenterCode == null) {
            if (other.trainingCenterCode != null)
                return false;
        }
        else if (!trainingCenterCode.equals(other.trainingCenterCode))
            return false;
        if (date == null) {
            if (other.date != null)
                return false;
        }
        else if (!date.equals(other.date))
            return false;
        if (year == null) {
            if (other.year != null)
                return false;
        }
        else if (!year.equals(other.year))
            return false;
        if (month == null) {
            if (other.month != null)
                return false;
        }
        else if (!month.equals(other.month))
            return false;
        if (day == null) {
            if (other.day != null)
                return false;
        }
        else if (!day.equals(other.day))
            return false;
        if (holidayFlag == null) {
            if (other.holidayFlag != null)
                return false;
        }
        else if (!holidayFlag.equals(other.holidayFlag))
            return false;
        if (bookedFlag == null) {
            if (other.bookedFlag != null)
                return false;
        }
        else if (!bookedFlag.equals(other.bookedFlag))
            return false;
        if (availabilityFlag == null) {
            if (other.availabilityFlag != null)
                return false;
        }
        else if (!availabilityFlag.equals(other.availabilityFlag))
            return false;
        if (colorCode == null) {
            if (other.colorCode != null)
                return false;
        }
        else if (!colorCode.equals(other.colorCode))
            return false;
        if (remarks == null) {
            if (other.remarks != null)
                return false;
        }
        else if (!remarks.equals(other.remarks))
            return false;
        if (updatedOn == null) {
            if (other.updatedOn != null)
                return false;
        }
        else if (!updatedOn.equals(other.updatedOn))
            return false;
        if (updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        }
        else if (!updatedBy.equals(other.updatedBy))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.trainingCenterCode == null) ? 0 : this.trainingCenterCode.hashCode());
        result = prime * result + ((this.date == null) ? 0 : this.date.hashCode());
        result = prime * result + ((this.year == null) ? 0 : this.year.hashCode());
        result = prime * result + ((this.month == null) ? 0 : this.month.hashCode());
        result = prime * result + ((this.day == null) ? 0 : this.day.hashCode());
        result = prime * result + ((this.holidayFlag == null) ? 0 : this.holidayFlag.hashCode());
        result = prime * result + ((this.bookedFlag == null) ? 0 : this.bookedFlag.hashCode());
        result = prime * result + ((this.availabilityFlag == null) ? 0 : this.availabilityFlag.hashCode());
        result = prime * result + ((this.colorCode == null) ? 0 : this.colorCode.hashCode());
        result = prime * result + ((this.remarks == null) ? 0 : this.remarks.hashCode());
        result = prime * result + ((this.updatedOn == null) ? 0 : this.updatedOn.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TcCalenderPlanner (");

        sb.append(trainingCenterCode);
        sb.append(", ").append(date);
        sb.append(", ").append(year);
        sb.append(", ").append(month);
        sb.append(", ").append(day);
        sb.append(", ").append(holidayFlag);
        sb.append(", ").append(bookedFlag);
        sb.append(", ").append(availabilityFlag);
        sb.append(", ").append(colorCode);
        sb.append(", ").append(remarks);
        sb.append(", ").append(updatedOn);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }
}
