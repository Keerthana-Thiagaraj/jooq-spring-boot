/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CfaSlabMaster implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer sno;
    private String  slab;
    private String  km;
    private String  ratePerKm;
    private String  status;
    private String  slabName;
    private String  region;

    public CfaSlabMaster() {}

    public CfaSlabMaster(CfaSlabMaster value) {
        this.sno = value.sno;
        this.slab = value.slab;
        this.km = value.km;
        this.ratePerKm = value.ratePerKm;
        this.status = value.status;
        this.slabName = value.slabName;
        this.region = value.region;
    }

    public CfaSlabMaster(
        Integer sno,
        String  slab,
        String  km,
        String  ratePerKm,
        String  status,
        String  slabName,
        String  region
    ) {
        this.sno = sno;
        this.slab = slab;
        this.km = km;
        this.ratePerKm = ratePerKm;
        this.status = status;
        this.slabName = slabName;
        this.region = region;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cfa_slab_master.SNO</code>.
     */
    public Integer getSno() {
        return this.sno;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cfa_slab_master.SNO</code>.
     */
    public CfaSlabMaster setSno(Integer sno) {
        this.sno = sno;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cfa_slab_master.SLAB</code>.
     */
    public String getSlab() {
        return this.slab;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cfa_slab_master.SLAB</code>.
     */
    public CfaSlabMaster setSlab(String slab) {
        this.slab = slab;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cfa_slab_master.KM</code>.
     */
    public String getKm() {
        return this.km;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cfa_slab_master.KM</code>.
     */
    public CfaSlabMaster setKm(String km) {
        this.km = km;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cfa_slab_master.RATE_PER_KM</code>.
     */
    public String getRatePerKm() {
        return this.ratePerKm;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cfa_slab_master.RATE_PER_KM</code>.
     */
    public CfaSlabMaster setRatePerKm(String ratePerKm) {
        this.ratePerKm = ratePerKm;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cfa_slab_master.STATUS</code>.
     */
    public String getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cfa_slab_master.STATUS</code>.
     */
    public CfaSlabMaster setStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cfa_slab_master.SLAB_NAME</code>.
     */
    public String getSlabName() {
        return this.slabName;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cfa_slab_master.SLAB_NAME</code>.
     */
    public CfaSlabMaster setSlabName(String slabName) {
        this.slabName = slabName;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cfa_slab_master.REGION</code>.
     */
    public String getRegion() {
        return this.region;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cfa_slab_master.REGION</code>.
     */
    public CfaSlabMaster setRegion(String region) {
        this.region = region;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final CfaSlabMaster other = (CfaSlabMaster) obj;
        if (sno == null) {
            if (other.sno != null)
                return false;
        }
        else if (!sno.equals(other.sno))
            return false;
        if (slab == null) {
            if (other.slab != null)
                return false;
        }
        else if (!slab.equals(other.slab))
            return false;
        if (km == null) {
            if (other.km != null)
                return false;
        }
        else if (!km.equals(other.km))
            return false;
        if (ratePerKm == null) {
            if (other.ratePerKm != null)
                return false;
        }
        else if (!ratePerKm.equals(other.ratePerKm))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        if (slabName == null) {
            if (other.slabName != null)
                return false;
        }
        else if (!slabName.equals(other.slabName))
            return false;
        if (region == null) {
            if (other.region != null)
                return false;
        }
        else if (!region.equals(other.region))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.sno == null) ? 0 : this.sno.hashCode());
        result = prime * result + ((this.slab == null) ? 0 : this.slab.hashCode());
        result = prime * result + ((this.km == null) ? 0 : this.km.hashCode());
        result = prime * result + ((this.ratePerKm == null) ? 0 : this.ratePerKm.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.slabName == null) ? 0 : this.slabName.hashCode());
        result = prime * result + ((this.region == null) ? 0 : this.region.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CfaSlabMaster (");

        sb.append(sno);
        sb.append(", ").append(slab);
        sb.append(", ").append(km);
        sb.append(", ").append(ratePerKm);
        sb.append(", ").append(status);
        sb.append(", ").append(slabName);
        sb.append(", ").append(region);

        sb.append(")");
        return sb.toString();
    }
}
