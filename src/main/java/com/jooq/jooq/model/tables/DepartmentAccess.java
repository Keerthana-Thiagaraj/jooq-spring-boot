/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.DepartmentAccessRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DepartmentAccess extends TableImpl<DepartmentAccessRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.department_access</code>
     */
    public static final DepartmentAccess DEPARTMENT_ACCESS = new DepartmentAccess();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DepartmentAccessRecord> getRecordType() {
        return DepartmentAccessRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.department_access.COMP_CODE</code>.
     */
    public final TableField<DepartmentAccessRecord, String> COMP_CODE = createField(DSL.name("COMP_CODE"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.department_access.ROLE_ID</code>.
     */
    public final TableField<DepartmentAccessRecord, Integer> ROLE_ID = createField(DSL.name("ROLE_ID"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.department_access.MENU_ID</code>.
     */
    public final TableField<DepartmentAccessRecord, Integer> MENU_ID = createField(DSL.name("MENU_ID"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.department_access.DEPARTMNET_ID</code>.
     */
    public final TableField<DepartmentAccessRecord, Integer> DEPARTMNET_ID = createField(DSL.name("DEPARTMNET_ID"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.department_access.BLOCK</code>.
     */
    public final TableField<DepartmentAccessRecord, String> BLOCK = createField(DSL.name("BLOCK"), SQLDataType.VARCHAR(1), this, "");

    private DepartmentAccess(Name alias, Table<DepartmentAccessRecord> aliased) {
        this(alias, aliased, null);
    }

    private DepartmentAccess(Name alias, Table<DepartmentAccessRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.department_access</code> table reference
     */
    public DepartmentAccess(String alias) {
        this(DSL.name(alias), DEPARTMENT_ACCESS);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.department_access</code> table reference
     */
    public DepartmentAccess(Name alias) {
        this(alias, DEPARTMENT_ACCESS);
    }

    /**
     * Create a <code>vendor_portal_pbx.department_access</code> table reference
     */
    public DepartmentAccess() {
        this(DSL.name("department_access"), null);
    }

    public <O extends Record> DepartmentAccess(Table<O> child, ForeignKey<O, DepartmentAccessRecord> key) {
        super(child, key, DEPARTMENT_ACCESS);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<DepartmentAccessRecord> getPrimaryKey() {
        return Keys.KEY_DEPARTMENT_ACCESS_PRIMARY;
    }

    @Override
    public List<UniqueKey<DepartmentAccessRecord>> getKeys() {
        return Arrays.<UniqueKey<DepartmentAccessRecord>>asList(Keys.KEY_DEPARTMENT_ACCESS_PRIMARY);
    }

    @Override
    public DepartmentAccess as(String alias) {
        return new DepartmentAccess(DSL.name(alias), this);
    }

    @Override
    public DepartmentAccess as(Name alias) {
        return new DepartmentAccess(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DepartmentAccess rename(String name) {
        return new DepartmentAccess(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DepartmentAccess rename(Name name) {
        return new DepartmentAccess(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, Integer, Integer, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
