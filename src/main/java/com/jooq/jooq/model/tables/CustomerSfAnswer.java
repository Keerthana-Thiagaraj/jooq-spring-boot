/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.CustomerSfAnswerRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row20;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerSfAnswer extends TableImpl<CustomerSfAnswerRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.customer_sf_answer</code>
     */
    public static final CustomerSfAnswer CUSTOMER_SF_ANSWER = new CustomerSfAnswer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CustomerSfAnswerRecord> getRecordType() {
        return CustomerSfAnswerRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.customer_sf_answer.COMP_CODE</code>.
     */
    public final TableField<CustomerSfAnswerRecord, String> COMP_CODE = createField(DSL.name("COMP_CODE"), SQLDataType.VARCHAR(5).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_answer.PLANT_CODE</code>.
     */
    public final TableField<CustomerSfAnswerRecord, String> PLANT_CODE = createField(DSL.name("PLANT_CODE"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_answer.HMB_CODE</code>.
     */
    public final TableField<CustomerSfAnswerRecord, String> HMB_CODE = createField(DSL.name("HMB_CODE"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_answer.VENDOR_CODE</code>.
     */
    public final TableField<CustomerSfAnswerRecord, String> VENDOR_CODE = createField(DSL.name("VENDOR_CODE"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_answer.STATE</code>.
     */
    public final TableField<CustomerSfAnswerRecord, String> STATE = createField(DSL.name("STATE"), SQLDataType.VARCHAR(40), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_answer.PLANT_NAME</code>.
     */
    public final TableField<CustomerSfAnswerRecord, String> PLANT_NAME = createField(DSL.name("PLANT_NAME"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_answer.HMB_NAME</code>.
     */
    public final TableField<CustomerSfAnswerRecord, String> HMB_NAME = createField(DSL.name("HMB_NAME"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_answer.PID</code>.
     */
    public final TableField<CustomerSfAnswerRecord, String> PID = createField(DSL.name("PID"), SQLDataType.VARCHAR(40), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_answer.NAME</code>.
     */
    public final TableField<CustomerSfAnswerRecord, String> NAME = createField(DSL.name("NAME"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_answer.MONTH</code>.
     */
    public final TableField<CustomerSfAnswerRecord, Integer> MONTH = createField(DSL.name("MONTH"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_answer.YEAR</code>.
     */
    public final TableField<CustomerSfAnswerRecord, String> YEAR = createField(DSL.name("YEAR"), SQLDataType.VARCHAR(5).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_answer.ROLE_ID</code>.
     */
    public final TableField<CustomerSfAnswerRecord, String> ROLE_ID = createField(DSL.name("ROLE_ID"), SQLDataType.VARCHAR(5).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_answer.CATEGORY_ID</code>.
     */
    public final TableField<CustomerSfAnswerRecord, String> CATEGORY_ID = createField(DSL.name("CATEGORY_ID"), SQLDataType.VARCHAR(2), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_answer.Q_ID</code>.
     */
    public final TableField<CustomerSfAnswerRecord, Integer> Q_ID = createField(DSL.name("Q_ID"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_answer.ANSWER</code>.
     */
    public final TableField<CustomerSfAnswerRecord, String> ANSWER = createField(DSL.name("ANSWER"), SQLDataType.VARCHAR(5).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_answer.PRODUCT</code>.
     */
    public final TableField<CustomerSfAnswerRecord, String> PRODUCT = createField(DSL.name("PRODUCT"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_answer.COMMENTS</code>.
     */
    public final TableField<CustomerSfAnswerRecord, String> COMMENTS = createField(DSL.name("COMMENTS"), SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_answer.STATUS</code>.
     */
    public final TableField<CustomerSfAnswerRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_answer.CREATED_BY</code>.
     */
    public final TableField<CustomerSfAnswerRecord, String> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_sf_answer.CREATED_ON</code>.
     */
    public final TableField<CustomerSfAnswerRecord, LocalDateTime> CREATED_ON = createField(DSL.name("CREATED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    private CustomerSfAnswer(Name alias, Table<CustomerSfAnswerRecord> aliased) {
        this(alias, aliased, null);
    }

    private CustomerSfAnswer(Name alias, Table<CustomerSfAnswerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.customer_sf_answer</code> table reference
     */
    public CustomerSfAnswer(String alias) {
        this(DSL.name(alias), CUSTOMER_SF_ANSWER);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.customer_sf_answer</code> table reference
     */
    public CustomerSfAnswer(Name alias) {
        this(alias, CUSTOMER_SF_ANSWER);
    }

    /**
     * Create a <code>vendor_portal_pbx.customer_sf_answer</code> table reference
     */
    public CustomerSfAnswer() {
        this(DSL.name("customer_sf_answer"), null);
    }

    public <O extends Record> CustomerSfAnswer(Table<O> child, ForeignKey<O, CustomerSfAnswerRecord> key) {
        super(child, key, CUSTOMER_SF_ANSWER);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<CustomerSfAnswerRecord> getPrimaryKey() {
        return Keys.KEY_CUSTOMER_SF_ANSWER_PRIMARY;
    }

    @Override
    public List<UniqueKey<CustomerSfAnswerRecord>> getKeys() {
        return Arrays.<UniqueKey<CustomerSfAnswerRecord>>asList(Keys.KEY_CUSTOMER_SF_ANSWER_PRIMARY);
    }

    @Override
    public CustomerSfAnswer as(String alias) {
        return new CustomerSfAnswer(DSL.name(alias), this);
    }

    @Override
    public CustomerSfAnswer as(Name alias) {
        return new CustomerSfAnswer(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CustomerSfAnswer rename(String name) {
        return new CustomerSfAnswer(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CustomerSfAnswer rename(Name name) {
        return new CustomerSfAnswer(name, null);
    }

    // -------------------------------------------------------------------------
    // Row20 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row20<String, String, String, String, String, String, String, String, String, Integer, String, String, String, Integer, String, String, String, String, String, LocalDateTime> fieldsRow() {
        return (Row20) super.fieldsRow();
    }
}
