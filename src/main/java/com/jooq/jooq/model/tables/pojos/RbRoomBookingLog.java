/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RbRoomBookingLog implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer       rbLocationCode;
    private Integer       buildingCode;
    private Integer       floorCode;
    private Integer       roomCode;
    private LocalDate     bookedDate;
    private LocalTime     fromTime;
    private LocalTime     toTime;
    private Integer       actualSeat;
    private Integer       bookedSeat;
    private Integer       availableSeat;
    private String        email;
    private String        phone;
    private String        subject;
    private String        statusFlag;
    private String        bookedFor;
    private String        remarks;
    private String        createdBy;
    private LocalDateTime createdOn;

    public RbRoomBookingLog() {}

    public RbRoomBookingLog(RbRoomBookingLog value) {
        this.rbLocationCode = value.rbLocationCode;
        this.buildingCode = value.buildingCode;
        this.floorCode = value.floorCode;
        this.roomCode = value.roomCode;
        this.bookedDate = value.bookedDate;
        this.fromTime = value.fromTime;
        this.toTime = value.toTime;
        this.actualSeat = value.actualSeat;
        this.bookedSeat = value.bookedSeat;
        this.availableSeat = value.availableSeat;
        this.email = value.email;
        this.phone = value.phone;
        this.subject = value.subject;
        this.statusFlag = value.statusFlag;
        this.bookedFor = value.bookedFor;
        this.remarks = value.remarks;
        this.createdBy = value.createdBy;
        this.createdOn = value.createdOn;
    }

    public RbRoomBookingLog(
        Integer       rbLocationCode,
        Integer       buildingCode,
        Integer       floorCode,
        Integer       roomCode,
        LocalDate     bookedDate,
        LocalTime     fromTime,
        LocalTime     toTime,
        Integer       actualSeat,
        Integer       bookedSeat,
        Integer       availableSeat,
        String        email,
        String        phone,
        String        subject,
        String        statusFlag,
        String        bookedFor,
        String        remarks,
        String        createdBy,
        LocalDateTime createdOn
    ) {
        this.rbLocationCode = rbLocationCode;
        this.buildingCode = buildingCode;
        this.floorCode = floorCode;
        this.roomCode = roomCode;
        this.bookedDate = bookedDate;
        this.fromTime = fromTime;
        this.toTime = toTime;
        this.actualSeat = actualSeat;
        this.bookedSeat = bookedSeat;
        this.availableSeat = availableSeat;
        this.email = email;
        this.phone = phone;
        this.subject = subject;
        this.statusFlag = statusFlag;
        this.bookedFor = bookedFor;
        this.remarks = remarks;
        this.createdBy = createdBy;
        this.createdOn = createdOn;
    }

    /**
     * Getter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.RB_LOCATION_CODE</code>.
     */
    public Integer getRbLocationCode() {
        return this.rbLocationCode;
    }

    /**
     * Setter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.RB_LOCATION_CODE</code>.
     */
    public RbRoomBookingLog setRbLocationCode(Integer rbLocationCode) {
        this.rbLocationCode = rbLocationCode;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.BUILDING_CODE</code>.
     */
    public Integer getBuildingCode() {
        return this.buildingCode;
    }

    /**
     * Setter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.BUILDING_CODE</code>.
     */
    public RbRoomBookingLog setBuildingCode(Integer buildingCode) {
        this.buildingCode = buildingCode;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.FLOOR_CODE</code>.
     */
    public Integer getFloorCode() {
        return this.floorCode;
    }

    /**
     * Setter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.FLOOR_CODE</code>.
     */
    public RbRoomBookingLog setFloorCode(Integer floorCode) {
        this.floorCode = floorCode;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.ROOM_CODE</code>.
     */
    public Integer getRoomCode() {
        return this.roomCode;
    }

    /**
     * Setter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.ROOM_CODE</code>.
     */
    public RbRoomBookingLog setRoomCode(Integer roomCode) {
        this.roomCode = roomCode;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.BOOKED_DATE</code>.
     */
    public LocalDate getBookedDate() {
        return this.bookedDate;
    }

    /**
     * Setter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.BOOKED_DATE</code>.
     */
    public RbRoomBookingLog setBookedDate(LocalDate bookedDate) {
        this.bookedDate = bookedDate;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.FROM_TIME</code>.
     */
    public LocalTime getFromTime() {
        return this.fromTime;
    }

    /**
     * Setter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.FROM_TIME</code>.
     */
    public RbRoomBookingLog setFromTime(LocalTime fromTime) {
        this.fromTime = fromTime;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.TO_TIME</code>.
     */
    public LocalTime getToTime() {
        return this.toTime;
    }

    /**
     * Setter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.TO_TIME</code>.
     */
    public RbRoomBookingLog setToTime(LocalTime toTime) {
        this.toTime = toTime;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.ACTUAL_SEAT</code>.
     */
    public Integer getActualSeat() {
        return this.actualSeat;
    }

    /**
     * Setter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.ACTUAL_SEAT</code>.
     */
    public RbRoomBookingLog setActualSeat(Integer actualSeat) {
        this.actualSeat = actualSeat;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.BOOKED_SEAT</code>.
     */
    public Integer getBookedSeat() {
        return this.bookedSeat;
    }

    /**
     * Setter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.BOOKED_SEAT</code>.
     */
    public RbRoomBookingLog setBookedSeat(Integer bookedSeat) {
        this.bookedSeat = bookedSeat;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.AVAILABLE_SEAT</code>.
     */
    public Integer getAvailableSeat() {
        return this.availableSeat;
    }

    /**
     * Setter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.AVAILABLE_SEAT</code>.
     */
    public RbRoomBookingLog setAvailableSeat(Integer availableSeat) {
        this.availableSeat = availableSeat;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.EMAIL</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.EMAIL</code>.
     */
    public RbRoomBookingLog setEmail(String email) {
        this.email = email;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.PHONE</code>.
     */
    public String getPhone() {
        return this.phone;
    }

    /**
     * Setter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.PHONE</code>.
     */
    public RbRoomBookingLog setPhone(String phone) {
        this.phone = phone;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.SUBJECT</code>.
     */
    public String getSubject() {
        return this.subject;
    }

    /**
     * Setter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.SUBJECT</code>.
     */
    public RbRoomBookingLog setSubject(String subject) {
        this.subject = subject;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.STATUS_FLAG</code>.
     */
    public String getStatusFlag() {
        return this.statusFlag;
    }

    /**
     * Setter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.STATUS_FLAG</code>.
     */
    public RbRoomBookingLog setStatusFlag(String statusFlag) {
        this.statusFlag = statusFlag;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.BOOKED_FOR</code>.
     */
    public String getBookedFor() {
        return this.bookedFor;
    }

    /**
     * Setter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.BOOKED_FOR</code>.
     */
    public RbRoomBookingLog setBookedFor(String bookedFor) {
        this.bookedFor = bookedFor;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.REMARKS</code>.
     */
    public String getRemarks() {
        return this.remarks;
    }

    /**
     * Setter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.REMARKS</code>.
     */
    public RbRoomBookingLog setRemarks(String remarks) {
        this.remarks = remarks;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.CREATED_BY</code>.
     */
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.CREATED_BY</code>.
     */
    public RbRoomBookingLog setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.CREATED_ON</code>.
     */
    public LocalDateTime getCreatedOn() {
        return this.createdOn;
    }

    /**
     * Setter for <code>vendor_portal_pbx.RB_ROOM_BOOKING_LOG.CREATED_ON</code>.
     */
    public RbRoomBookingLog setCreatedOn(LocalDateTime createdOn) {
        this.createdOn = createdOn;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final RbRoomBookingLog other = (RbRoomBookingLog) obj;
        if (rbLocationCode == null) {
            if (other.rbLocationCode != null)
                return false;
        }
        else if (!rbLocationCode.equals(other.rbLocationCode))
            return false;
        if (buildingCode == null) {
            if (other.buildingCode != null)
                return false;
        }
        else if (!buildingCode.equals(other.buildingCode))
            return false;
        if (floorCode == null) {
            if (other.floorCode != null)
                return false;
        }
        else if (!floorCode.equals(other.floorCode))
            return false;
        if (roomCode == null) {
            if (other.roomCode != null)
                return false;
        }
        else if (!roomCode.equals(other.roomCode))
            return false;
        if (bookedDate == null) {
            if (other.bookedDate != null)
                return false;
        }
        else if (!bookedDate.equals(other.bookedDate))
            return false;
        if (fromTime == null) {
            if (other.fromTime != null)
                return false;
        }
        else if (!fromTime.equals(other.fromTime))
            return false;
        if (toTime == null) {
            if (other.toTime != null)
                return false;
        }
        else if (!toTime.equals(other.toTime))
            return false;
        if (actualSeat == null) {
            if (other.actualSeat != null)
                return false;
        }
        else if (!actualSeat.equals(other.actualSeat))
            return false;
        if (bookedSeat == null) {
            if (other.bookedSeat != null)
                return false;
        }
        else if (!bookedSeat.equals(other.bookedSeat))
            return false;
        if (availableSeat == null) {
            if (other.availableSeat != null)
                return false;
        }
        else if (!availableSeat.equals(other.availableSeat))
            return false;
        if (email == null) {
            if (other.email != null)
                return false;
        }
        else if (!email.equals(other.email))
            return false;
        if (phone == null) {
            if (other.phone != null)
                return false;
        }
        else if (!phone.equals(other.phone))
            return false;
        if (subject == null) {
            if (other.subject != null)
                return false;
        }
        else if (!subject.equals(other.subject))
            return false;
        if (statusFlag == null) {
            if (other.statusFlag != null)
                return false;
        }
        else if (!statusFlag.equals(other.statusFlag))
            return false;
        if (bookedFor == null) {
            if (other.bookedFor != null)
                return false;
        }
        else if (!bookedFor.equals(other.bookedFor))
            return false;
        if (remarks == null) {
            if (other.remarks != null)
                return false;
        }
        else if (!remarks.equals(other.remarks))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (createdOn == null) {
            if (other.createdOn != null)
                return false;
        }
        else if (!createdOn.equals(other.createdOn))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.rbLocationCode == null) ? 0 : this.rbLocationCode.hashCode());
        result = prime * result + ((this.buildingCode == null) ? 0 : this.buildingCode.hashCode());
        result = prime * result + ((this.floorCode == null) ? 0 : this.floorCode.hashCode());
        result = prime * result + ((this.roomCode == null) ? 0 : this.roomCode.hashCode());
        result = prime * result + ((this.bookedDate == null) ? 0 : this.bookedDate.hashCode());
        result = prime * result + ((this.fromTime == null) ? 0 : this.fromTime.hashCode());
        result = prime * result + ((this.toTime == null) ? 0 : this.toTime.hashCode());
        result = prime * result + ((this.actualSeat == null) ? 0 : this.actualSeat.hashCode());
        result = prime * result + ((this.bookedSeat == null) ? 0 : this.bookedSeat.hashCode());
        result = prime * result + ((this.availableSeat == null) ? 0 : this.availableSeat.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.phone == null) ? 0 : this.phone.hashCode());
        result = prime * result + ((this.subject == null) ? 0 : this.subject.hashCode());
        result = prime * result + ((this.statusFlag == null) ? 0 : this.statusFlag.hashCode());
        result = prime * result + ((this.bookedFor == null) ? 0 : this.bookedFor.hashCode());
        result = prime * result + ((this.remarks == null) ? 0 : this.remarks.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.createdOn == null) ? 0 : this.createdOn.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("RbRoomBookingLog (");

        sb.append(rbLocationCode);
        sb.append(", ").append(buildingCode);
        sb.append(", ").append(floorCode);
        sb.append(", ").append(roomCode);
        sb.append(", ").append(bookedDate);
        sb.append(", ").append(fromTime);
        sb.append(", ").append(toTime);
        sb.append(", ").append(actualSeat);
        sb.append(", ").append(bookedSeat);
        sb.append(", ").append(availableSeat);
        sb.append(", ").append(email);
        sb.append(", ").append(phone);
        sb.append(", ").append(subject);
        sb.append(", ").append(statusFlag);
        sb.append(", ").append(bookedFor);
        sb.append(", ").append(remarks);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(createdOn);

        sb.append(")");
        return sb.toString();
    }
}
