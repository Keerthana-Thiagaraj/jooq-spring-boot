/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.daos;


import com.jooq.jooq.model.tables.UserMaster;
import com.jooq.jooq.model.tables.records.UserMasterRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class UserMasterDao extends DAOImpl<UserMasterRecord, com.jooq.jooq.model.tables.pojos.UserMaster, Integer> {

    /**
     * Create a new UserMasterDao without any configuration
     */
    public UserMasterDao() {
        super(UserMaster.USER_MASTER, com.jooq.jooq.model.tables.pojos.UserMaster.class);
    }

    /**
     * Create a new UserMasterDao with an attached configuration
     */
    @Autowired
    public UserMasterDao(Configuration configuration) {
        super(UserMaster.USER_MASTER, com.jooq.jooq.model.tables.pojos.UserMaster.class, configuration);
    }

    @Override
    public Integer getId(com.jooq.jooq.model.tables.pojos.UserMaster object) {
        return object.getUserId();
    }

    /**
     * Fetch records that have <code>USER_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.UserMaster> fetchRangeOfUserId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(UserMaster.USER_MASTER.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>USER_ID IN (values)</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.UserMaster> fetchByUserId(Integer... values) {
        return fetch(UserMaster.USER_MASTER.USER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>USER_ID = value</code>
     */
    public com.jooq.jooq.model.tables.pojos.UserMaster fetchOneByUserId(Integer value) {
        return fetchOne(UserMaster.USER_MASTER.USER_ID, value);
    }

    /**
     * Fetch records that have <code>CREATED_BY BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.UserMaster> fetchRangeOfCreatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserMaster.USER_MASTER.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.UserMaster> fetchByCreatedBy(String... values) {
        return fetch(UserMaster.USER_MASTER.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>STATUS BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.UserMaster> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserMaster.USER_MASTER.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>STATUS IN (values)</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.UserMaster> fetchByStatus(String... values) {
        return fetch(UserMaster.USER_MASTER.STATUS, values);
    }

    /**
     * Fetch records that have <code>NAME BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.UserMaster> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserMaster.USER_MASTER.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.UserMaster> fetchByName(String... values) {
        return fetch(UserMaster.USER_MASTER.NAME, values);
    }

    /**
     * Fetch records that have <code>CREATED_ON BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.UserMaster> fetchRangeOfCreatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(UserMaster.USER_MASTER.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED_ON IN (values)</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.UserMaster> fetchByCreatedOn(LocalDateTime... values) {
        return fetch(UserMaster.USER_MASTER.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>MOBILE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.UserMaster> fetchRangeOfMobile(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserMaster.USER_MASTER.MOBILE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>MOBILE IN (values)</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.UserMaster> fetchByMobile(String... values) {
        return fetch(UserMaster.USER_MASTER.MOBILE, values);
    }

    /**
     * Fetch records that have <code>EMAIL_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.UserMaster> fetchRangeOfEmailId(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserMaster.USER_MASTER.EMAIL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>EMAIL_ID IN (values)</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.UserMaster> fetchByEmailId(String... values) {
        return fetch(UserMaster.USER_MASTER.EMAIL_ID, values);
    }
}
