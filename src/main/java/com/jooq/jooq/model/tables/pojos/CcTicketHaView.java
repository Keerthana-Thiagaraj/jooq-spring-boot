/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;


/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CcTicketHaView implements Serializable {

    private static final long serialVersionUID = 1L;

    private String        controlSample;
    private String        enquiryCategory;
    private String        compCode;
    private String        ticketId;
    private String        ticketCount;
    private String        altContactNo;
    private String        area;
    private String        attachmentName;
    private String        attachmentType;
    private String        attachmentUrl;
    private String        batchNo;
    private LocalDate     bestBeforeDate;
    private Integer       complaintId;
    private String        contactNo;
    private String        createdBy;
    private LocalDateTime createdOn;
    private LocalDateTime complaintClosedDate;
    private String        customerCode;
    private String        customerName;
    private Integer       divisionId;
    private String        email;
    private String        inDetails;
    private Integer       initiatedBy;
    private String        location;
    private String        mailStatus;
    private LocalDate     manufacturingDate;
    private String        materialCode;
    private String        materialName;
    private String        productName;
    private LocalDate     purchaseDate;
    private String        remarks;
    private String        subject;
    private String        type;
    private LocalDate     usedByDate;
    private String        editFlag;
    private String        rsmEmail;
    private String        rsmName;
    private String        refBy;
    private String        refName;
    private String        complaintSubType;
    private String        complaintStatus;
    private String        preventiveAction;
    private String        replyConclusion;
    private String        state;
    private String        district;
    private String        flavour;
    private String        uom;
    private String        plantCode;
    private String        plantName;
    private String        hmbCode;
    private String        hmbName;
    private String        pid;
    private String        farmerCode;
    private String        farmerName;
    private String        batchName;
    private String        complaintMode;
    private String        actionTakenPerson;
    private String        siloTemp;
    private String        dispatchTemp;
    private String        otTest;
    private String        batchTaste;
    private String        controlTaste;
    private String        batchQty;
    private String        batchRemainParam;
    private String        controlRemainParam;
    private String        productPackagingDate;
    private String        batchFlavour;
    private String        controlFlavour;
    private String        qty;
    private String        saveFlag;
    private String        language;
    private String        ccMailid;
    private String        toMailid;
    private LocalDateTime editedOn;
    private String        editedBy;
    private String        customerResponse;
    private String        repliedBy;
    private LocalDateTime repliedOn;
    private String        complaintAnalysis;
    private String        complaintRemarks;
    private String        replyAttachmentName;
    private Integer       agingDays;
    private String        enquiryType;
    private String        optionType;
    private String        direction;
    private String        hangupReason;
    private Integer       answeredSec;
    private Integer       waitingSec;
    private String        callStatus;
    private String        toContactNo;

    public CcTicketHaView() {}

    public CcTicketHaView(CcTicketHaView value) {
        this.controlSample = value.controlSample;
        this.enquiryCategory = value.enquiryCategory;
        this.compCode = value.compCode;
        this.ticketId = value.ticketId;
        this.ticketCount = value.ticketCount;
        this.altContactNo = value.altContactNo;
        this.area = value.area;
        this.attachmentName = value.attachmentName;
        this.attachmentType = value.attachmentType;
        this.attachmentUrl = value.attachmentUrl;
        this.batchNo = value.batchNo;
        this.bestBeforeDate = value.bestBeforeDate;
        this.complaintId = value.complaintId;
        this.contactNo = value.contactNo;
        this.createdBy = value.createdBy;
        this.createdOn = value.createdOn;
        this.complaintClosedDate = value.complaintClosedDate;
        this.customerCode = value.customerCode;
        this.customerName = value.customerName;
        this.divisionId = value.divisionId;
        this.email = value.email;
        this.inDetails = value.inDetails;
        this.initiatedBy = value.initiatedBy;
        this.location = value.location;
        this.mailStatus = value.mailStatus;
        this.manufacturingDate = value.manufacturingDate;
        this.materialCode = value.materialCode;
        this.materialName = value.materialName;
        this.productName = value.productName;
        this.purchaseDate = value.purchaseDate;
        this.remarks = value.remarks;
        this.subject = value.subject;
        this.type = value.type;
        this.usedByDate = value.usedByDate;
        this.editFlag = value.editFlag;
        this.rsmEmail = value.rsmEmail;
        this.rsmName = value.rsmName;
        this.refBy = value.refBy;
        this.refName = value.refName;
        this.complaintSubType = value.complaintSubType;
        this.complaintStatus = value.complaintStatus;
        this.preventiveAction = value.preventiveAction;
        this.replyConclusion = value.replyConclusion;
        this.state = value.state;
        this.district = value.district;
        this.flavour = value.flavour;
        this.uom = value.uom;
        this.plantCode = value.plantCode;
        this.plantName = value.plantName;
        this.hmbCode = value.hmbCode;
        this.hmbName = value.hmbName;
        this.pid = value.pid;
        this.farmerCode = value.farmerCode;
        this.farmerName = value.farmerName;
        this.batchName = value.batchName;
        this.complaintMode = value.complaintMode;
        this.actionTakenPerson = value.actionTakenPerson;
        this.siloTemp = value.siloTemp;
        this.dispatchTemp = value.dispatchTemp;
        this.otTest = value.otTest;
        this.batchTaste = value.batchTaste;
        this.controlTaste = value.controlTaste;
        this.batchQty = value.batchQty;
        this.batchRemainParam = value.batchRemainParam;
        this.controlRemainParam = value.controlRemainParam;
        this.productPackagingDate = value.productPackagingDate;
        this.batchFlavour = value.batchFlavour;
        this.controlFlavour = value.controlFlavour;
        this.qty = value.qty;
        this.saveFlag = value.saveFlag;
        this.language = value.language;
        this.ccMailid = value.ccMailid;
        this.toMailid = value.toMailid;
        this.editedOn = value.editedOn;
        this.editedBy = value.editedBy;
        this.customerResponse = value.customerResponse;
        this.repliedBy = value.repliedBy;
        this.repliedOn = value.repliedOn;
        this.complaintAnalysis = value.complaintAnalysis;
        this.complaintRemarks = value.complaintRemarks;
        this.replyAttachmentName = value.replyAttachmentName;
        this.agingDays = value.agingDays;
        this.enquiryType = value.enquiryType;
        this.optionType = value.optionType;
        this.direction = value.direction;
        this.hangupReason = value.hangupReason;
        this.answeredSec = value.answeredSec;
        this.waitingSec = value.waitingSec;
        this.callStatus = value.callStatus;
        this.toContactNo = value.toContactNo;
    }

    public CcTicketHaView(
        String        controlSample,
        String        enquiryCategory,
        String        compCode,
        String        ticketId,
        String        ticketCount,
        String        altContactNo,
        String        area,
        String        attachmentName,
        String        attachmentType,
        String        attachmentUrl,
        String        batchNo,
        LocalDate     bestBeforeDate,
        Integer       complaintId,
        String        contactNo,
        String        createdBy,
        LocalDateTime createdOn,
        LocalDateTime complaintClosedDate,
        String        customerCode,
        String        customerName,
        Integer       divisionId,
        String        email,
        String        inDetails,
        Integer       initiatedBy,
        String        location,
        String        mailStatus,
        LocalDate     manufacturingDate,
        String        materialCode,
        String        materialName,
        String        productName,
        LocalDate     purchaseDate,
        String        remarks,
        String        subject,
        String        type,
        LocalDate     usedByDate,
        String        editFlag,
        String        rsmEmail,
        String        rsmName,
        String        refBy,
        String        refName,
        String        complaintSubType,
        String        complaintStatus,
        String        preventiveAction,
        String        replyConclusion,
        String        state,
        String        district,
        String        flavour,
        String        uom,
        String        plantCode,
        String        plantName,
        String        hmbCode,
        String        hmbName,
        String        pid,
        String        farmerCode,
        String        farmerName,
        String        batchName,
        String        complaintMode,
        String        actionTakenPerson,
        String        siloTemp,
        String        dispatchTemp,
        String        otTest,
        String        batchTaste,
        String        controlTaste,
        String        batchQty,
        String        batchRemainParam,
        String        controlRemainParam,
        String        productPackagingDate,
        String        batchFlavour,
        String        controlFlavour,
        String        qty,
        String        saveFlag,
        String        language,
        String        ccMailid,
        String        toMailid,
        LocalDateTime editedOn,
        String        editedBy,
        String        customerResponse,
        String        repliedBy,
        LocalDateTime repliedOn,
        String        complaintAnalysis,
        String        complaintRemarks,
        String        replyAttachmentName,
        Integer       agingDays,
        String        enquiryType,
        String        optionType,
        String        direction,
        String        hangupReason,
        Integer       answeredSec,
        Integer       waitingSec,
        String        callStatus,
        String        toContactNo
    ) {
        this.controlSample = controlSample;
        this.enquiryCategory = enquiryCategory;
        this.compCode = compCode;
        this.ticketId = ticketId;
        this.ticketCount = ticketCount;
        this.altContactNo = altContactNo;
        this.area = area;
        this.attachmentName = attachmentName;
        this.attachmentType = attachmentType;
        this.attachmentUrl = attachmentUrl;
        this.batchNo = batchNo;
        this.bestBeforeDate = bestBeforeDate;
        this.complaintId = complaintId;
        this.contactNo = contactNo;
        this.createdBy = createdBy;
        this.createdOn = createdOn;
        this.complaintClosedDate = complaintClosedDate;
        this.customerCode = customerCode;
        this.customerName = customerName;
        this.divisionId = divisionId;
        this.email = email;
        this.inDetails = inDetails;
        this.initiatedBy = initiatedBy;
        this.location = location;
        this.mailStatus = mailStatus;
        this.manufacturingDate = manufacturingDate;
        this.materialCode = materialCode;
        this.materialName = materialName;
        this.productName = productName;
        this.purchaseDate = purchaseDate;
        this.remarks = remarks;
        this.subject = subject;
        this.type = type;
        this.usedByDate = usedByDate;
        this.editFlag = editFlag;
        this.rsmEmail = rsmEmail;
        this.rsmName = rsmName;
        this.refBy = refBy;
        this.refName = refName;
        this.complaintSubType = complaintSubType;
        this.complaintStatus = complaintStatus;
        this.preventiveAction = preventiveAction;
        this.replyConclusion = replyConclusion;
        this.state = state;
        this.district = district;
        this.flavour = flavour;
        this.uom = uom;
        this.plantCode = plantCode;
        this.plantName = plantName;
        this.hmbCode = hmbCode;
        this.hmbName = hmbName;
        this.pid = pid;
        this.farmerCode = farmerCode;
        this.farmerName = farmerName;
        this.batchName = batchName;
        this.complaintMode = complaintMode;
        this.actionTakenPerson = actionTakenPerson;
        this.siloTemp = siloTemp;
        this.dispatchTemp = dispatchTemp;
        this.otTest = otTest;
        this.batchTaste = batchTaste;
        this.controlTaste = controlTaste;
        this.batchQty = batchQty;
        this.batchRemainParam = batchRemainParam;
        this.controlRemainParam = controlRemainParam;
        this.productPackagingDate = productPackagingDate;
        this.batchFlavour = batchFlavour;
        this.controlFlavour = controlFlavour;
        this.qty = qty;
        this.saveFlag = saveFlag;
        this.language = language;
        this.ccMailid = ccMailid;
        this.toMailid = toMailid;
        this.editedOn = editedOn;
        this.editedBy = editedBy;
        this.customerResponse = customerResponse;
        this.repliedBy = repliedBy;
        this.repliedOn = repliedOn;
        this.complaintAnalysis = complaintAnalysis;
        this.complaintRemarks = complaintRemarks;
        this.replyAttachmentName = replyAttachmentName;
        this.agingDays = agingDays;
        this.enquiryType = enquiryType;
        this.optionType = optionType;
        this.direction = direction;
        this.hangupReason = hangupReason;
        this.answeredSec = answeredSec;
        this.waitingSec = waitingSec;
        this.callStatus = callStatus;
        this.toContactNo = toContactNo;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.CONTROL_SAMPLE</code>.
     */
    public String getControlSample() {
        return this.controlSample;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.CONTROL_SAMPLE</code>.
     */
    public CcTicketHaView setControlSample(String controlSample) {
        this.controlSample = controlSample;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.ENQUIRY_CATEGORY</code>.
     */
    public String getEnquiryCategory() {
        return this.enquiryCategory;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.ENQUIRY_CATEGORY</code>.
     */
    public CcTicketHaView setEnquiryCategory(String enquiryCategory) {
        this.enquiryCategory = enquiryCategory;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.COMP_CODE</code>.
     */
    public String getCompCode() {
        return this.compCode;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.COMP_CODE</code>.
     */
    public CcTicketHaView setCompCode(String compCode) {
        this.compCode = compCode;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.ticket_id</code>.
     */
    public String getTicketId() {
        return this.ticketId;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.ticket_id</code>.
     */
    public CcTicketHaView setTicketId(String ticketId) {
        this.ticketId = ticketId;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.TICKET_COUNT</code>.
     */
    public String getTicketCount() {
        return this.ticketCount;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.TICKET_COUNT</code>.
     */
    public CcTicketHaView setTicketCount(String ticketCount) {
        this.ticketCount = ticketCount;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.ALT_CONTACT_NO</code>.
     */
    public String getAltContactNo() {
        return this.altContactNo;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.ALT_CONTACT_NO</code>.
     */
    public CcTicketHaView setAltContactNo(String altContactNo) {
        this.altContactNo = altContactNo;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.area</code>.
     */
    public String getArea() {
        return this.area;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.area</code>.
     */
    public CcTicketHaView setArea(String area) {
        this.area = area;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.ATTACHMENT_NAME</code>.
     */
    public String getAttachmentName() {
        return this.attachmentName;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.ATTACHMENT_NAME</code>.
     */
    public CcTicketHaView setAttachmentName(String attachmentName) {
        this.attachmentName = attachmentName;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.ATTACHMENT_TYPE</code>.
     */
    public String getAttachmentType() {
        return this.attachmentType;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.ATTACHMENT_TYPE</code>.
     */
    public CcTicketHaView setAttachmentType(String attachmentType) {
        this.attachmentType = attachmentType;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.ATTACHMENT_URL</code>.
     */
    public String getAttachmentUrl() {
        return this.attachmentUrl;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.ATTACHMENT_URL</code>.
     */
    public CcTicketHaView setAttachmentUrl(String attachmentUrl) {
        this.attachmentUrl = attachmentUrl;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.BATCH_NO</code>.
     */
    public String getBatchNo() {
        return this.batchNo;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.BATCH_NO</code>.
     */
    public CcTicketHaView setBatchNo(String batchNo) {
        this.batchNo = batchNo;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.BEST_BEFORE_DATE</code>.
     */
    public LocalDate getBestBeforeDate() {
        return this.bestBeforeDate;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.BEST_BEFORE_DATE</code>.
     */
    public CcTicketHaView setBestBeforeDate(LocalDate bestBeforeDate) {
        this.bestBeforeDate = bestBeforeDate;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.COMPLAINT_ID</code>.
     */
    public Integer getComplaintId() {
        return this.complaintId;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.COMPLAINT_ID</code>.
     */
    public CcTicketHaView setComplaintId(Integer complaintId) {
        this.complaintId = complaintId;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.CONTACT_NO</code>.
     */
    public String getContactNo() {
        return this.contactNo;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.CONTACT_NO</code>.
     */
    public CcTicketHaView setContactNo(String contactNo) {
        this.contactNo = contactNo;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.CREATED_BY</code>.
     */
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.CREATED_BY</code>.
     */
    public CcTicketHaView setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.CREATED_ON</code>.
     */
    public LocalDateTime getCreatedOn() {
        return this.createdOn;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.CREATED_ON</code>.
     */
    public CcTicketHaView setCreatedOn(LocalDateTime createdOn) {
        this.createdOn = createdOn;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.COMPLAINT_CLOSED_DATE</code>.
     */
    public LocalDateTime getComplaintClosedDate() {
        return this.complaintClosedDate;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.COMPLAINT_CLOSED_DATE</code>.
     */
    public CcTicketHaView setComplaintClosedDate(LocalDateTime complaintClosedDate) {
        this.complaintClosedDate = complaintClosedDate;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.CUSTOMER_CODE</code>.
     */
    public String getCustomerCode() {
        return this.customerCode;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.CUSTOMER_CODE</code>.
     */
    public CcTicketHaView setCustomerCode(String customerCode) {
        this.customerCode = customerCode;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.CUSTOMER_NAME</code>.
     */
    public String getCustomerName() {
        return this.customerName;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.CUSTOMER_NAME</code>.
     */
    public CcTicketHaView setCustomerName(String customerName) {
        this.customerName = customerName;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.DIVISION_ID</code>.
     */
    public Integer getDivisionId() {
        return this.divisionId;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.DIVISION_ID</code>.
     */
    public CcTicketHaView setDivisionId(Integer divisionId) {
        this.divisionId = divisionId;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.email</code>.
     */
    public CcTicketHaView setEmail(String email) {
        this.email = email;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.IN_DETAILS</code>.
     */
    public String getInDetails() {
        return this.inDetails;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.IN_DETAILS</code>.
     */
    public CcTicketHaView setInDetails(String inDetails) {
        this.inDetails = inDetails;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.INITIATED_BY</code>.
     */
    public Integer getInitiatedBy() {
        return this.initiatedBy;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.INITIATED_BY</code>.
     */
    public CcTicketHaView setInitiatedBy(Integer initiatedBy) {
        this.initiatedBy = initiatedBy;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.location</code>.
     */
    public String getLocation() {
        return this.location;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.location</code>.
     */
    public CcTicketHaView setLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.MAIL_STATUS</code>.
     */
    public String getMailStatus() {
        return this.mailStatus;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.MAIL_STATUS</code>.
     */
    public CcTicketHaView setMailStatus(String mailStatus) {
        this.mailStatus = mailStatus;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.MANUFACTURING_DATE</code>.
     */
    public LocalDate getManufacturingDate() {
        return this.manufacturingDate;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.MANUFACTURING_DATE</code>.
     */
    public CcTicketHaView setManufacturingDate(LocalDate manufacturingDate) {
        this.manufacturingDate = manufacturingDate;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.MATERIAL_CODE</code>.
     */
    public String getMaterialCode() {
        return this.materialCode;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.MATERIAL_CODE</code>.
     */
    public CcTicketHaView setMaterialCode(String materialCode) {
        this.materialCode = materialCode;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.MATERIAL_NAME</code>.
     */
    public String getMaterialName() {
        return this.materialName;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.MATERIAL_NAME</code>.
     */
    public CcTicketHaView setMaterialName(String materialName) {
        this.materialName = materialName;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.PRODUCT_NAME</code>.
     */
    public String getProductName() {
        return this.productName;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.PRODUCT_NAME</code>.
     */
    public CcTicketHaView setProductName(String productName) {
        this.productName = productName;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.PURCHASE_DATE</code>.
     */
    public LocalDate getPurchaseDate() {
        return this.purchaseDate;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.PURCHASE_DATE</code>.
     */
    public CcTicketHaView setPurchaseDate(LocalDate purchaseDate) {
        this.purchaseDate = purchaseDate;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.remarks</code>.
     */
    public String getRemarks() {
        return this.remarks;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.remarks</code>.
     */
    public CcTicketHaView setRemarks(String remarks) {
        this.remarks = remarks;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.subject</code>.
     */
    public String getSubject() {
        return this.subject;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.subject</code>.
     */
    public CcTicketHaView setSubject(String subject) {
        this.subject = subject;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.type</code>.
     */
    public String getType() {
        return this.type;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.type</code>.
     */
    public CcTicketHaView setType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.USED_BY_DATE</code>.
     */
    public LocalDate getUsedByDate() {
        return this.usedByDate;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.USED_BY_DATE</code>.
     */
    public CcTicketHaView setUsedByDate(LocalDate usedByDate) {
        this.usedByDate = usedByDate;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.EDIT_FLAG</code>.
     */
    public String getEditFlag() {
        return this.editFlag;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.EDIT_FLAG</code>.
     */
    public CcTicketHaView setEditFlag(String editFlag) {
        this.editFlag = editFlag;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.RSM_EMAIL</code>.
     */
    public String getRsmEmail() {
        return this.rsmEmail;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.RSM_EMAIL</code>.
     */
    public CcTicketHaView setRsmEmail(String rsmEmail) {
        this.rsmEmail = rsmEmail;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.RSM_NAME</code>.
     */
    public String getRsmName() {
        return this.rsmName;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.RSM_NAME</code>.
     */
    public CcTicketHaView setRsmName(String rsmName) {
        this.rsmName = rsmName;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.REF_BY</code>.
     */
    public String getRefBy() {
        return this.refBy;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.REF_BY</code>.
     */
    public CcTicketHaView setRefBy(String refBy) {
        this.refBy = refBy;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.REF_NAME</code>.
     */
    public String getRefName() {
        return this.refName;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.REF_NAME</code>.
     */
    public CcTicketHaView setRefName(String refName) {
        this.refName = refName;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.COMPLAINT_SUB_TYPE</code>.
     */
    public String getComplaintSubType() {
        return this.complaintSubType;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.COMPLAINT_SUB_TYPE</code>.
     */
    public CcTicketHaView setComplaintSubType(String complaintSubType) {
        this.complaintSubType = complaintSubType;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.COMPLAINT_STATUS</code>.
     */
    public String getComplaintStatus() {
        return this.complaintStatus;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.COMPLAINT_STATUS</code>.
     */
    public CcTicketHaView setComplaintStatus(String complaintStatus) {
        this.complaintStatus = complaintStatus;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.PREVENTIVE_ACTION</code>.
     */
    public String getPreventiveAction() {
        return this.preventiveAction;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.PREVENTIVE_ACTION</code>.
     */
    public CcTicketHaView setPreventiveAction(String preventiveAction) {
        this.preventiveAction = preventiveAction;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.REPLY_CONCLUSION</code>.
     */
    public String getReplyConclusion() {
        return this.replyConclusion;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.REPLY_CONCLUSION</code>.
     */
    public CcTicketHaView setReplyConclusion(String replyConclusion) {
        this.replyConclusion = replyConclusion;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.STATE</code>.
     */
    public String getState() {
        return this.state;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.STATE</code>.
     */
    public CcTicketHaView setState(String state) {
        this.state = state;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.DISTRICT</code>.
     */
    public String getDistrict() {
        return this.district;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.DISTRICT</code>.
     */
    public CcTicketHaView setDistrict(String district) {
        this.district = district;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.FLAVOUR</code>.
     */
    public String getFlavour() {
        return this.flavour;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.FLAVOUR</code>.
     */
    public CcTicketHaView setFlavour(String flavour) {
        this.flavour = flavour;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.UOM</code>.
     */
    public String getUom() {
        return this.uom;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.UOM</code>.
     */
    public CcTicketHaView setUom(String uom) {
        this.uom = uom;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.PLANT_CODE</code>.
     */
    public String getPlantCode() {
        return this.plantCode;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.PLANT_CODE</code>.
     */
    public CcTicketHaView setPlantCode(String plantCode) {
        this.plantCode = plantCode;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.PLANT_NAME</code>.
     */
    public String getPlantName() {
        return this.plantName;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.PLANT_NAME</code>.
     */
    public CcTicketHaView setPlantName(String plantName) {
        this.plantName = plantName;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.HMB_CODE</code>.
     */
    public String getHmbCode() {
        return this.hmbCode;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.HMB_CODE</code>.
     */
    public CcTicketHaView setHmbCode(String hmbCode) {
        this.hmbCode = hmbCode;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.HMB_NAME</code>.
     */
    public String getHmbName() {
        return this.hmbName;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.HMB_NAME</code>.
     */
    public CcTicketHaView setHmbName(String hmbName) {
        this.hmbName = hmbName;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.PID</code>.
     */
    public String getPid() {
        return this.pid;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.PID</code>.
     */
    public CcTicketHaView setPid(String pid) {
        this.pid = pid;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.FARMER_CODE</code>.
     */
    public String getFarmerCode() {
        return this.farmerCode;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.FARMER_CODE</code>.
     */
    public CcTicketHaView setFarmerCode(String farmerCode) {
        this.farmerCode = farmerCode;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.FARMER_NAME</code>.
     */
    public String getFarmerName() {
        return this.farmerName;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.FARMER_NAME</code>.
     */
    public CcTicketHaView setFarmerName(String farmerName) {
        this.farmerName = farmerName;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.BATCH_NAME</code>.
     */
    public String getBatchName() {
        return this.batchName;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.BATCH_NAME</code>.
     */
    public CcTicketHaView setBatchName(String batchName) {
        this.batchName = batchName;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.COMPLAINT_MODE</code>.
     */
    public String getComplaintMode() {
        return this.complaintMode;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.COMPLAINT_MODE</code>.
     */
    public CcTicketHaView setComplaintMode(String complaintMode) {
        this.complaintMode = complaintMode;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.ACTION_TAKEN_PERSON</code>.
     */
    public String getActionTakenPerson() {
        return this.actionTakenPerson;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.ACTION_TAKEN_PERSON</code>.
     */
    public CcTicketHaView setActionTakenPerson(String actionTakenPerson) {
        this.actionTakenPerson = actionTakenPerson;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.SILO_TEMP</code>.
     */
    public String getSiloTemp() {
        return this.siloTemp;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.SILO_TEMP</code>.
     */
    public CcTicketHaView setSiloTemp(String siloTemp) {
        this.siloTemp = siloTemp;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.DISPATCH_TEMP</code>.
     */
    public String getDispatchTemp() {
        return this.dispatchTemp;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.DISPATCH_TEMP</code>.
     */
    public CcTicketHaView setDispatchTemp(String dispatchTemp) {
        this.dispatchTemp = dispatchTemp;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.OT_TEST</code>.
     */
    public String getOtTest() {
        return this.otTest;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.OT_TEST</code>.
     */
    public CcTicketHaView setOtTest(String otTest) {
        this.otTest = otTest;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.BATCH_TASTE</code>.
     */
    public String getBatchTaste() {
        return this.batchTaste;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.BATCH_TASTE</code>.
     */
    public CcTicketHaView setBatchTaste(String batchTaste) {
        this.batchTaste = batchTaste;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.CONTROL_TASTE</code>.
     */
    public String getControlTaste() {
        return this.controlTaste;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.CONTROL_TASTE</code>.
     */
    public CcTicketHaView setControlTaste(String controlTaste) {
        this.controlTaste = controlTaste;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.BATCH_QTY</code>.
     */
    public String getBatchQty() {
        return this.batchQty;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.BATCH_QTY</code>.
     */
    public CcTicketHaView setBatchQty(String batchQty) {
        this.batchQty = batchQty;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.BATCH_REMAIN_PARAM</code>.
     */
    public String getBatchRemainParam() {
        return this.batchRemainParam;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.BATCH_REMAIN_PARAM</code>.
     */
    public CcTicketHaView setBatchRemainParam(String batchRemainParam) {
        this.batchRemainParam = batchRemainParam;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.CONTROL_REMAIN_PARAM</code>.
     */
    public String getControlRemainParam() {
        return this.controlRemainParam;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.CONTROL_REMAIN_PARAM</code>.
     */
    public CcTicketHaView setControlRemainParam(String controlRemainParam) {
        this.controlRemainParam = controlRemainParam;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.PRODUCT_PACKAGING_DATE</code>.
     */
    public String getProductPackagingDate() {
        return this.productPackagingDate;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.PRODUCT_PACKAGING_DATE</code>.
     */
    public CcTicketHaView setProductPackagingDate(String productPackagingDate) {
        this.productPackagingDate = productPackagingDate;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.BATCH_FLAVOUR</code>.
     */
    public String getBatchFlavour() {
        return this.batchFlavour;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.BATCH_FLAVOUR</code>.
     */
    public CcTicketHaView setBatchFlavour(String batchFlavour) {
        this.batchFlavour = batchFlavour;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.CONTROL_FLAVOUR</code>.
     */
    public String getControlFlavour() {
        return this.controlFlavour;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.CONTROL_FLAVOUR</code>.
     */
    public CcTicketHaView setControlFlavour(String controlFlavour) {
        this.controlFlavour = controlFlavour;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.QTY</code>.
     */
    public String getQty() {
        return this.qty;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.QTY</code>.
     */
    public CcTicketHaView setQty(String qty) {
        this.qty = qty;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.SAVE_FLAG</code>.
     */
    public String getSaveFlag() {
        return this.saveFlag;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.SAVE_FLAG</code>.
     */
    public CcTicketHaView setSaveFlag(String saveFlag) {
        this.saveFlag = saveFlag;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.LANGUAGE</code>.
     */
    public String getLanguage() {
        return this.language;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.LANGUAGE</code>.
     */
    public CcTicketHaView setLanguage(String language) {
        this.language = language;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.CC_MAILID</code>.
     */
    public String getCcMailid() {
        return this.ccMailid;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.CC_MAILID</code>.
     */
    public CcTicketHaView setCcMailid(String ccMailid) {
        this.ccMailid = ccMailid;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.TO_MAILID</code>.
     */
    public String getToMailid() {
        return this.toMailid;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.TO_MAILID</code>.
     */
    public CcTicketHaView setToMailid(String toMailid) {
        this.toMailid = toMailid;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.EDITED_ON</code>.
     */
    public LocalDateTime getEditedOn() {
        return this.editedOn;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.EDITED_ON</code>.
     */
    public CcTicketHaView setEditedOn(LocalDateTime editedOn) {
        this.editedOn = editedOn;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.EDITED_BY</code>.
     */
    public String getEditedBy() {
        return this.editedBy;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.EDITED_BY</code>.
     */
    public CcTicketHaView setEditedBy(String editedBy) {
        this.editedBy = editedBy;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.CUSTOMER_RESPONSE</code>.
     */
    public String getCustomerResponse() {
        return this.customerResponse;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.CUSTOMER_RESPONSE</code>.
     */
    public CcTicketHaView setCustomerResponse(String customerResponse) {
        this.customerResponse = customerResponse;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.REPLIED_BY</code>.
     */
    public String getRepliedBy() {
        return this.repliedBy;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.REPLIED_BY</code>.
     */
    public CcTicketHaView setRepliedBy(String repliedBy) {
        this.repliedBy = repliedBy;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.REPLIED_ON</code>.
     */
    public LocalDateTime getRepliedOn() {
        return this.repliedOn;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.REPLIED_ON</code>.
     */
    public CcTicketHaView setRepliedOn(LocalDateTime repliedOn) {
        this.repliedOn = repliedOn;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.COMPLAINT_ANALYSIS</code>.
     */
    public String getComplaintAnalysis() {
        return this.complaintAnalysis;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.COMPLAINT_ANALYSIS</code>.
     */
    public CcTicketHaView setComplaintAnalysis(String complaintAnalysis) {
        this.complaintAnalysis = complaintAnalysis;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.COMPLAINT_REMARKS</code>.
     */
    public String getComplaintRemarks() {
        return this.complaintRemarks;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.COMPLAINT_REMARKS</code>.
     */
    public CcTicketHaView setComplaintRemarks(String complaintRemarks) {
        this.complaintRemarks = complaintRemarks;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.REPLY_ATTACHMENT_NAME</code>.
     */
    public String getReplyAttachmentName() {
        return this.replyAttachmentName;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.REPLY_ATTACHMENT_NAME</code>.
     */
    public CcTicketHaView setReplyAttachmentName(String replyAttachmentName) {
        this.replyAttachmentName = replyAttachmentName;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.AGING_DAYS</code>.
     */
    public Integer getAgingDays() {
        return this.agingDays;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.AGING_DAYS</code>.
     */
    public CcTicketHaView setAgingDays(Integer agingDays) {
        this.agingDays = agingDays;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.ENQUIRY_TYPE</code>.
     */
    public String getEnquiryType() {
        return this.enquiryType;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.ENQUIRY_TYPE</code>.
     */
    public CcTicketHaView setEnquiryType(String enquiryType) {
        this.enquiryType = enquiryType;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.OPTION_TYPE</code>.
     */
    public String getOptionType() {
        return this.optionType;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.OPTION_TYPE</code>.
     */
    public CcTicketHaView setOptionType(String optionType) {
        this.optionType = optionType;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.DIRECTION</code>.
     */
    public String getDirection() {
        return this.direction;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.DIRECTION</code>.
     */
    public CcTicketHaView setDirection(String direction) {
        this.direction = direction;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.HANGUP_REASON</code>.
     */
    public String getHangupReason() {
        return this.hangupReason;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.HANGUP_REASON</code>.
     */
    public CcTicketHaView setHangupReason(String hangupReason) {
        this.hangupReason = hangupReason;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.ANSWERED_SEC</code>.
     */
    public Integer getAnsweredSec() {
        return this.answeredSec;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.ANSWERED_SEC</code>.
     */
    public CcTicketHaView setAnsweredSec(Integer answeredSec) {
        this.answeredSec = answeredSec;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.WAITING_SEC</code>.
     */
    public Integer getWaitingSec() {
        return this.waitingSec;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.WAITING_SEC</code>.
     */
    public CcTicketHaView setWaitingSec(Integer waitingSec) {
        this.waitingSec = waitingSec;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.CALL_STATUS</code>.
     */
    public String getCallStatus() {
        return this.callStatus;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.CALL_STATUS</code>.
     */
    public CcTicketHaView setCallStatus(String callStatus) {
        this.callStatus = callStatus;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_ticket_ha_view.TO_CONTACT_NO</code>.
     */
    public String getToContactNo() {
        return this.toContactNo;
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_ticket_ha_view.TO_CONTACT_NO</code>.
     */
    public CcTicketHaView setToContactNo(String toContactNo) {
        this.toContactNo = toContactNo;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final CcTicketHaView other = (CcTicketHaView) obj;
        if (controlSample == null) {
            if (other.controlSample != null)
                return false;
        }
        else if (!controlSample.equals(other.controlSample))
            return false;
        if (enquiryCategory == null) {
            if (other.enquiryCategory != null)
                return false;
        }
        else if (!enquiryCategory.equals(other.enquiryCategory))
            return false;
        if (compCode == null) {
            if (other.compCode != null)
                return false;
        }
        else if (!compCode.equals(other.compCode))
            return false;
        if (ticketId == null) {
            if (other.ticketId != null)
                return false;
        }
        else if (!ticketId.equals(other.ticketId))
            return false;
        if (ticketCount == null) {
            if (other.ticketCount != null)
                return false;
        }
        else if (!ticketCount.equals(other.ticketCount))
            return false;
        if (altContactNo == null) {
            if (other.altContactNo != null)
                return false;
        }
        else if (!altContactNo.equals(other.altContactNo))
            return false;
        if (area == null) {
            if (other.area != null)
                return false;
        }
        else if (!area.equals(other.area))
            return false;
        if (attachmentName == null) {
            if (other.attachmentName != null)
                return false;
        }
        else if (!attachmentName.equals(other.attachmentName))
            return false;
        if (attachmentType == null) {
            if (other.attachmentType != null)
                return false;
        }
        else if (!attachmentType.equals(other.attachmentType))
            return false;
        if (attachmentUrl == null) {
            if (other.attachmentUrl != null)
                return false;
        }
        else if (!attachmentUrl.equals(other.attachmentUrl))
            return false;
        if (batchNo == null) {
            if (other.batchNo != null)
                return false;
        }
        else if (!batchNo.equals(other.batchNo))
            return false;
        if (bestBeforeDate == null) {
            if (other.bestBeforeDate != null)
                return false;
        }
        else if (!bestBeforeDate.equals(other.bestBeforeDate))
            return false;
        if (complaintId == null) {
            if (other.complaintId != null)
                return false;
        }
        else if (!complaintId.equals(other.complaintId))
            return false;
        if (contactNo == null) {
            if (other.contactNo != null)
                return false;
        }
        else if (!contactNo.equals(other.contactNo))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (createdOn == null) {
            if (other.createdOn != null)
                return false;
        }
        else if (!createdOn.equals(other.createdOn))
            return false;
        if (complaintClosedDate == null) {
            if (other.complaintClosedDate != null)
                return false;
        }
        else if (!complaintClosedDate.equals(other.complaintClosedDate))
            return false;
        if (customerCode == null) {
            if (other.customerCode != null)
                return false;
        }
        else if (!customerCode.equals(other.customerCode))
            return false;
        if (customerName == null) {
            if (other.customerName != null)
                return false;
        }
        else if (!customerName.equals(other.customerName))
            return false;
        if (divisionId == null) {
            if (other.divisionId != null)
                return false;
        }
        else if (!divisionId.equals(other.divisionId))
            return false;
        if (email == null) {
            if (other.email != null)
                return false;
        }
        else if (!email.equals(other.email))
            return false;
        if (inDetails == null) {
            if (other.inDetails != null)
                return false;
        }
        else if (!inDetails.equals(other.inDetails))
            return false;
        if (initiatedBy == null) {
            if (other.initiatedBy != null)
                return false;
        }
        else if (!initiatedBy.equals(other.initiatedBy))
            return false;
        if (location == null) {
            if (other.location != null)
                return false;
        }
        else if (!location.equals(other.location))
            return false;
        if (mailStatus == null) {
            if (other.mailStatus != null)
                return false;
        }
        else if (!mailStatus.equals(other.mailStatus))
            return false;
        if (manufacturingDate == null) {
            if (other.manufacturingDate != null)
                return false;
        }
        else if (!manufacturingDate.equals(other.manufacturingDate))
            return false;
        if (materialCode == null) {
            if (other.materialCode != null)
                return false;
        }
        else if (!materialCode.equals(other.materialCode))
            return false;
        if (materialName == null) {
            if (other.materialName != null)
                return false;
        }
        else if (!materialName.equals(other.materialName))
            return false;
        if (productName == null) {
            if (other.productName != null)
                return false;
        }
        else if (!productName.equals(other.productName))
            return false;
        if (purchaseDate == null) {
            if (other.purchaseDate != null)
                return false;
        }
        else if (!purchaseDate.equals(other.purchaseDate))
            return false;
        if (remarks == null) {
            if (other.remarks != null)
                return false;
        }
        else if (!remarks.equals(other.remarks))
            return false;
        if (subject == null) {
            if (other.subject != null)
                return false;
        }
        else if (!subject.equals(other.subject))
            return false;
        if (type == null) {
            if (other.type != null)
                return false;
        }
        else if (!type.equals(other.type))
            return false;
        if (usedByDate == null) {
            if (other.usedByDate != null)
                return false;
        }
        else if (!usedByDate.equals(other.usedByDate))
            return false;
        if (editFlag == null) {
            if (other.editFlag != null)
                return false;
        }
        else if (!editFlag.equals(other.editFlag))
            return false;
        if (rsmEmail == null) {
            if (other.rsmEmail != null)
                return false;
        }
        else if (!rsmEmail.equals(other.rsmEmail))
            return false;
        if (rsmName == null) {
            if (other.rsmName != null)
                return false;
        }
        else if (!rsmName.equals(other.rsmName))
            return false;
        if (refBy == null) {
            if (other.refBy != null)
                return false;
        }
        else if (!refBy.equals(other.refBy))
            return false;
        if (refName == null) {
            if (other.refName != null)
                return false;
        }
        else if (!refName.equals(other.refName))
            return false;
        if (complaintSubType == null) {
            if (other.complaintSubType != null)
                return false;
        }
        else if (!complaintSubType.equals(other.complaintSubType))
            return false;
        if (complaintStatus == null) {
            if (other.complaintStatus != null)
                return false;
        }
        else if (!complaintStatus.equals(other.complaintStatus))
            return false;
        if (preventiveAction == null) {
            if (other.preventiveAction != null)
                return false;
        }
        else if (!preventiveAction.equals(other.preventiveAction))
            return false;
        if (replyConclusion == null) {
            if (other.replyConclusion != null)
                return false;
        }
        else if (!replyConclusion.equals(other.replyConclusion))
            return false;
        if (state == null) {
            if (other.state != null)
                return false;
        }
        else if (!state.equals(other.state))
            return false;
        if (district == null) {
            if (other.district != null)
                return false;
        }
        else if (!district.equals(other.district))
            return false;
        if (flavour == null) {
            if (other.flavour != null)
                return false;
        }
        else if (!flavour.equals(other.flavour))
            return false;
        if (uom == null) {
            if (other.uom != null)
                return false;
        }
        else if (!uom.equals(other.uom))
            return false;
        if (plantCode == null) {
            if (other.plantCode != null)
                return false;
        }
        else if (!plantCode.equals(other.plantCode))
            return false;
        if (plantName == null) {
            if (other.plantName != null)
                return false;
        }
        else if (!plantName.equals(other.plantName))
            return false;
        if (hmbCode == null) {
            if (other.hmbCode != null)
                return false;
        }
        else if (!hmbCode.equals(other.hmbCode))
            return false;
        if (hmbName == null) {
            if (other.hmbName != null)
                return false;
        }
        else if (!hmbName.equals(other.hmbName))
            return false;
        if (pid == null) {
            if (other.pid != null)
                return false;
        }
        else if (!pid.equals(other.pid))
            return false;
        if (farmerCode == null) {
            if (other.farmerCode != null)
                return false;
        }
        else if (!farmerCode.equals(other.farmerCode))
            return false;
        if (farmerName == null) {
            if (other.farmerName != null)
                return false;
        }
        else if (!farmerName.equals(other.farmerName))
            return false;
        if (batchName == null) {
            if (other.batchName != null)
                return false;
        }
        else if (!batchName.equals(other.batchName))
            return false;
        if (complaintMode == null) {
            if (other.complaintMode != null)
                return false;
        }
        else if (!complaintMode.equals(other.complaintMode))
            return false;
        if (actionTakenPerson == null) {
            if (other.actionTakenPerson != null)
                return false;
        }
        else if (!actionTakenPerson.equals(other.actionTakenPerson))
            return false;
        if (siloTemp == null) {
            if (other.siloTemp != null)
                return false;
        }
        else if (!siloTemp.equals(other.siloTemp))
            return false;
        if (dispatchTemp == null) {
            if (other.dispatchTemp != null)
                return false;
        }
        else if (!dispatchTemp.equals(other.dispatchTemp))
            return false;
        if (otTest == null) {
            if (other.otTest != null)
                return false;
        }
        else if (!otTest.equals(other.otTest))
            return false;
        if (batchTaste == null) {
            if (other.batchTaste != null)
                return false;
        }
        else if (!batchTaste.equals(other.batchTaste))
            return false;
        if (controlTaste == null) {
            if (other.controlTaste != null)
                return false;
        }
        else if (!controlTaste.equals(other.controlTaste))
            return false;
        if (batchQty == null) {
            if (other.batchQty != null)
                return false;
        }
        else if (!batchQty.equals(other.batchQty))
            return false;
        if (batchRemainParam == null) {
            if (other.batchRemainParam != null)
                return false;
        }
        else if (!batchRemainParam.equals(other.batchRemainParam))
            return false;
        if (controlRemainParam == null) {
            if (other.controlRemainParam != null)
                return false;
        }
        else if (!controlRemainParam.equals(other.controlRemainParam))
            return false;
        if (productPackagingDate == null) {
            if (other.productPackagingDate != null)
                return false;
        }
        else if (!productPackagingDate.equals(other.productPackagingDate))
            return false;
        if (batchFlavour == null) {
            if (other.batchFlavour != null)
                return false;
        }
        else if (!batchFlavour.equals(other.batchFlavour))
            return false;
        if (controlFlavour == null) {
            if (other.controlFlavour != null)
                return false;
        }
        else if (!controlFlavour.equals(other.controlFlavour))
            return false;
        if (qty == null) {
            if (other.qty != null)
                return false;
        }
        else if (!qty.equals(other.qty))
            return false;
        if (saveFlag == null) {
            if (other.saveFlag != null)
                return false;
        }
        else if (!saveFlag.equals(other.saveFlag))
            return false;
        if (language == null) {
            if (other.language != null)
                return false;
        }
        else if (!language.equals(other.language))
            return false;
        if (ccMailid == null) {
            if (other.ccMailid != null)
                return false;
        }
        else if (!ccMailid.equals(other.ccMailid))
            return false;
        if (toMailid == null) {
            if (other.toMailid != null)
                return false;
        }
        else if (!toMailid.equals(other.toMailid))
            return false;
        if (editedOn == null) {
            if (other.editedOn != null)
                return false;
        }
        else if (!editedOn.equals(other.editedOn))
            return false;
        if (editedBy == null) {
            if (other.editedBy != null)
                return false;
        }
        else if (!editedBy.equals(other.editedBy))
            return false;
        if (customerResponse == null) {
            if (other.customerResponse != null)
                return false;
        }
        else if (!customerResponse.equals(other.customerResponse))
            return false;
        if (repliedBy == null) {
            if (other.repliedBy != null)
                return false;
        }
        else if (!repliedBy.equals(other.repliedBy))
            return false;
        if (repliedOn == null) {
            if (other.repliedOn != null)
                return false;
        }
        else if (!repliedOn.equals(other.repliedOn))
            return false;
        if (complaintAnalysis == null) {
            if (other.complaintAnalysis != null)
                return false;
        }
        else if (!complaintAnalysis.equals(other.complaintAnalysis))
            return false;
        if (complaintRemarks == null) {
            if (other.complaintRemarks != null)
                return false;
        }
        else if (!complaintRemarks.equals(other.complaintRemarks))
            return false;
        if (replyAttachmentName == null) {
            if (other.replyAttachmentName != null)
                return false;
        }
        else if (!replyAttachmentName.equals(other.replyAttachmentName))
            return false;
        if (agingDays == null) {
            if (other.agingDays != null)
                return false;
        }
        else if (!agingDays.equals(other.agingDays))
            return false;
        if (enquiryType == null) {
            if (other.enquiryType != null)
                return false;
        }
        else if (!enquiryType.equals(other.enquiryType))
            return false;
        if (optionType == null) {
            if (other.optionType != null)
                return false;
        }
        else if (!optionType.equals(other.optionType))
            return false;
        if (direction == null) {
            if (other.direction != null)
                return false;
        }
        else if (!direction.equals(other.direction))
            return false;
        if (hangupReason == null) {
            if (other.hangupReason != null)
                return false;
        }
        else if (!hangupReason.equals(other.hangupReason))
            return false;
        if (answeredSec == null) {
            if (other.answeredSec != null)
                return false;
        }
        else if (!answeredSec.equals(other.answeredSec))
            return false;
        if (waitingSec == null) {
            if (other.waitingSec != null)
                return false;
        }
        else if (!waitingSec.equals(other.waitingSec))
            return false;
        if (callStatus == null) {
            if (other.callStatus != null)
                return false;
        }
        else if (!callStatus.equals(other.callStatus))
            return false;
        if (toContactNo == null) {
            if (other.toContactNo != null)
                return false;
        }
        else if (!toContactNo.equals(other.toContactNo))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.controlSample == null) ? 0 : this.controlSample.hashCode());
        result = prime * result + ((this.enquiryCategory == null) ? 0 : this.enquiryCategory.hashCode());
        result = prime * result + ((this.compCode == null) ? 0 : this.compCode.hashCode());
        result = prime * result + ((this.ticketId == null) ? 0 : this.ticketId.hashCode());
        result = prime * result + ((this.ticketCount == null) ? 0 : this.ticketCount.hashCode());
        result = prime * result + ((this.altContactNo == null) ? 0 : this.altContactNo.hashCode());
        result = prime * result + ((this.area == null) ? 0 : this.area.hashCode());
        result = prime * result + ((this.attachmentName == null) ? 0 : this.attachmentName.hashCode());
        result = prime * result + ((this.attachmentType == null) ? 0 : this.attachmentType.hashCode());
        result = prime * result + ((this.attachmentUrl == null) ? 0 : this.attachmentUrl.hashCode());
        result = prime * result + ((this.batchNo == null) ? 0 : this.batchNo.hashCode());
        result = prime * result + ((this.bestBeforeDate == null) ? 0 : this.bestBeforeDate.hashCode());
        result = prime * result + ((this.complaintId == null) ? 0 : this.complaintId.hashCode());
        result = prime * result + ((this.contactNo == null) ? 0 : this.contactNo.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.createdOn == null) ? 0 : this.createdOn.hashCode());
        result = prime * result + ((this.complaintClosedDate == null) ? 0 : this.complaintClosedDate.hashCode());
        result = prime * result + ((this.customerCode == null) ? 0 : this.customerCode.hashCode());
        result = prime * result + ((this.customerName == null) ? 0 : this.customerName.hashCode());
        result = prime * result + ((this.divisionId == null) ? 0 : this.divisionId.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.inDetails == null) ? 0 : this.inDetails.hashCode());
        result = prime * result + ((this.initiatedBy == null) ? 0 : this.initiatedBy.hashCode());
        result = prime * result + ((this.location == null) ? 0 : this.location.hashCode());
        result = prime * result + ((this.mailStatus == null) ? 0 : this.mailStatus.hashCode());
        result = prime * result + ((this.manufacturingDate == null) ? 0 : this.manufacturingDate.hashCode());
        result = prime * result + ((this.materialCode == null) ? 0 : this.materialCode.hashCode());
        result = prime * result + ((this.materialName == null) ? 0 : this.materialName.hashCode());
        result = prime * result + ((this.productName == null) ? 0 : this.productName.hashCode());
        result = prime * result + ((this.purchaseDate == null) ? 0 : this.purchaseDate.hashCode());
        result = prime * result + ((this.remarks == null) ? 0 : this.remarks.hashCode());
        result = prime * result + ((this.subject == null) ? 0 : this.subject.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        result = prime * result + ((this.usedByDate == null) ? 0 : this.usedByDate.hashCode());
        result = prime * result + ((this.editFlag == null) ? 0 : this.editFlag.hashCode());
        result = prime * result + ((this.rsmEmail == null) ? 0 : this.rsmEmail.hashCode());
        result = prime * result + ((this.rsmName == null) ? 0 : this.rsmName.hashCode());
        result = prime * result + ((this.refBy == null) ? 0 : this.refBy.hashCode());
        result = prime * result + ((this.refName == null) ? 0 : this.refName.hashCode());
        result = prime * result + ((this.complaintSubType == null) ? 0 : this.complaintSubType.hashCode());
        result = prime * result + ((this.complaintStatus == null) ? 0 : this.complaintStatus.hashCode());
        result = prime * result + ((this.preventiveAction == null) ? 0 : this.preventiveAction.hashCode());
        result = prime * result + ((this.replyConclusion == null) ? 0 : this.replyConclusion.hashCode());
        result = prime * result + ((this.state == null) ? 0 : this.state.hashCode());
        result = prime * result + ((this.district == null) ? 0 : this.district.hashCode());
        result = prime * result + ((this.flavour == null) ? 0 : this.flavour.hashCode());
        result = prime * result + ((this.uom == null) ? 0 : this.uom.hashCode());
        result = prime * result + ((this.plantCode == null) ? 0 : this.plantCode.hashCode());
        result = prime * result + ((this.plantName == null) ? 0 : this.plantName.hashCode());
        result = prime * result + ((this.hmbCode == null) ? 0 : this.hmbCode.hashCode());
        result = prime * result + ((this.hmbName == null) ? 0 : this.hmbName.hashCode());
        result = prime * result + ((this.pid == null) ? 0 : this.pid.hashCode());
        result = prime * result + ((this.farmerCode == null) ? 0 : this.farmerCode.hashCode());
        result = prime * result + ((this.farmerName == null) ? 0 : this.farmerName.hashCode());
        result = prime * result + ((this.batchName == null) ? 0 : this.batchName.hashCode());
        result = prime * result + ((this.complaintMode == null) ? 0 : this.complaintMode.hashCode());
        result = prime * result + ((this.actionTakenPerson == null) ? 0 : this.actionTakenPerson.hashCode());
        result = prime * result + ((this.siloTemp == null) ? 0 : this.siloTemp.hashCode());
        result = prime * result + ((this.dispatchTemp == null) ? 0 : this.dispatchTemp.hashCode());
        result = prime * result + ((this.otTest == null) ? 0 : this.otTest.hashCode());
        result = prime * result + ((this.batchTaste == null) ? 0 : this.batchTaste.hashCode());
        result = prime * result + ((this.controlTaste == null) ? 0 : this.controlTaste.hashCode());
        result = prime * result + ((this.batchQty == null) ? 0 : this.batchQty.hashCode());
        result = prime * result + ((this.batchRemainParam == null) ? 0 : this.batchRemainParam.hashCode());
        result = prime * result + ((this.controlRemainParam == null) ? 0 : this.controlRemainParam.hashCode());
        result = prime * result + ((this.productPackagingDate == null) ? 0 : this.productPackagingDate.hashCode());
        result = prime * result + ((this.batchFlavour == null) ? 0 : this.batchFlavour.hashCode());
        result = prime * result + ((this.controlFlavour == null) ? 0 : this.controlFlavour.hashCode());
        result = prime * result + ((this.qty == null) ? 0 : this.qty.hashCode());
        result = prime * result + ((this.saveFlag == null) ? 0 : this.saveFlag.hashCode());
        result = prime * result + ((this.language == null) ? 0 : this.language.hashCode());
        result = prime * result + ((this.ccMailid == null) ? 0 : this.ccMailid.hashCode());
        result = prime * result + ((this.toMailid == null) ? 0 : this.toMailid.hashCode());
        result = prime * result + ((this.editedOn == null) ? 0 : this.editedOn.hashCode());
        result = prime * result + ((this.editedBy == null) ? 0 : this.editedBy.hashCode());
        result = prime * result + ((this.customerResponse == null) ? 0 : this.customerResponse.hashCode());
        result = prime * result + ((this.repliedBy == null) ? 0 : this.repliedBy.hashCode());
        result = prime * result + ((this.repliedOn == null) ? 0 : this.repliedOn.hashCode());
        result = prime * result + ((this.complaintAnalysis == null) ? 0 : this.complaintAnalysis.hashCode());
        result = prime * result + ((this.complaintRemarks == null) ? 0 : this.complaintRemarks.hashCode());
        result = prime * result + ((this.replyAttachmentName == null) ? 0 : this.replyAttachmentName.hashCode());
        result = prime * result + ((this.agingDays == null) ? 0 : this.agingDays.hashCode());
        result = prime * result + ((this.enquiryType == null) ? 0 : this.enquiryType.hashCode());
        result = prime * result + ((this.optionType == null) ? 0 : this.optionType.hashCode());
        result = prime * result + ((this.direction == null) ? 0 : this.direction.hashCode());
        result = prime * result + ((this.hangupReason == null) ? 0 : this.hangupReason.hashCode());
        result = prime * result + ((this.answeredSec == null) ? 0 : this.answeredSec.hashCode());
        result = prime * result + ((this.waitingSec == null) ? 0 : this.waitingSec.hashCode());
        result = prime * result + ((this.callStatus == null) ? 0 : this.callStatus.hashCode());
        result = prime * result + ((this.toContactNo == null) ? 0 : this.toContactNo.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CcTicketHaView (");

        sb.append(controlSample);
        sb.append(", ").append(enquiryCategory);
        sb.append(", ").append(compCode);
        sb.append(", ").append(ticketId);
        sb.append(", ").append(ticketCount);
        sb.append(", ").append(altContactNo);
        sb.append(", ").append(area);
        sb.append(", ").append(attachmentName);
        sb.append(", ").append(attachmentType);
        sb.append(", ").append(attachmentUrl);
        sb.append(", ").append(batchNo);
        sb.append(", ").append(bestBeforeDate);
        sb.append(", ").append(complaintId);
        sb.append(", ").append(contactNo);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(complaintClosedDate);
        sb.append(", ").append(customerCode);
        sb.append(", ").append(customerName);
        sb.append(", ").append(divisionId);
        sb.append(", ").append(email);
        sb.append(", ").append(inDetails);
        sb.append(", ").append(initiatedBy);
        sb.append(", ").append(location);
        sb.append(", ").append(mailStatus);
        sb.append(", ").append(manufacturingDate);
        sb.append(", ").append(materialCode);
        sb.append(", ").append(materialName);
        sb.append(", ").append(productName);
        sb.append(", ").append(purchaseDate);
        sb.append(", ").append(remarks);
        sb.append(", ").append(subject);
        sb.append(", ").append(type);
        sb.append(", ").append(usedByDate);
        sb.append(", ").append(editFlag);
        sb.append(", ").append(rsmEmail);
        sb.append(", ").append(rsmName);
        sb.append(", ").append(refBy);
        sb.append(", ").append(refName);
        sb.append(", ").append(complaintSubType);
        sb.append(", ").append(complaintStatus);
        sb.append(", ").append(preventiveAction);
        sb.append(", ").append(replyConclusion);
        sb.append(", ").append(state);
        sb.append(", ").append(district);
        sb.append(", ").append(flavour);
        sb.append(", ").append(uom);
        sb.append(", ").append(plantCode);
        sb.append(", ").append(plantName);
        sb.append(", ").append(hmbCode);
        sb.append(", ").append(hmbName);
        sb.append(", ").append(pid);
        sb.append(", ").append(farmerCode);
        sb.append(", ").append(farmerName);
        sb.append(", ").append(batchName);
        sb.append(", ").append(complaintMode);
        sb.append(", ").append(actionTakenPerson);
        sb.append(", ").append(siloTemp);
        sb.append(", ").append(dispatchTemp);
        sb.append(", ").append(otTest);
        sb.append(", ").append(batchTaste);
        sb.append(", ").append(controlTaste);
        sb.append(", ").append(batchQty);
        sb.append(", ").append(batchRemainParam);
        sb.append(", ").append(controlRemainParam);
        sb.append(", ").append(productPackagingDate);
        sb.append(", ").append(batchFlavour);
        sb.append(", ").append(controlFlavour);
        sb.append(", ").append(qty);
        sb.append(", ").append(saveFlag);
        sb.append(", ").append(language);
        sb.append(", ").append(ccMailid);
        sb.append(", ").append(toMailid);
        sb.append(", ").append(editedOn);
        sb.append(", ").append(editedBy);
        sb.append(", ").append(customerResponse);
        sb.append(", ").append(repliedBy);
        sb.append(", ").append(repliedOn);
        sb.append(", ").append(complaintAnalysis);
        sb.append(", ").append(complaintRemarks);
        sb.append(", ").append(replyAttachmentName);
        sb.append(", ").append(agingDays);
        sb.append(", ").append(enquiryType);
        sb.append(", ").append(optionType);
        sb.append(", ").append(direction);
        sb.append(", ").append(hangupReason);
        sb.append(", ").append(answeredSec);
        sb.append(", ").append(waitingSec);
        sb.append(", ").append(callStatus);
        sb.append(", ").append(toContactNo);

        sb.append(")");
        return sb.toString();
    }
}
