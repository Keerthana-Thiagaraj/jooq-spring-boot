/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CircularType implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String  circularName;

    public CircularType() {}

    public CircularType(CircularType value) {
        this.id = value.id;
        this.circularName = value.circularName;
    }

    public CircularType(
        Integer id,
        String  circularName
    ) {
        this.id = id;
        this.circularName = circularName;
    }

    /**
     * Getter for <code>vendor_portal_pbx.circular_type.ID</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>vendor_portal_pbx.circular_type.ID</code>.
     */
    public CircularType setId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.circular_type.CIRCULAR_NAME</code>.
     */
    public String getCircularName() {
        return this.circularName;
    }

    /**
     * Setter for <code>vendor_portal_pbx.circular_type.CIRCULAR_NAME</code>.
     */
    public CircularType setCircularName(String circularName) {
        this.circularName = circularName;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final CircularType other = (CircularType) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (circularName == null) {
            if (other.circularName != null)
                return false;
        }
        else if (!circularName.equals(other.circularName))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.circularName == null) ? 0 : this.circularName.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CircularType (");

        sb.append(id);
        sb.append(", ").append(circularName);

        sb.append(")");
        return sb.toString();
    }
}
