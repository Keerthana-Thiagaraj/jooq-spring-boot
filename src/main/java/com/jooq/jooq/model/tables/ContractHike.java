/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.ContractHikeRecord;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContractHike extends TableImpl<ContractHikeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.contract_hike</code>
     */
    public static final ContractHike CONTRACT_HIKE = new ContractHike();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ContractHikeRecord> getRecordType() {
        return ContractHikeRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.contract_hike.COMPANY_CODE</code>.
     */
    public final TableField<ContractHikeRecord, String> COMPANY_CODE = createField(DSL.name("COMPANY_CODE"), SQLDataType.VARCHAR(4).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.contract_hike.VENDOR_CODE</code>.
     */
    public final TableField<ContractHikeRecord, String> VENDOR_CODE = createField(DSL.name("VENDOR_CODE"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.contract_hike.CONTRACT</code>.
     */
    public final TableField<ContractHikeRecord, String> CONTRACT = createField(DSL.name("CONTRACT"), SQLDataType.VARCHAR(13).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.contract_hike.AGREEMENT_ID</code>.
     */
    public final TableField<ContractHikeRecord, String> AGREEMENT_ID = createField(DSL.name("AGREEMENT_ID"), SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.contract_hike.AGREEMENT_PERCENT</code>.
     */
    public final TableField<ContractHikeRecord, String> AGREEMENT_PERCENT = createField(DSL.name("AGREEMENT_PERCENT"), SQLDataType.VARCHAR(6), this, "");

    /**
     * The column <code>vendor_portal_pbx.contract_hike.CREATED_ON</code>.
     */
    public final TableField<ContractHikeRecord, LocalDate> CREATED_ON = createField(DSL.name("CREATED_ON"), SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.contract_hike.CREATED_BY</code>.
     */
    public final TableField<ContractHikeRecord, String> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.VARCHAR(45), this, "");

    private ContractHike(Name alias, Table<ContractHikeRecord> aliased) {
        this(alias, aliased, null);
    }

    private ContractHike(Name alias, Table<ContractHikeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.contract_hike</code> table reference
     */
    public ContractHike(String alias) {
        this(DSL.name(alias), CONTRACT_HIKE);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.contract_hike</code> table reference
     */
    public ContractHike(Name alias) {
        this(alias, CONTRACT_HIKE);
    }

    /**
     * Create a <code>vendor_portal_pbx.contract_hike</code> table reference
     */
    public ContractHike() {
        this(DSL.name("contract_hike"), null);
    }

    public <O extends Record> ContractHike(Table<O> child, ForeignKey<O, ContractHikeRecord> key) {
        super(child, key, CONTRACT_HIKE);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<ContractHikeRecord> getPrimaryKey() {
        return Keys.KEY_CONTRACT_HIKE_PRIMARY;
    }

    @Override
    public List<UniqueKey<ContractHikeRecord>> getKeys() {
        return Arrays.<UniqueKey<ContractHikeRecord>>asList(Keys.KEY_CONTRACT_HIKE_PRIMARY);
    }

    @Override
    public ContractHike as(String alias) {
        return new ContractHike(DSL.name(alias), this);
    }

    @Override
    public ContractHike as(Name alias) {
        return new ContractHike(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ContractHike rename(String name) {
        return new ContractHike(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ContractHike rename(Name name) {
        return new ContractHike(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, String, String, LocalDate, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
