/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.CustomerMilkAvgRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row18;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerMilkAvg extends TableImpl<CustomerMilkAvgRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.customer_milk_avg</code>
     */
    public static final CustomerMilkAvg CUSTOMER_MILK_AVG = new CustomerMilkAvg();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CustomerMilkAvgRecord> getRecordType() {
        return CustomerMilkAvgRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.customer_milk_avg.COMP_CODE</code>.
     */
    public final TableField<CustomerMilkAvgRecord, String> COMP_CODE = createField(DSL.name("COMP_CODE"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_milk_avg.CUSTOMER_CODE</code>.
     */
    public final TableField<CustomerMilkAvgRecord, String> CUSTOMER_CODE = createField(DSL.name("CUSTOMER_CODE"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_milk_avg.SPYEAR</code>.
     */
    public final TableField<CustomerMilkAvgRecord, String> SPYEAR = createField(DSL.name("SPYEAR"), SQLDataType.VARCHAR(4).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_milk_avg.SPMON</code>.
     */
    public final TableField<CustomerMilkAvgRecord, String> SPMON = createField(DSL.name("SPMON"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_milk_avg.PUR_GRP</code>.
     */
    public final TableField<CustomerMilkAvgRecord, String> PUR_GRP = createField(DSL.name("PUR_GRP"), SQLDataType.VARCHAR(2).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_milk_avg.MAT_GRP1</code>.
     */
    public final TableField<CustomerMilkAvgRecord, String> MAT_GRP1 = createField(DSL.name("MAT_GRP1"), SQLDataType.VARCHAR(3).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_milk_avg.MAT_GRP2</code>.
     */
    public final TableField<CustomerMilkAvgRecord, String> MAT_GRP2 = createField(DSL.name("MAT_GRP2"), SQLDataType.VARCHAR(3).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_milk_avg.MAT_GRP3</code>.
     */
    public final TableField<CustomerMilkAvgRecord, String> MAT_GRP3 = createField(DSL.name("MAT_GRP3"), SQLDataType.VARCHAR(3).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_milk_avg.MAT_GRP4</code>.
     */
    public final TableField<CustomerMilkAvgRecord, String> MAT_GRP4 = createField(DSL.name("MAT_GRP4"), SQLDataType.VARCHAR(3).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_milk_avg.MATNR</code>.
     */
    public final TableField<CustomerMilkAvgRecord, String> MATNR = createField(DSL.name("MATNR"), SQLDataType.VARCHAR(18).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_milk_avg.QUANTITY</code>.
     */
    public final TableField<CustomerMilkAvgRecord, BigDecimal> QUANTITY = createField(DSL.name("QUANTITY"), SQLDataType.DECIMAL(16, 2), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_milk_avg.STATUS</code>.
     */
    public final TableField<CustomerMilkAvgRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_milk_avg.CREATED_BY</code>.
     */
    public final TableField<CustomerMilkAvgRecord, Integer> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_milk_avg.CREATED_ON</code>.
     */
    public final TableField<CustomerMilkAvgRecord, LocalDateTime> CREATED_ON = createField(DSL.name("CREATED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_milk_avg.LAST_CHANGED_BY</code>.
     */
    public final TableField<CustomerMilkAvgRecord, Integer> LAST_CHANGED_BY = createField(DSL.name("LAST_CHANGED_BY"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_milk_avg.LAST_CHANGED_ON</code>.
     */
    public final TableField<CustomerMilkAvgRecord, LocalDateTime> LAST_CHANGED_ON = createField(DSL.name("LAST_CHANGED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_milk_avg.VKBUR</code>.
     */
    public final TableField<CustomerMilkAvgRecord, String> VKBUR = createField(DSL.name("VKBUR"), SQLDataType.VARCHAR(4).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.customer_milk_avg.WERKS</code>.
     */
    public final TableField<CustomerMilkAvgRecord, String> WERKS = createField(DSL.name("WERKS"), SQLDataType.VARCHAR(4).nullable(false), this, "");

    private CustomerMilkAvg(Name alias, Table<CustomerMilkAvgRecord> aliased) {
        this(alias, aliased, null);
    }

    private CustomerMilkAvg(Name alias, Table<CustomerMilkAvgRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.customer_milk_avg</code> table reference
     */
    public CustomerMilkAvg(String alias) {
        this(DSL.name(alias), CUSTOMER_MILK_AVG);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.customer_milk_avg</code> table reference
     */
    public CustomerMilkAvg(Name alias) {
        this(alias, CUSTOMER_MILK_AVG);
    }

    /**
     * Create a <code>vendor_portal_pbx.customer_milk_avg</code> table reference
     */
    public CustomerMilkAvg() {
        this(DSL.name("customer_milk_avg"), null);
    }

    public <O extends Record> CustomerMilkAvg(Table<O> child, ForeignKey<O, CustomerMilkAvgRecord> key) {
        super(child, key, CUSTOMER_MILK_AVG);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<CustomerMilkAvgRecord> getPrimaryKey() {
        return Keys.KEY_CUSTOMER_MILK_AVG_PRIMARY;
    }

    @Override
    public List<UniqueKey<CustomerMilkAvgRecord>> getKeys() {
        return Arrays.<UniqueKey<CustomerMilkAvgRecord>>asList(Keys.KEY_CUSTOMER_MILK_AVG_PRIMARY);
    }

    @Override
    public CustomerMilkAvg as(String alias) {
        return new CustomerMilkAvg(DSL.name(alias), this);
    }

    @Override
    public CustomerMilkAvg as(Name alias) {
        return new CustomerMilkAvg(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CustomerMilkAvg rename(String name) {
        return new CustomerMilkAvg(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CustomerMilkAvg rename(Name name) {
        return new CustomerMilkAvg(name, null);
    }

    // -------------------------------------------------------------------------
    // Row18 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row18<String, String, String, String, String, String, String, String, String, String, BigDecimal, String, Integer, LocalDateTime, Integer, LocalDateTime, String, String> fieldsRow() {
        return (Row18) super.fieldsRow();
    }
}
