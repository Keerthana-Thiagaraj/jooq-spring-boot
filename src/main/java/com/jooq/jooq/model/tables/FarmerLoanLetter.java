/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.FarmerLoanLetterRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row19;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FarmerLoanLetter extends TableImpl<FarmerLoanLetterRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.farmer_loan_letter</code>
     */
    public static final FarmerLoanLetter FARMER_LOAN_LETTER = new FarmerLoanLetter();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FarmerLoanLetterRecord> getRecordType() {
        return FarmerLoanLetterRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.farmer_loan_letter.COMP_CODE</code>.
     */
    public final TableField<FarmerLoanLetterRecord, String> COMP_CODE = createField(DSL.name("COMP_CODE"), SQLDataType.VARCHAR(4).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.farmer_loan_letter.VENDOR_CODE</code>.
     */
    public final TableField<FarmerLoanLetterRecord, String> VENDOR_CODE = createField(DSL.name("VENDOR_CODE"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.farmer_loan_letter.SOCIETY</code>.
     */
    public final TableField<FarmerLoanLetterRecord, String> SOCIETY = createField(DSL.name("SOCIETY"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.farmer_loan_letter.LOAN_REQUESTED_DATETIME</code>.
     */
    public final TableField<FarmerLoanLetterRecord, LocalDateTime> LOAN_REQUESTED_DATETIME = createField(DSL.name("LOAN_REQUESTED_DATETIME"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.farmer_loan_letter.LOAN_NO</code>.
     */
    public final TableField<FarmerLoanLetterRecord, String> LOAN_NO = createField(DSL.name("LOAN_NO"), SQLDataType.VARCHAR(15).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.farmer_loan_letter.LOAN_ELIGIBLITY_STATUS</code>.
     */
    public final TableField<FarmerLoanLetterRecord, String> LOAN_ELIGIBLITY_STATUS = createField(DSL.name("LOAN_ELIGIBLITY_STATUS"), SQLDataType.VARCHAR(3), this, "");

    /**
     * The column <code>vendor_portal_pbx.farmer_loan_letter.AADHAR_NO</code>.
     */
    public final TableField<FarmerLoanLetterRecord, String> AADHAR_NO = createField(DSL.name("AADHAR_NO"), SQLDataType.VARCHAR(14), this, "");

    /**
     * The column <code>vendor_portal_pbx.farmer_loan_letter.ADDRESS</code>.
     */
    public final TableField<FarmerLoanLetterRecord, String> ADDRESS = createField(DSL.name("ADDRESS"), SQLDataType.VARCHAR(350), this, "");

    /**
     * The column <code>vendor_portal_pbx.farmer_loan_letter.BANK_NAME</code>.
     */
    public final TableField<FarmerLoanLetterRecord, String> BANK_NAME = createField(DSL.name("BANK_NAME"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>vendor_portal_pbx.farmer_loan_letter.BRANCH_NAME</code>.
     */
    public final TableField<FarmerLoanLetterRecord, String> BRANCH_NAME = createField(DSL.name("BRANCH_NAME"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>vendor_portal_pbx.farmer_loan_letter.LOAN_APPROVAL_STATUS</code>.
     */
    public final TableField<FarmerLoanLetterRecord, String> LOAN_APPROVAL_STATUS = createField(DSL.name("LOAN_APPROVAL_STATUS"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>vendor_portal_pbx.farmer_loan_letter.LOAN_APPROVED_BY</code>.
     */
    public final TableField<FarmerLoanLetterRecord, String> LOAN_APPROVED_BY = createField(DSL.name("LOAN_APPROVED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.farmer_loan_letter.LOAN_APPROVED_ON</code>.
     */
    public final TableField<FarmerLoanLetterRecord, LocalDateTime> LOAN_APPROVED_ON = createField(DSL.name("LOAN_APPROVED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.farmer_loan_letter.REMARKS</code>.
     */
    public final TableField<FarmerLoanLetterRecord, String> REMARKS = createField(DSL.name("REMARKS"), SQLDataType.VARCHAR(250), this, "");

    /**
     * The column <code>vendor_portal_pbx.farmer_loan_letter.CREATED_BY</code>.
     */
    public final TableField<FarmerLoanLetterRecord, String> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.farmer_loan_letter.CREATED_ON</code>.
     */
    public final TableField<FarmerLoanLetterRecord, LocalDateTime> CREATED_ON = createField(DSL.name("CREATED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.farmer_loan_letter.CHANGED_BY</code>.
     */
    public final TableField<FarmerLoanLetterRecord, String> CHANGED_BY = createField(DSL.name("CHANGED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.farmer_loan_letter.CHANGED_ON</code>.
     */
    public final TableField<FarmerLoanLetterRecord, LocalDateTime> CHANGED_ON = createField(DSL.name("CHANGED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.farmer_loan_letter.ACC_NO</code>.
     */
    public final TableField<FarmerLoanLetterRecord, String> ACC_NO = createField(DSL.name("ACC_NO"), SQLDataType.VARCHAR(45), this, "");

    private FarmerLoanLetter(Name alias, Table<FarmerLoanLetterRecord> aliased) {
        this(alias, aliased, null);
    }

    private FarmerLoanLetter(Name alias, Table<FarmerLoanLetterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.farmer_loan_letter</code> table reference
     */
    public FarmerLoanLetter(String alias) {
        this(DSL.name(alias), FARMER_LOAN_LETTER);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.farmer_loan_letter</code> table reference
     */
    public FarmerLoanLetter(Name alias) {
        this(alias, FARMER_LOAN_LETTER);
    }

    /**
     * Create a <code>vendor_portal_pbx.farmer_loan_letter</code> table reference
     */
    public FarmerLoanLetter() {
        this(DSL.name("farmer_loan_letter"), null);
    }

    public <O extends Record> FarmerLoanLetter(Table<O> child, ForeignKey<O, FarmerLoanLetterRecord> key) {
        super(child, key, FARMER_LOAN_LETTER);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<FarmerLoanLetterRecord> getPrimaryKey() {
        return Keys.KEY_FARMER_LOAN_LETTER_PRIMARY;
    }

    @Override
    public List<UniqueKey<FarmerLoanLetterRecord>> getKeys() {
        return Arrays.<UniqueKey<FarmerLoanLetterRecord>>asList(Keys.KEY_FARMER_LOAN_LETTER_PRIMARY);
    }

    @Override
    public FarmerLoanLetter as(String alias) {
        return new FarmerLoanLetter(DSL.name(alias), this);
    }

    @Override
    public FarmerLoanLetter as(Name alias) {
        return new FarmerLoanLetter(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FarmerLoanLetter rename(String name) {
        return new FarmerLoanLetter(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FarmerLoanLetter rename(Name name) {
        return new FarmerLoanLetter(name, null);
    }

    // -------------------------------------------------------------------------
    // Row19 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row19<String, String, String, LocalDateTime, String, String, String, String, String, String, String, String, LocalDateTime, String, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row19) super.fieldsRow();
    }
}
