/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.DocumentUploadRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DocumentUpload extends TableImpl<DocumentUploadRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.document_upload</code>
     */
    public static final DocumentUpload DOCUMENT_UPLOAD = new DocumentUpload();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DocumentUploadRecord> getRecordType() {
        return DocumentUploadRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.document_upload.VENDOR_CODE</code>.
     */
    public final TableField<DocumentUploadRecord, String> VENDOR_CODE = createField(DSL.name("VENDOR_CODE"), SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.document_upload.DOCUMENT_ID</code>.
     */
    public final TableField<DocumentUploadRecord, String> DOCUMENT_ID = createField(DSL.name("DOCUMENT_ID"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.document_upload.DOCUMENT_NAME</code>.
     */
    public final TableField<DocumentUploadRecord, String> DOCUMENT_NAME = createField(DSL.name("DOCUMENT_NAME"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.document_upload.DOCUMENT_DATE</code>.
     */
    public final TableField<DocumentUploadRecord, LocalDateTime> DOCUMENT_DATE = createField(DSL.name("DOCUMENT_DATE"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.document_upload.DOCUMENT_FILE_NAME</code>.
     */
    public final TableField<DocumentUploadRecord, String> DOCUMENT_FILE_NAME = createField(DSL.name("DOCUMENT_FILE_NAME"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>vendor_portal_pbx.document_upload.STATUS</code>.
     */
    public final TableField<DocumentUploadRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.document_upload.DOCUMENT_DOWNLOAD_LINK</code>.
     */
    public final TableField<DocumentUploadRecord, String> DOCUMENT_DOWNLOAD_LINK = createField(DSL.name("DOCUMENT_DOWNLOAD_LINK"), SQLDataType.VARCHAR(5000), this, "");

    /**
     * The column <code>vendor_portal_pbx.document_upload.DOCUMENT_EDIT_LINK</code>.
     */
    public final TableField<DocumentUploadRecord, String> DOCUMENT_EDIT_LINK = createField(DSL.name("DOCUMENT_EDIT_LINK"), SQLDataType.VARCHAR(50000), this, "");

    /**
     * The column <code>vendor_portal_pbx.document_upload.UPLOADED_BY</code>.
     */
    public final TableField<DocumentUploadRecord, String> UPLOADED_BY = createField(DSL.name("UPLOADED_BY"), SQLDataType.VARCHAR(45), this, "");

    private DocumentUpload(Name alias, Table<DocumentUploadRecord> aliased) {
        this(alias, aliased, null);
    }

    private DocumentUpload(Name alias, Table<DocumentUploadRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.document_upload</code> table reference
     */
    public DocumentUpload(String alias) {
        this(DSL.name(alias), DOCUMENT_UPLOAD);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.document_upload</code> table reference
     */
    public DocumentUpload(Name alias) {
        this(alias, DOCUMENT_UPLOAD);
    }

    /**
     * Create a <code>vendor_portal_pbx.document_upload</code> table reference
     */
    public DocumentUpload() {
        this(DSL.name("document_upload"), null);
    }

    public <O extends Record> DocumentUpload(Table<O> child, ForeignKey<O, DocumentUploadRecord> key) {
        super(child, key, DOCUMENT_UPLOAD);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<DocumentUploadRecord> getPrimaryKey() {
        return Keys.KEY_DOCUMENT_UPLOAD_PRIMARY;
    }

    @Override
    public List<UniqueKey<DocumentUploadRecord>> getKeys() {
        return Arrays.<UniqueKey<DocumentUploadRecord>>asList(Keys.KEY_DOCUMENT_UPLOAD_PRIMARY);
    }

    @Override
    public DocumentUpload as(String alias) {
        return new DocumentUpload(DSL.name(alias), this);
    }

    @Override
    public DocumentUpload as(Name alias) {
        return new DocumentUpload(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DocumentUpload rename(String name) {
        return new DocumentUpload(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DocumentUpload rename(Name name) {
        return new DocumentUpload(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, String, String, LocalDateTime, String, String, String, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
