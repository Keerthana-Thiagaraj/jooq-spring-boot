/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.TcCeritificateIssueRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TcCeritificateIssue extends TableImpl<TcCeritificateIssueRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.TC_CERITIFICATE_ISSUE</code>
     */
    public static final TcCeritificateIssue TC_CERITIFICATE_ISSUE = new TcCeritificateIssue();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TcCeritificateIssueRecord> getRecordType() {
        return TcCeritificateIssueRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.TC_CERITIFICATE_ISSUE.LINE_ID</code>.
     */
    public final TableField<TcCeritificateIssueRecord, Integer> LINE_ID = createField(DSL.name("LINE_ID"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_CERITIFICATE_ISSUE.REQUEST_ID</code>.
     */
    public final TableField<TcCeritificateIssueRecord, String> REQUEST_ID = createField(DSL.name("REQUEST_ID"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_CERITIFICATE_ISSUE.ISSUE_DATE</code>.
     */
    public final TableField<TcCeritificateIssueRecord, LocalDate> ISSUE_DATE = createField(DSL.name("ISSUE_DATE"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_CERITIFICATE_ISSUE.CERTIFICATE_ID</code>.
     */
    public final TableField<TcCeritificateIssueRecord, String> CERTIFICATE_ID = createField(DSL.name("CERTIFICATE_ID"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_CERITIFICATE_ISSUE.CERTIFICATE_URL</code>.
     */
    public final TableField<TcCeritificateIssueRecord, String> CERTIFICATE_URL = createField(DSL.name("CERTIFICATE_URL"), SQLDataType.VARCHAR(150), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_CERITIFICATE_ISSUE.ISSUED_BY</code>.
     */
    public final TableField<TcCeritificateIssueRecord, String> ISSUED_BY = createField(DSL.name("ISSUED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_CERITIFICATE_ISSUE.CREATED_BY</code>.
     */
    public final TableField<TcCeritificateIssueRecord, String> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_CERITIFICATE_ISSUE.CREATED_ON</code>.
     */
    public final TableField<TcCeritificateIssueRecord, LocalDateTime> CREATED_ON = createField(DSL.name("CREATED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_CERITIFICATE_ISSUE.LAST_CHANGED_BY</code>.
     */
    public final TableField<TcCeritificateIssueRecord, String> LAST_CHANGED_BY = createField(DSL.name("LAST_CHANGED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_CERITIFICATE_ISSUE.LAST_CHANGED_ON</code>.
     */
    public final TableField<TcCeritificateIssueRecord, LocalDateTime> LAST_CHANGED_ON = createField(DSL.name("LAST_CHANGED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    private TcCeritificateIssue(Name alias, Table<TcCeritificateIssueRecord> aliased) {
        this(alias, aliased, null);
    }

    private TcCeritificateIssue(Name alias, Table<TcCeritificateIssueRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.TC_CERITIFICATE_ISSUE</code> table reference
     */
    public TcCeritificateIssue(String alias) {
        this(DSL.name(alias), TC_CERITIFICATE_ISSUE);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.TC_CERITIFICATE_ISSUE</code> table reference
     */
    public TcCeritificateIssue(Name alias) {
        this(alias, TC_CERITIFICATE_ISSUE);
    }

    /**
     * Create a <code>vendor_portal_pbx.TC_CERITIFICATE_ISSUE</code> table reference
     */
    public TcCeritificateIssue() {
        this(DSL.name("TC_CERITIFICATE_ISSUE"), null);
    }

    public <O extends Record> TcCeritificateIssue(Table<O> child, ForeignKey<O, TcCeritificateIssueRecord> key) {
        super(child, key, TC_CERITIFICATE_ISSUE);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<TcCeritificateIssueRecord> getPrimaryKey() {
        return Keys.KEY_TC_CERITIFICATE_ISSUE_PRIMARY;
    }

    @Override
    public List<UniqueKey<TcCeritificateIssueRecord>> getKeys() {
        return Arrays.<UniqueKey<TcCeritificateIssueRecord>>asList(Keys.KEY_TC_CERITIFICATE_ISSUE_PRIMARY);
    }

    @Override
    public List<ForeignKey<TcCeritificateIssueRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TcCeritificateIssueRecord, ?>>asList(Keys.FK_REQ_LI_CI);
    }

    private transient TcRequestLi _tcRequestLi;

    public TcRequestLi tcRequestLi() {
        if (_tcRequestLi == null)
            _tcRequestLi = new TcRequestLi(this, Keys.FK_REQ_LI_CI);

        return _tcRequestLi;
    }

    @Override
    public TcCeritificateIssue as(String alias) {
        return new TcCeritificateIssue(DSL.name(alias), this);
    }

    @Override
    public TcCeritificateIssue as(Name alias) {
        return new TcCeritificateIssue(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TcCeritificateIssue rename(String name) {
        return new TcCeritificateIssue(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TcCeritificateIssue rename(Name name) {
        return new TcCeritificateIssue(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, String, LocalDate, String, String, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
