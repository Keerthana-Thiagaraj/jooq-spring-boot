/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.records;


import com.jooq.jooq.model.tables.StateMaster;

import java.time.LocalDateTime;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "state_master",
    schema = "jooq_demo",
    uniqueConstraints = {
        @UniqueConstraint(name = "KEY_state_master_PRIMARY", columnNames = { "ID" })
    },
    indexes = {
        @Index(name = "FK_COUNTRY_MASTER_idx", columnList = "COUNTRY_CODE ASC")
    }
)
public class StateMasterRecord extends UpdatableRecordImpl<StateMasterRecord> implements Record6<Integer, String, Integer, String, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jooq_demo.state_master.ID</code>.
     */
    public StateMasterRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>jooq_demo.state_master.ID</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ID", nullable = false, precision = 10)
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>jooq_demo.state_master.NAME</code>.
     */
    public StateMasterRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>jooq_demo.state_master.NAME</code>.
     */
    @Column(name = "NAME", nullable = false, length = 50)
    @NotNull
    @Size(max = 50)
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>jooq_demo.state_master.COUNTRY_CODE</code>.
     */
    public StateMasterRecord setCountryCode(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>jooq_demo.state_master.COUNTRY_CODE</code>.
     */
    @Column(name = "COUNTRY_CODE", precision = 10)
    public Integer getCountryCode() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>jooq_demo.state_master.STATUS</code>.
     */
    public StateMasterRecord setStatus(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>jooq_demo.state_master.STATUS</code>.
     */
    @Column(name = "STATUS", length = 1)
    @Size(max = 1)
    public String getStatus() {
        return (String) get(3);
    }

    /**
     * Setter for <code>jooq_demo.state_master.CREATED_BY</code>.
     */
    public StateMasterRecord setCreatedBy(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>jooq_demo.state_master.CREATED_BY</code>.
     */
    @Column(name = "CREATED_BY", length = 45)
    @Size(max = 45)
    public String getCreatedBy() {
        return (String) get(4);
    }

    /**
     * Setter for <code>jooq_demo.state_master.CREATED_ON</code>.
     */
    public StateMasterRecord setCreatedOn(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>jooq_demo.state_master.CREATED_ON</code>.
     */
    @Column(name = "CREATED_ON")
    public LocalDateTime getCreatedOn() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, Integer, String, String, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, Integer, String, String, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return StateMaster.STATE_MASTER.ID;
    }

    @Override
    public Field<String> field2() {
        return StateMaster.STATE_MASTER.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return StateMaster.STATE_MASTER.COUNTRY_CODE;
    }

    @Override
    public Field<String> field4() {
        return StateMaster.STATE_MASTER.STATUS;
    }

    @Override
    public Field<String> field5() {
        return StateMaster.STATE_MASTER.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return StateMaster.STATE_MASTER.CREATED_ON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getCountryCode();
    }

    @Override
    public String component4() {
        return getStatus();
    }

    @Override
    public String component5() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedOn();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getCountryCode();
    }

    @Override
    public String value4() {
        return getStatus();
    }

    @Override
    public String value5() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedOn();
    }

    @Override
    public StateMasterRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public StateMasterRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public StateMasterRecord value3(Integer value) {
        setCountryCode(value);
        return this;
    }

    @Override
    public StateMasterRecord value4(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public StateMasterRecord value5(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public StateMasterRecord value6(LocalDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public StateMasterRecord values(Integer value1, String value2, Integer value3, String value4, String value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StateMasterRecord
     */
    public StateMasterRecord() {
        super(StateMaster.STATE_MASTER);
    }

    /**
     * Create a detached, initialised StateMasterRecord
     */
    public StateMasterRecord(Integer id, String name, Integer countryCode, String status, String createdBy, LocalDateTime createdOn) {
        super(StateMaster.STATE_MASTER);

        setId(id);
        setName(name);
        setCountryCode(countryCode);
        setStatus(status);
        setCreatedBy(createdBy);
        setCreatedOn(createdOn);
    }
}
