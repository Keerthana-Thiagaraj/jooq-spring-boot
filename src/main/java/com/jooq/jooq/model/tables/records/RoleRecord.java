/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.records;


import com.jooq.jooq.model.tables.Role;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoleRecord extends UpdatableRecordImpl<RoleRecord> implements Record4<String, Integer, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>vendor_portal_pbx.role.COMP_CODE</code>.
     */
    public RoleRecord setCompCode(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.role.COMP_CODE</code>.
     */
    public String getCompCode() {
        return (String) get(0);
    }

    /**
     * Setter for <code>vendor_portal_pbx.role.ROLE_ID</code>.
     */
    public RoleRecord setRoleId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.role.ROLE_ID</code>.
     */
    public Integer getRoleId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>vendor_portal_pbx.role.ROLE_NAME</code>.
     */
    public RoleRecord setRoleName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.role.ROLE_NAME</code>.
     */
    public String getRoleName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>vendor_portal_pbx.role.BLOCK</code>.
     */
    public RoleRecord setBlock(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.role.BLOCK</code>.
     */
    public String getBlock() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, Integer, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, Integer, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Role.ROLE.COMP_CODE;
    }

    @Override
    public Field<Integer> field2() {
        return Role.ROLE.ROLE_ID;
    }

    @Override
    public Field<String> field3() {
        return Role.ROLE.ROLE_NAME;
    }

    @Override
    public Field<String> field4() {
        return Role.ROLE.BLOCK;
    }

    @Override
    public String component1() {
        return getCompCode();
    }

    @Override
    public Integer component2() {
        return getRoleId();
    }

    @Override
    public String component3() {
        return getRoleName();
    }

    @Override
    public String component4() {
        return getBlock();
    }

    @Override
    public String value1() {
        return getCompCode();
    }

    @Override
    public Integer value2() {
        return getRoleId();
    }

    @Override
    public String value3() {
        return getRoleName();
    }

    @Override
    public String value4() {
        return getBlock();
    }

    @Override
    public RoleRecord value1(String value) {
        setCompCode(value);
        return this;
    }

    @Override
    public RoleRecord value2(Integer value) {
        setRoleId(value);
        return this;
    }

    @Override
    public RoleRecord value3(String value) {
        setRoleName(value);
        return this;
    }

    @Override
    public RoleRecord value4(String value) {
        setBlock(value);
        return this;
    }

    @Override
    public RoleRecord values(String value1, Integer value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoleRecord
     */
    public RoleRecord() {
        super(Role.ROLE);
    }

    /**
     * Create a detached, initialised RoleRecord
     */
    public RoleRecord(String compCode, Integer roleId, String roleName, String block) {
        super(Role.ROLE);

        setCompCode(compCode);
        setRoleId(roleId);
        setRoleName(roleName);
        setBlock(block);
    }
}
