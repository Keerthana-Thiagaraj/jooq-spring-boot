/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Indexes;
import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.RbRoomBookingRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row20;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RbRoomBooking extends TableImpl<RbRoomBookingRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.RB_ROOM_BOOKING</code>
     */
    public static final RbRoomBooking RB_ROOM_BOOKING = new RbRoomBooking();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RbRoomBookingRecord> getRecordType() {
        return RbRoomBookingRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING.RB_LOCATION_CODE</code>.
     */
    public final TableField<RbRoomBookingRecord, Integer> RB_LOCATION_CODE = createField(DSL.name("RB_LOCATION_CODE"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING.BUILDING_CODE</code>.
     */
    public final TableField<RbRoomBookingRecord, Integer> BUILDING_CODE = createField(DSL.name("BUILDING_CODE"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING.FLOOR_CODE</code>.
     */
    public final TableField<RbRoomBookingRecord, Integer> FLOOR_CODE = createField(DSL.name("FLOOR_CODE"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING.ROOM_CODE</code>.
     */
    public final TableField<RbRoomBookingRecord, Integer> ROOM_CODE = createField(DSL.name("ROOM_CODE"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING.BOOKED_DATE</code>.
     */
    public final TableField<RbRoomBookingRecord, LocalDate> BOOKED_DATE = createField(DSL.name("BOOKED_DATE"), SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING.FROM_TIME</code>.
     */
    public final TableField<RbRoomBookingRecord, LocalTime> FROM_TIME = createField(DSL.name("FROM_TIME"), SQLDataType.LOCALTIME.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING.TO_TIME</code>.
     */
    public final TableField<RbRoomBookingRecord, LocalTime> TO_TIME = createField(DSL.name("TO_TIME"), SQLDataType.LOCALTIME, this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING.ACTUAL_SEAT</code>.
     */
    public final TableField<RbRoomBookingRecord, Integer> ACTUAL_SEAT = createField(DSL.name("ACTUAL_SEAT"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING.BOOKED_SEAT</code>.
     */
    public final TableField<RbRoomBookingRecord, Integer> BOOKED_SEAT = createField(DSL.name("BOOKED_SEAT"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING.AVAILABLE_SEAT</code>.
     */
    public final TableField<RbRoomBookingRecord, Integer> AVAILABLE_SEAT = createField(DSL.name("AVAILABLE_SEAT"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING.SUBJECT</code>.
     */
    public final TableField<RbRoomBookingRecord, String> SUBJECT = createField(DSL.name("SUBJECT"), SQLDataType.VARCHAR(250), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING.STATUS_FLAG</code>.
     */
    public final TableField<RbRoomBookingRecord, String> STATUS_FLAG = createField(DSL.name("STATUS_FLAG"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING.BOOKED_FOR</code>.
     */
    public final TableField<RbRoomBookingRecord, String> BOOKED_FOR = createField(DSL.name("BOOKED_FOR"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING.EMAIL</code>.
     */
    public final TableField<RbRoomBookingRecord, String> EMAIL = createField(DSL.name("EMAIL"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING.PHONE</code>.
     */
    public final TableField<RbRoomBookingRecord, String> PHONE = createField(DSL.name("PHONE"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING.REMARKS</code>.
     */
    public final TableField<RbRoomBookingRecord, String> REMARKS = createField(DSL.name("REMARKS"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING.CREATED_BY</code>.
     */
    public final TableField<RbRoomBookingRecord, String> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING.CREATED_ON</code>.
     */
    public final TableField<RbRoomBookingRecord, LocalDateTime> CREATED_ON = createField(DSL.name("CREATED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING.LAST_CHANGED_ON</code>.
     */
    public final TableField<RbRoomBookingRecord, LocalDateTime> LAST_CHANGED_ON = createField(DSL.name("LAST_CHANGED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.RB_ROOM_BOOKING.LAST_MODIFIED_BY</code>.
     */
    public final TableField<RbRoomBookingRecord, String> LAST_MODIFIED_BY = createField(DSL.name("LAST_MODIFIED_BY"), SQLDataType.VARCHAR(45), this, "");

    private RbRoomBooking(Name alias, Table<RbRoomBookingRecord> aliased) {
        this(alias, aliased, null);
    }

    private RbRoomBooking(Name alias, Table<RbRoomBookingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.RB_ROOM_BOOKING</code> table reference
     */
    public RbRoomBooking(String alias) {
        this(DSL.name(alias), RB_ROOM_BOOKING);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.RB_ROOM_BOOKING</code> table reference
     */
    public RbRoomBooking(Name alias) {
        this(alias, RB_ROOM_BOOKING);
    }

    /**
     * Create a <code>vendor_portal_pbx.RB_ROOM_BOOKING</code> table reference
     */
    public RbRoomBooking() {
        this(DSL.name("RB_ROOM_BOOKING"), null);
    }

    public <O extends Record> RbRoomBooking(Table<O> child, ForeignKey<O, RbRoomBookingRecord> key) {
        super(child, key, RB_ROOM_BOOKING);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RB_ROOM_BOOKING_FK_RB_ROOM_MASTER_BOOKING_IDX, Indexes.RB_ROOM_BOOKING_FK_RB_ROOM_MASTER_IDX, Indexes.RB_ROOM_BOOKING_FK_ROOM_BOOKING_IDX);
    }

    @Override
    public UniqueKey<RbRoomBookingRecord> getPrimaryKey() {
        return Keys.KEY_RB_ROOM_BOOKING_PRIMARY;
    }

    @Override
    public List<UniqueKey<RbRoomBookingRecord>> getKeys() {
        return Arrays.<UniqueKey<RbRoomBookingRecord>>asList(Keys.KEY_RB_ROOM_BOOKING_PRIMARY);
    }

    @Override
    public RbRoomBooking as(String alias) {
        return new RbRoomBooking(DSL.name(alias), this);
    }

    @Override
    public RbRoomBooking as(Name alias) {
        return new RbRoomBooking(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RbRoomBooking rename(String name) {
        return new RbRoomBooking(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RbRoomBooking rename(Name name) {
        return new RbRoomBooking(name, null);
    }

    // -------------------------------------------------------------------------
    // Row20 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row20<Integer, Integer, Integer, Integer, LocalDate, LocalTime, LocalTime, Integer, Integer, Integer, String, String, String, String, String, String, String, LocalDateTime, LocalDateTime, String> fieldsRow() {
        return (Row20) super.fieldsRow();
    }
}
