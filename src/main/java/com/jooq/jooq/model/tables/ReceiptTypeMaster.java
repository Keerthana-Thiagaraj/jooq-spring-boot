/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.ReceiptTypeMasterRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReceiptTypeMaster extends TableImpl<ReceiptTypeMasterRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.receipt_type_master</code>
     */
    public static final ReceiptTypeMaster RECEIPT_TYPE_MASTER = new ReceiptTypeMaster();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReceiptTypeMasterRecord> getRecordType() {
        return ReceiptTypeMasterRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.receipt_type_master.NO</code>.
     */
    public final TableField<ReceiptTypeMasterRecord, String> NO = createField(DSL.name("NO"), SQLDataType.VARCHAR(5).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.receipt_type_master.RECEIPT_NAME</code>.
     */
    public final TableField<ReceiptTypeMasterRecord, String> RECEIPT_NAME = createField(DSL.name("RECEIPT_NAME"), SQLDataType.VARCHAR(250), this, "");

    /**
     * The column <code>vendor_portal_pbx.receipt_type_master.RECEIPT_VALUE</code>.
     */
    public final TableField<ReceiptTypeMasterRecord, String> RECEIPT_VALUE = createField(DSL.name("RECEIPT_VALUE"), SQLDataType.VARCHAR(250), this, "");

    /**
     * The column <code>vendor_portal_pbx.receipt_type_master.STATUS</code>.
     */
    public final TableField<ReceiptTypeMasterRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(1), this, "");

    private ReceiptTypeMaster(Name alias, Table<ReceiptTypeMasterRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReceiptTypeMaster(Name alias, Table<ReceiptTypeMasterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.receipt_type_master</code> table reference
     */
    public ReceiptTypeMaster(String alias) {
        this(DSL.name(alias), RECEIPT_TYPE_MASTER);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.receipt_type_master</code> table reference
     */
    public ReceiptTypeMaster(Name alias) {
        this(alias, RECEIPT_TYPE_MASTER);
    }

    /**
     * Create a <code>vendor_portal_pbx.receipt_type_master</code> table reference
     */
    public ReceiptTypeMaster() {
        this(DSL.name("receipt_type_master"), null);
    }

    public <O extends Record> ReceiptTypeMaster(Table<O> child, ForeignKey<O, ReceiptTypeMasterRecord> key) {
        super(child, key, RECEIPT_TYPE_MASTER);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<ReceiptTypeMasterRecord> getPrimaryKey() {
        return Keys.KEY_RECEIPT_TYPE_MASTER_PRIMARY;
    }

    @Override
    public List<UniqueKey<ReceiptTypeMasterRecord>> getKeys() {
        return Arrays.<UniqueKey<ReceiptTypeMasterRecord>>asList(Keys.KEY_RECEIPT_TYPE_MASTER_PRIMARY);
    }

    @Override
    public ReceiptTypeMaster as(String alias) {
        return new ReceiptTypeMaster(DSL.name(alias), this);
    }

    @Override
    public ReceiptTypeMaster as(Name alias) {
        return new ReceiptTypeMaster(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReceiptTypeMaster rename(String name) {
        return new ReceiptTypeMaster(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReceiptTypeMaster rename(Name name) {
        return new ReceiptTypeMaster(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
