/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.TcDesignationRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TcDesignation extends TableImpl<TcDesignationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.TC_DESIGNATION</code>
     */
    public static final TcDesignation TC_DESIGNATION = new TcDesignation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TcDesignationRecord> getRecordType() {
        return TcDesignationRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.TC_DESIGNATION.DESIG_CODE</code>.
     */
    public final TableField<TcDesignationRecord, Integer> DESIG_CODE = createField(DSL.name("DESIG_CODE"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_DESIGNATION.DESIG_NAME</code>.
     */
    public final TableField<TcDesignationRecord, String> DESIG_NAME = createField(DSL.name("DESIG_NAME"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_DESIGNATION.DEPT_CODE</code>.
     */
    public final TableField<TcDesignationRecord, Integer> DEPT_CODE = createField(DSL.name("DEPT_CODE"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_DESIGNATION.FROM_DATE</code>.
     */
    public final TableField<TcDesignationRecord, LocalDate> FROM_DATE = createField(DSL.name("FROM_DATE"), SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_DESIGNATION.TO_DATE</code>.
     */
    public final TableField<TcDesignationRecord, LocalDate> TO_DATE = createField(DSL.name("TO_DATE"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_DESIGNATION.STATUS</code>.
     */
    public final TableField<TcDesignationRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_DESIGNATION.CREATED_BY</code>.
     */
    public final TableField<TcDesignationRecord, String> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_DESIGNATION.CREATED_ON</code>.
     */
    public final TableField<TcDesignationRecord, LocalDateTime> CREATED_ON = createField(DSL.name("CREATED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_DESIGNATION.LAST_CHANGED_BY</code>.
     */
    public final TableField<TcDesignationRecord, String> LAST_CHANGED_BY = createField(DSL.name("LAST_CHANGED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_DESIGNATION.LAST_CHANGED_ON</code>.
     */
    public final TableField<TcDesignationRecord, LocalDateTime> LAST_CHANGED_ON = createField(DSL.name("LAST_CHANGED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    private TcDesignation(Name alias, Table<TcDesignationRecord> aliased) {
        this(alias, aliased, null);
    }

    private TcDesignation(Name alias, Table<TcDesignationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.TC_DESIGNATION</code> table reference
     */
    public TcDesignation(String alias) {
        this(DSL.name(alias), TC_DESIGNATION);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.TC_DESIGNATION</code> table reference
     */
    public TcDesignation(Name alias) {
        this(alias, TC_DESIGNATION);
    }

    /**
     * Create a <code>vendor_portal_pbx.TC_DESIGNATION</code> table reference
     */
    public TcDesignation() {
        this(DSL.name("TC_DESIGNATION"), null);
    }

    public <O extends Record> TcDesignation(Table<O> child, ForeignKey<O, TcDesignationRecord> key) {
        super(child, key, TC_DESIGNATION);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public Identity<TcDesignationRecord, Integer> getIdentity() {
        return (Identity<TcDesignationRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<TcDesignationRecord> getPrimaryKey() {
        return Keys.KEY_TC_DESIGNATION_PRIMARY;
    }

    @Override
    public List<UniqueKey<TcDesignationRecord>> getKeys() {
        return Arrays.<UniqueKey<TcDesignationRecord>>asList(Keys.KEY_TC_DESIGNATION_PRIMARY);
    }

    @Override
    public TcDesignation as(String alias) {
        return new TcDesignation(DSL.name(alias), this);
    }

    @Override
    public TcDesignation as(Name alias) {
        return new TcDesignation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TcDesignation rename(String name) {
        return new TcDesignation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TcDesignation rename(Name name) {
        return new TcDesignation(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, String, Integer, LocalDate, LocalDate, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
