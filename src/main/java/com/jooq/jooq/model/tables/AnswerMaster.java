/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.AnswerMasterRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnswerMaster extends TableImpl<AnswerMasterRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.answer_master</code>
     */
    public static final AnswerMaster ANSWER_MASTER = new AnswerMaster();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AnswerMasterRecord> getRecordType() {
        return AnswerMasterRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.answer_master.ID</code>.
     */
    public final TableField<AnswerMasterRecord, Integer> ID = createField(DSL.name("ID"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>vendor_portal_pbx.answer_master.ANSWER_NAME</code>.
     */
    public final TableField<AnswerMasterRecord, String> ANSWER_NAME = createField(DSL.name("ANSWER_NAME"), SQLDataType.VARCHAR(45), this, "");

    private AnswerMaster(Name alias, Table<AnswerMasterRecord> aliased) {
        this(alias, aliased, null);
    }

    private AnswerMaster(Name alias, Table<AnswerMasterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.answer_master</code> table reference
     */
    public AnswerMaster(String alias) {
        this(DSL.name(alias), ANSWER_MASTER);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.answer_master</code> table reference
     */
    public AnswerMaster(Name alias) {
        this(alias, ANSWER_MASTER);
    }

    /**
     * Create a <code>vendor_portal_pbx.answer_master</code> table reference
     */
    public AnswerMaster() {
        this(DSL.name("answer_master"), null);
    }

    public <O extends Record> AnswerMaster(Table<O> child, ForeignKey<O, AnswerMasterRecord> key) {
        super(child, key, ANSWER_MASTER);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public Identity<AnswerMasterRecord, Integer> getIdentity() {
        return (Identity<AnswerMasterRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<AnswerMasterRecord> getPrimaryKey() {
        return Keys.KEY_ANSWER_MASTER_PRIMARY;
    }

    @Override
    public List<UniqueKey<AnswerMasterRecord>> getKeys() {
        return Arrays.<UniqueKey<AnswerMasterRecord>>asList(Keys.KEY_ANSWER_MASTER_PRIMARY);
    }

    @Override
    public AnswerMaster as(String alias) {
        return new AnswerMaster(DSL.name(alias), this);
    }

    @Override
    public AnswerMaster as(Name alias) {
        return new AnswerMaster(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AnswerMaster rename(String name) {
        return new AnswerMaster(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AnswerMaster rename(Name name) {
        return new AnswerMaster(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
