/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.records;


import com.jooq.jooq.model.tables.CcComplaintType;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CcComplaintTypeRecord extends UpdatableRecordImpl<CcComplaintTypeRecord> implements Record6<Integer, String, String, String, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>vendor_portal_pbx.cc_complaint_type.COMPLAINT_ID</code>.
     */
    public CcComplaintTypeRecord setComplaintId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_complaint_type.COMPLAINT_ID</code>.
     */
    public Integer getComplaintId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_complaint_type.DIVISION</code>.
     */
    public CcComplaintTypeRecord setDivision(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_complaint_type.DIVISION</code>.
     */
    public String getDivision() {
        return (String) get(1);
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_complaint_type.COMPLAINT_NAME</code>.
     */
    public CcComplaintTypeRecord setComplaintName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_complaint_type.COMPLAINT_NAME</code>.
     */
    public String getComplaintName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_complaint_type.CREATED_BY</code>.
     */
    public CcComplaintTypeRecord setCreatedBy(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_complaint_type.CREATED_BY</code>.
     */
    public String getCreatedBy() {
        return (String) get(3);
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_complaint_type.CREATED_ON</code>.
     */
    public CcComplaintTypeRecord setCreatedOn(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_complaint_type.CREATED_ON</code>.
     */
    public LocalDateTime getCreatedOn() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>vendor_portal_pbx.cc_complaint_type.STATUS</code>.
     */
    public CcComplaintTypeRecord setStatus(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.cc_complaint_type.STATUS</code>.
     */
    public String getStatus() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, String, String, LocalDateTime, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, String, String, LocalDateTime, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return CcComplaintType.CC_COMPLAINT_TYPE.COMPLAINT_ID;
    }

    @Override
    public Field<String> field2() {
        return CcComplaintType.CC_COMPLAINT_TYPE.DIVISION;
    }

    @Override
    public Field<String> field3() {
        return CcComplaintType.CC_COMPLAINT_TYPE.COMPLAINT_NAME;
    }

    @Override
    public Field<String> field4() {
        return CcComplaintType.CC_COMPLAINT_TYPE.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return CcComplaintType.CC_COMPLAINT_TYPE.CREATED_ON;
    }

    @Override
    public Field<String> field6() {
        return CcComplaintType.CC_COMPLAINT_TYPE.STATUS;
    }

    @Override
    public Integer component1() {
        return getComplaintId();
    }

    @Override
    public String component2() {
        return getDivision();
    }

    @Override
    public String component3() {
        return getComplaintName();
    }

    @Override
    public String component4() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component5() {
        return getCreatedOn();
    }

    @Override
    public String component6() {
        return getStatus();
    }

    @Override
    public Integer value1() {
        return getComplaintId();
    }

    @Override
    public String value2() {
        return getDivision();
    }

    @Override
    public String value3() {
        return getComplaintName();
    }

    @Override
    public String value4() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value5() {
        return getCreatedOn();
    }

    @Override
    public String value6() {
        return getStatus();
    }

    @Override
    public CcComplaintTypeRecord value1(Integer value) {
        setComplaintId(value);
        return this;
    }

    @Override
    public CcComplaintTypeRecord value2(String value) {
        setDivision(value);
        return this;
    }

    @Override
    public CcComplaintTypeRecord value3(String value) {
        setComplaintName(value);
        return this;
    }

    @Override
    public CcComplaintTypeRecord value4(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public CcComplaintTypeRecord value5(LocalDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public CcComplaintTypeRecord value6(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public CcComplaintTypeRecord values(Integer value1, String value2, String value3, String value4, LocalDateTime value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CcComplaintTypeRecord
     */
    public CcComplaintTypeRecord() {
        super(CcComplaintType.CC_COMPLAINT_TYPE);
    }

    /**
     * Create a detached, initialised CcComplaintTypeRecord
     */
    public CcComplaintTypeRecord(Integer complaintId, String division, String complaintName, String createdBy, LocalDateTime createdOn, String status) {
        super(CcComplaintType.CC_COMPLAINT_TYPE);

        setComplaintId(complaintId);
        setDivision(division);
        setComplaintName(complaintName);
        setCreatedBy(createdBy);
        setCreatedOn(createdOn);
        setStatus(status);
    }
}
