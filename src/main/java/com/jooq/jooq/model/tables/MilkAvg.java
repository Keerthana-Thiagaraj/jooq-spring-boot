/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Indexes;
import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.MilkAvgRecord;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MilkAvg extends TableImpl<MilkAvgRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.milk_avg</code>
     */
    public static final MilkAvg MILK_AVG = new MilkAvg();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MilkAvgRecord> getRecordType() {
        return MilkAvgRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.milk_avg.PLANT</code>.
     */
    public final TableField<MilkAvgRecord, String> PLANT = createField(DSL.name("PLANT"), SQLDataType.VARCHAR(4).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.NAME1</code>.
     */
    public final TableField<MilkAvgRecord, String> NAME1 = createField(DSL.name("NAME1"), SQLDataType.VARCHAR(35), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.SOCIETY</code>.
     */
    public final TableField<MilkAvgRecord, String> SOCIETY = createField(DSL.name("SOCIETY"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.SNAME</code>.
     */
    public final TableField<MilkAvgRecord, String> SNAME = createField(DSL.name("SNAME"), SQLDataType.VARCHAR(35), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.CRDAT</code>.
     */
    public final TableField<MilkAvgRecord, LocalDate> CRDAT = createField(DSL.name("CRDAT"), SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.SHIFT</code>.
     */
    public final TableField<MilkAvgRecord, String> SHIFT = createField(DSL.name("SHIFT"), SQLDataType.VARCHAR(1).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.QUANTITY</code>.
     */
    public final TableField<MilkAvgRecord, String> QUANTITY = createField(DSL.name("QUANTITY"), SQLDataType.VARCHAR(15), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.QUANTITY_KG</code>.
     */
    public final TableField<MilkAvgRecord, String> QUANTITY_KG = createField(DSL.name("QUANTITY_KG"), SQLDataType.VARCHAR(15), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.FAT</code>.
     */
    public final TableField<MilkAvgRecord, String> FAT = createField(DSL.name("FAT"), SQLDataType.VARCHAR(15), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.KG_FAT</code>.
     */
    public final TableField<MilkAvgRecord, String> KG_FAT = createField(DSL.name("KG_FAT"), SQLDataType.VARCHAR(15), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.FAT_PER</code>.
     */
    public final TableField<MilkAvgRecord, String> FAT_PER = createField(DSL.name("FAT_PER"), SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.FAT_LOW</code>.
     */
    public final TableField<MilkAvgRecord, String> FAT_LOW = createField(DSL.name("FAT_LOW"), SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.FAT_HIGH</code>.
     */
    public final TableField<MilkAvgRecord, String> FAT_HIGH = createField(DSL.name("FAT_HIGH"), SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.FAT_RN</code>.
     */
    public final TableField<MilkAvgRecord, String> FAT_RN = createField(DSL.name("FAT_RN"), SQLDataType.VARCHAR(15), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.SNF</code>.
     */
    public final TableField<MilkAvgRecord, String> SNF = createField(DSL.name("SNF"), SQLDataType.VARCHAR(15), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.KG_SNF</code>.
     */
    public final TableField<MilkAvgRecord, String> KG_SNF = createField(DSL.name("KG_SNF"), SQLDataType.VARCHAR(15), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.SNF_PER</code>.
     */
    public final TableField<MilkAvgRecord, String> SNF_PER = createField(DSL.name("SNF_PER"), SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.SNF_LOW</code>.
     */
    public final TableField<MilkAvgRecord, String> SNF_LOW = createField(DSL.name("SNF_LOW"), SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.SNF_HIGH</code>.
     */
    public final TableField<MilkAvgRecord, String> SNF_HIGH = createField(DSL.name("SNF_HIGH"), SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.SNF_RN</code>.
     */
    public final TableField<MilkAvgRecord, String> SNF_RN = createField(DSL.name("SNF_RN"), SQLDataType.VARCHAR(15), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.DMBTR</code>.
     */
    public final TableField<MilkAvgRecord, BigDecimal> DMBTR = createField(DSL.name("DMBTR"), SQLDataType.DECIMAL(13, 2), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.INC</code>.
     */
    public final TableField<MilkAvgRecord, BigDecimal> INC = createField(DSL.name("INC"), SQLDataType.DECIMAL(13, 2), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.AMOUNT</code>.
     */
    public final TableField<MilkAvgRecord, BigDecimal> AMOUNT = createField(DSL.name("AMOUNT"), SQLDataType.DECIMAL(13, 2), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.STATUS</code>.
     */
    public final TableField<MilkAvgRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.CREATED_BY</code>.
     */
    public final TableField<MilkAvgRecord, Integer> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.CREATED_ON</code>.
     */
    public final TableField<MilkAvgRecord, LocalDateTime> CREATED_ON = createField(DSL.name("CREATED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.LAST_CHANGED_BY</code>.
     */
    public final TableField<MilkAvgRecord, Integer> LAST_CHANGED_BY = createField(DSL.name("LAST_CHANGED_BY"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_avg.LAST_CHANGED_ON</code>.
     */
    public final TableField<MilkAvgRecord, LocalDateTime> LAST_CHANGED_ON = createField(DSL.name("LAST_CHANGED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    private MilkAvg(Name alias, Table<MilkAvgRecord> aliased) {
        this(alias, aliased, null);
    }

    private MilkAvg(Name alias, Table<MilkAvgRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.milk_avg</code> table reference
     */
    public MilkAvg(String alias) {
        this(DSL.name(alias), MILK_AVG);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.milk_avg</code> table reference
     */
    public MilkAvg(Name alias) {
        this(alias, MILK_AVG);
    }

    /**
     * Create a <code>vendor_portal_pbx.milk_avg</code> table reference
     */
    public MilkAvg() {
        this(DSL.name("milk_avg"), null);
    }

    public <O extends Record> MilkAvg(Table<O> child, ForeignKey<O, MilkAvgRecord> key) {
        super(child, key, MILK_AVG);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MILK_AVG_SECONDARY_INDEX);
    }

    @Override
    public UniqueKey<MilkAvgRecord> getPrimaryKey() {
        return Keys.KEY_MILK_AVG_PRIMARY;
    }

    @Override
    public List<UniqueKey<MilkAvgRecord>> getKeys() {
        return Arrays.<UniqueKey<MilkAvgRecord>>asList(Keys.KEY_MILK_AVG_PRIMARY);
    }

    @Override
    public MilkAvg as(String alias) {
        return new MilkAvg(DSL.name(alias), this);
    }

    @Override
    public MilkAvg as(Name alias) {
        return new MilkAvg(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MilkAvg rename(String name) {
        return new MilkAvg(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MilkAvg rename(Name name) {
        return new MilkAvg(name, null);
    }
}
