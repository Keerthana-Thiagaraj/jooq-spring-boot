/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.daos;


import com.jooq.jooq.model.tables.FieldTabMaster;
import com.jooq.jooq.model.tables.records.FieldTabMasterRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class FieldTabMasterDao extends DAOImpl<FieldTabMasterRecord, com.jooq.jooq.model.tables.pojos.FieldTabMaster, Integer> {

    /**
     * Create a new FieldTabMasterDao without any configuration
     */
    public FieldTabMasterDao() {
        super(FieldTabMaster.FIELD_TAB_MASTER, com.jooq.jooq.model.tables.pojos.FieldTabMaster.class);
    }

    /**
     * Create a new FieldTabMasterDao with an attached configuration
     */
    @Autowired
    public FieldTabMasterDao(Configuration configuration) {
        super(FieldTabMaster.FIELD_TAB_MASTER, com.jooq.jooq.model.tables.pojos.FieldTabMaster.class, configuration);
    }

    @Override
    public Integer getId(com.jooq.jooq.model.tables.pojos.FieldTabMaster object) {
        return object.getTabId();
    }

    /**
     * Fetch records that have <code>tab_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.FieldTabMaster> fetchRangeOfTabId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(FieldTabMaster.FIELD_TAB_MASTER.TAB_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tab_id IN (values)</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.FieldTabMaster> fetchByTabId(Integer... values) {
        return fetch(FieldTabMaster.FIELD_TAB_MASTER.TAB_ID, values);
    }

    /**
     * Fetch a unique record that has <code>tab_id = value</code>
     */
    public com.jooq.jooq.model.tables.pojos.FieldTabMaster fetchOneByTabId(Integer value) {
        return fetchOne(FieldTabMaster.FIELD_TAB_MASTER.TAB_ID, value);
    }

    /**
     * Fetch records that have <code>tab_lable BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.FieldTabMaster> fetchRangeOfTabLable(String lowerInclusive, String upperInclusive) {
        return fetchRange(FieldTabMaster.FIELD_TAB_MASTER.TAB_LABLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tab_lable IN (values)</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.FieldTabMaster> fetchByTabLable(String... values) {
        return fetch(FieldTabMaster.FIELD_TAB_MASTER.TAB_LABLE, values);
    }

    /**
     * Fetch records that have <code>tab_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.FieldTabMaster> fetchRangeOfTabName(String lowerInclusive, String upperInclusive) {
        return fetchRange(FieldTabMaster.FIELD_TAB_MASTER.TAB_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tab_name IN (values)</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.FieldTabMaster> fetchByTabName(String... values) {
        return fetch(FieldTabMaster.FIELD_TAB_MASTER.TAB_NAME, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.FieldTabMaster> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(FieldTabMaster.FIELD_TAB_MASTER.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.FieldTabMaster> fetchByStatus(String... values) {
        return fetch(FieldTabMaster.FIELD_TAB_MASTER.STATUS, values);
    }
}
