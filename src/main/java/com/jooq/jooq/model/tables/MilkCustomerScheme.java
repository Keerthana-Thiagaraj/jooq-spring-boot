/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.MilkCustomerSchemeRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MilkCustomerScheme extends TableImpl<MilkCustomerSchemeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.milk_customer_scheme</code>
     */
    public static final MilkCustomerScheme MILK_CUSTOMER_SCHEME = new MilkCustomerScheme();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MilkCustomerSchemeRecord> getRecordType() {
        return MilkCustomerSchemeRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.milk_customer_scheme.CUSTOMER_CODE</code>.
     */
    public final TableField<MilkCustomerSchemeRecord, String> CUSTOMER_CODE = createField(DSL.name("CUSTOMER_CODE"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_customer_scheme.HDC_NAME</code>.
     */
    public final TableField<MilkCustomerSchemeRecord, String> HDC_NAME = createField(DSL.name("HDC_NAME"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_customer_scheme.SLAB1</code>.
     */
    public final TableField<MilkCustomerSchemeRecord, String> SLAB1 = createField(DSL.name("SLAB1"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_customer_scheme.SLAB2</code>.
     */
    public final TableField<MilkCustomerSchemeRecord, String> SLAB2 = createField(DSL.name("SLAB2"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_customer_scheme.SLAB3</code>.
     */
    public final TableField<MilkCustomerSchemeRecord, String> SLAB3 = createField(DSL.name("SLAB3"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_customer_scheme.VALID_FROM_DATE</code>.
     */
    public final TableField<MilkCustomerSchemeRecord, LocalDate> VALID_FROM_DATE = createField(DSL.name("VALID_FROM_DATE"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_customer_scheme.VALID_TO</code>.
     */
    public final TableField<MilkCustomerSchemeRecord, LocalDate> VALID_TO = createField(DSL.name("VALID_TO"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_customer_scheme.SLAB1_COIN</code>.
     */
    public final TableField<MilkCustomerSchemeRecord, String> SLAB1_COIN = createField(DSL.name("SLAB1_COIN"), SQLDataType.VARCHAR(3), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_customer_scheme.SLAB2_COIN</code>.
     */
    public final TableField<MilkCustomerSchemeRecord, String> SLAB2_COIN = createField(DSL.name("SLAB2_COIN"), SQLDataType.VARCHAR(3), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_customer_scheme.SLAB3_COIN</code>.
     */
    public final TableField<MilkCustomerSchemeRecord, String> SLAB3_COIN = createField(DSL.name("SLAB3_COIN"), SQLDataType.VARCHAR(3), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_customer_scheme.UPLOADED_BY</code>.
     */
    public final TableField<MilkCustomerSchemeRecord, String> UPLOADED_BY = createField(DSL.name("UPLOADED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_customer_scheme.UPLOADED_ON</code>.
     */
    public final TableField<MilkCustomerSchemeRecord, LocalDateTime> UPLOADED_ON = createField(DSL.name("UPLOADED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_customer_scheme.STATUS</code>.
     */
    public final TableField<MilkCustomerSchemeRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(1), this, "");

    private MilkCustomerScheme(Name alias, Table<MilkCustomerSchemeRecord> aliased) {
        this(alias, aliased, null);
    }

    private MilkCustomerScheme(Name alias, Table<MilkCustomerSchemeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.milk_customer_scheme</code> table reference
     */
    public MilkCustomerScheme(String alias) {
        this(DSL.name(alias), MILK_CUSTOMER_SCHEME);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.milk_customer_scheme</code> table reference
     */
    public MilkCustomerScheme(Name alias) {
        this(alias, MILK_CUSTOMER_SCHEME);
    }

    /**
     * Create a <code>vendor_portal_pbx.milk_customer_scheme</code> table reference
     */
    public MilkCustomerScheme() {
        this(DSL.name("milk_customer_scheme"), null);
    }

    public <O extends Record> MilkCustomerScheme(Table<O> child, ForeignKey<O, MilkCustomerSchemeRecord> key) {
        super(child, key, MILK_CUSTOMER_SCHEME);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<MilkCustomerSchemeRecord> getPrimaryKey() {
        return Keys.KEY_MILK_CUSTOMER_SCHEME_PRIMARY;
    }

    @Override
    public List<UniqueKey<MilkCustomerSchemeRecord>> getKeys() {
        return Arrays.<UniqueKey<MilkCustomerSchemeRecord>>asList(Keys.KEY_MILK_CUSTOMER_SCHEME_PRIMARY);
    }

    @Override
    public MilkCustomerScheme as(String alias) {
        return new MilkCustomerScheme(DSL.name(alias), this);
    }

    @Override
    public MilkCustomerScheme as(Name alias) {
        return new MilkCustomerScheme(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MilkCustomerScheme rename(String name) {
        return new MilkCustomerScheme(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MilkCustomerScheme rename(Name name) {
        return new MilkCustomerScheme(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<String, String, String, String, String, LocalDate, LocalDate, String, String, String, String, LocalDateTime, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
