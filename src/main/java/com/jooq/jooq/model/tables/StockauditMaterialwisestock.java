/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.StockauditMaterialwisestockRecord;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row15;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StockauditMaterialwisestock extends TableImpl<StockauditMaterialwisestockRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.stockaudit_materialwisestock</code>
     */
    public static final StockauditMaterialwisestock STOCKAUDIT_MATERIALWISESTOCK = new StockauditMaterialwisestock();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StockauditMaterialwisestockRecord> getRecordType() {
        return StockauditMaterialwisestockRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.stockaudit_materialwisestock.COMP_CODE</code>.
     */
    public final TableField<StockauditMaterialwisestockRecord, String> COMP_CODE = createField(DSL.name("COMP_CODE"), SQLDataType.VARCHAR(4).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.stockaudit_materialwisestock.WERKS</code>.
     */
    public final TableField<StockauditMaterialwisestockRecord, String> WERKS = createField(DSL.name("WERKS"), SQLDataType.VARCHAR(4).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.stockaudit_materialwisestock.LGORT</code>.
     */
    public final TableField<StockauditMaterialwisestockRecord, String> LGORT = createField(DSL.name("LGORT"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.stockaudit_materialwisestock.MATNR</code>.
     */
    public final TableField<StockauditMaterialwisestockRecord, String> MATNR = createField(DSL.name("MATNR"), SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.stockaudit_materialwisestock.MATNR_DESC</code>.
     */
    public final TableField<StockauditMaterialwisestockRecord, String> MATNR_DESC = createField(DSL.name("MATNR_DESC"), SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.stockaudit_materialwisestock.MEINS</code>.
     */
    public final TableField<StockauditMaterialwisestockRecord, String> MEINS = createField(DSL.name("MEINS"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.stockaudit_materialwisestock.CLABS</code>.
     */
    public final TableField<StockauditMaterialwisestockRecord, String> CLABS = createField(DSL.name("CLABS"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.stockaudit_materialwisestock.ERSDA</code>.
     */
    public final TableField<StockauditMaterialwisestockRecord, LocalDate> ERSDA = createField(DSL.name("ERSDA"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>vendor_portal_pbx.stockaudit_materialwisestock.VFDAT</code>.
     */
    public final TableField<StockauditMaterialwisestockRecord, LocalDate> VFDAT = createField(DSL.name("VFDAT"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>vendor_portal_pbx.stockaudit_materialwisestock.UNIT_PRICE</code>.
     */
    public final TableField<StockauditMaterialwisestockRecord, BigDecimal> UNIT_PRICE = createField(DSL.name("UNIT_PRICE"), SQLDataType.DECIMAL(10, 2).defaultValue(DSL.inline("0.00", SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>vendor_portal_pbx.stockaudit_materialwisestock.TOTAL_VALUE</code>.
     */
    public final TableField<StockauditMaterialwisestockRecord, BigDecimal> TOTAL_VALUE = createField(DSL.name("TOTAL_VALUE"), SQLDataType.DECIMAL(16, 2).defaultValue(DSL.inline("0.00", SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>vendor_portal_pbx.stockaudit_materialwisestock.VENDOR_CODE</code>.
     */
    public final TableField<StockauditMaterialwisestockRecord, String> VENDOR_CODE = createField(DSL.name("VENDOR_CODE"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>vendor_portal_pbx.stockaudit_materialwisestock.VENDOR_NAME</code>.
     */
    public final TableField<StockauditMaterialwisestockRecord, String> VENDOR_NAME = createField(DSL.name("VENDOR_NAME"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.stockaudit_materialwisestock.CUSTOMER_CODE</code>.
     */
    public final TableField<StockauditMaterialwisestockRecord, String> CUSTOMER_CODE = createField(DSL.name("CUSTOMER_CODE"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>vendor_portal_pbx.stockaudit_materialwisestock.CUSTOMER_NAME</code>.
     */
    public final TableField<StockauditMaterialwisestockRecord, String> CUSTOMER_NAME = createField(DSL.name("CUSTOMER_NAME"), SQLDataType.VARCHAR(45), this, "");

    private StockauditMaterialwisestock(Name alias, Table<StockauditMaterialwisestockRecord> aliased) {
        this(alias, aliased, null);
    }

    private StockauditMaterialwisestock(Name alias, Table<StockauditMaterialwisestockRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.stockaudit_materialwisestock</code> table reference
     */
    public StockauditMaterialwisestock(String alias) {
        this(DSL.name(alias), STOCKAUDIT_MATERIALWISESTOCK);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.stockaudit_materialwisestock</code> table reference
     */
    public StockauditMaterialwisestock(Name alias) {
        this(alias, STOCKAUDIT_MATERIALWISESTOCK);
    }

    /**
     * Create a <code>vendor_portal_pbx.stockaudit_materialwisestock</code> table reference
     */
    public StockauditMaterialwisestock() {
        this(DSL.name("stockaudit_materialwisestock"), null);
    }

    public <O extends Record> StockauditMaterialwisestock(Table<O> child, ForeignKey<O, StockauditMaterialwisestockRecord> key) {
        super(child, key, STOCKAUDIT_MATERIALWISESTOCK);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<StockauditMaterialwisestockRecord> getPrimaryKey() {
        return Keys.KEY_STOCKAUDIT_MATERIALWISESTOCK_PRIMARY;
    }

    @Override
    public List<UniqueKey<StockauditMaterialwisestockRecord>> getKeys() {
        return Arrays.<UniqueKey<StockauditMaterialwisestockRecord>>asList(Keys.KEY_STOCKAUDIT_MATERIALWISESTOCK_PRIMARY);
    }

    @Override
    public StockauditMaterialwisestock as(String alias) {
        return new StockauditMaterialwisestock(DSL.name(alias), this);
    }

    @Override
    public StockauditMaterialwisestock as(Name alias) {
        return new StockauditMaterialwisestock(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StockauditMaterialwisestock rename(String name) {
        return new StockauditMaterialwisestock(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StockauditMaterialwisestock rename(Name name) {
        return new StockauditMaterialwisestock(name, null);
    }

    // -------------------------------------------------------------------------
    // Row15 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row15<String, String, String, String, String, String, String, LocalDate, LocalDate, BigDecimal, BigDecimal, String, String, String, String> fieldsRow() {
        return (Row15) super.fieldsRow();
    }
}
