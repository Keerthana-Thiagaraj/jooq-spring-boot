/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.CcmsMspPoHeaderRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row18;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CcmsMspPoHeader extends TableImpl<CcmsMspPoHeaderRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.ccms_msp_po_header</code>
     */
    public static final CcmsMspPoHeader CCMS_MSP_PO_HEADER = new CcmsMspPoHeader();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CcmsMspPoHeaderRecord> getRecordType() {
        return CcmsMspPoHeaderRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.ccms_msp_po_header.vendor</code>.
     */
    public final TableField<CcmsMspPoHeaderRecord, String> VENDOR = createField(DSL.name("vendor"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_msp_po_header.month</code>.
     */
    public final TableField<CcmsMspPoHeaderRecord, String> MONTH = createField(DSL.name("month"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_msp_po_header.year</code>.
     */
    public final TableField<CcmsMspPoHeaderRecord, String> YEAR = createField(DSL.name("year"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_msp_po_header.category</code>.
     */
    public final TableField<CcmsMspPoHeaderRecord, String> CATEGORY = createField(DSL.name("category"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_msp_po_header.cycle</code>.
     */
    public final TableField<CcmsMspPoHeaderRecord, String> CYCLE = createField(DSL.name("cycle"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_msp_po_header.strg_location</code>.
     */
    public final TableField<CcmsMspPoHeaderRecord, String> STRG_LOCATION = createField(DSL.name("strg_location"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_msp_po_header.po_type</code>.
     */
    public final TableField<CcmsMspPoHeaderRecord, String> PO_TYPE = createField(DSL.name("po_type"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_msp_po_header.create_date</code>.
     */
    public final TableField<CcmsMspPoHeaderRecord, String> CREATE_DATE = createField(DSL.name("create_date"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_msp_po_header.currency</code>.
     */
    public final TableField<CcmsMspPoHeaderRecord, String> CURRENCY = createField(DSL.name("currency"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_msp_po_header.po_number</code>.
     */
    public final TableField<CcmsMspPoHeaderRecord, String> PO_NUMBER = createField(DSL.name("po_number"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_msp_po_header.status</code>.
     */
    public final TableField<CcmsMspPoHeaderRecord, String> STATUS = createField(DSL.name("status"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_msp_po_header.vendor_invoice_pdf</code>.
     */
    public final TableField<CcmsMspPoHeaderRecord, String> VENDOR_INVOICE_PDF = createField(DSL.name("vendor_invoice_pdf"), SQLDataType.VARCHAR(245), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_msp_po_header.created_on</code>.
     */
    public final TableField<CcmsMspPoHeaderRecord, LocalDateTime> CREATED_ON = createField(DSL.name("created_on"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_msp_po_header.created_by</code>.
     */
    public final TableField<CcmsMspPoHeaderRecord, String> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_msp_po_header.last_changed_by</code>.
     */
    public final TableField<CcmsMspPoHeaderRecord, String> LAST_CHANGED_BY = createField(DSL.name("last_changed_by"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_msp_po_header.last_changed_on</code>.
     */
    public final TableField<CcmsMspPoHeaderRecord, LocalDateTime> LAST_CHANGED_ON = createField(DSL.name("last_changed_on"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_msp_po_header.vendor_outlet_status</code>.
     */
    public final TableField<CcmsMspPoHeaderRecord, String> VENDOR_OUTLET_STATUS = createField(DSL.name("vendor_outlet_status"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.ccms_msp_po_header.vendor_count_status</code>.
     */
    public final TableField<CcmsMspPoHeaderRecord, String> VENDOR_COUNT_STATUS = createField(DSL.name("vendor_count_status"), SQLDataType.VARCHAR(45), this, "");

    private CcmsMspPoHeader(Name alias, Table<CcmsMspPoHeaderRecord> aliased) {
        this(alias, aliased, null);
    }

    private CcmsMspPoHeader(Name alias, Table<CcmsMspPoHeaderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.ccms_msp_po_header</code> table reference
     */
    public CcmsMspPoHeader(String alias) {
        this(DSL.name(alias), CCMS_MSP_PO_HEADER);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.ccms_msp_po_header</code> table reference
     */
    public CcmsMspPoHeader(Name alias) {
        this(alias, CCMS_MSP_PO_HEADER);
    }

    /**
     * Create a <code>vendor_portal_pbx.ccms_msp_po_header</code> table reference
     */
    public CcmsMspPoHeader() {
        this(DSL.name("ccms_msp_po_header"), null);
    }

    public <O extends Record> CcmsMspPoHeader(Table<O> child, ForeignKey<O, CcmsMspPoHeaderRecord> key) {
        super(child, key, CCMS_MSP_PO_HEADER);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<CcmsMspPoHeaderRecord> getPrimaryKey() {
        return Keys.KEY_CCMS_MSP_PO_HEADER_PRIMARY;
    }

    @Override
    public List<UniqueKey<CcmsMspPoHeaderRecord>> getKeys() {
        return Arrays.<UniqueKey<CcmsMspPoHeaderRecord>>asList(Keys.KEY_CCMS_MSP_PO_HEADER_PRIMARY);
    }

    @Override
    public CcmsMspPoHeader as(String alias) {
        return new CcmsMspPoHeader(DSL.name(alias), this);
    }

    @Override
    public CcmsMspPoHeader as(Name alias) {
        return new CcmsMspPoHeader(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CcmsMspPoHeader rename(String name) {
        return new CcmsMspPoHeader(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CcmsMspPoHeader rename(Name name) {
        return new CcmsMspPoHeader(name, null);
    }

    // -------------------------------------------------------------------------
    // Row18 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row18<String, String, String, String, String, String, String, String, String, String, String, String, LocalDateTime, String, String, LocalDateTime, String, String> fieldsRow() {
        return (Row18) super.fieldsRow();
    }
}
