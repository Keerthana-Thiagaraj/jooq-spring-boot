/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "customer_master",
    schema = "jooq_demo",
    uniqueConstraints = {
        @UniqueConstraint(name = "KEY_customer_master_PRIMARY", columnNames = { "COMP_CODE", "CUSTOMER_CODE" })
    }
)
public class CustomerMaster implements Serializable {

    private static final long serialVersionUID = 1L;

    private String        compCode;
    private String        customerCode;
    private String        customerAccGrpCode;
    private String        customerGrpCode;
    private String        name;
    private String        name_2;
    private String        city;
    private String        district;
    private String        postalCode;
    private String        regionCode;
    private String        countryCode;
    private String        panNo;
    private String        gstin;
    private String        telephoneNo;
    private String        doorNo;
    private String        streetName_1;
    private String        streetName_3;
    private String        landmark;
    private String        mobileNo_1;
    private String        mobileNo_2;
    private String        email;
    private String        vendorCode;
    private String        status;
    private Integer       createdBy;
    private LocalDateTime createdOn;
    private Integer       lastChangedBy;
    private LocalDateTime lastChangedOn;

    public CustomerMaster() {}

    public CustomerMaster(CustomerMaster value) {
        this.compCode = value.compCode;
        this.customerCode = value.customerCode;
        this.customerAccGrpCode = value.customerAccGrpCode;
        this.customerGrpCode = value.customerGrpCode;
        this.name = value.name;
        this.name_2 = value.name_2;
        this.city = value.city;
        this.district = value.district;
        this.postalCode = value.postalCode;
        this.regionCode = value.regionCode;
        this.countryCode = value.countryCode;
        this.panNo = value.panNo;
        this.gstin = value.gstin;
        this.telephoneNo = value.telephoneNo;
        this.doorNo = value.doorNo;
        this.streetName_1 = value.streetName_1;
        this.streetName_3 = value.streetName_3;
        this.landmark = value.landmark;
        this.mobileNo_1 = value.mobileNo_1;
        this.mobileNo_2 = value.mobileNo_2;
        this.email = value.email;
        this.vendorCode = value.vendorCode;
        this.status = value.status;
        this.createdBy = value.createdBy;
        this.createdOn = value.createdOn;
        this.lastChangedBy = value.lastChangedBy;
        this.lastChangedOn = value.lastChangedOn;
    }

    public CustomerMaster(
        String        compCode,
        String        customerCode,
        String        customerAccGrpCode,
        String        customerGrpCode,
        String        name,
        String        name_2,
        String        city,
        String        district,
        String        postalCode,
        String        regionCode,
        String        countryCode,
        String        panNo,
        String        gstin,
        String        telephoneNo,
        String        doorNo,
        String        streetName_1,
        String        streetName_3,
        String        landmark,
        String        mobileNo_1,
        String        mobileNo_2,
        String        email,
        String        vendorCode,
        String        status,
        Integer       createdBy,
        LocalDateTime createdOn,
        Integer       lastChangedBy,
        LocalDateTime lastChangedOn
    ) {
        this.compCode = compCode;
        this.customerCode = customerCode;
        this.customerAccGrpCode = customerAccGrpCode;
        this.customerGrpCode = customerGrpCode;
        this.name = name;
        this.name_2 = name_2;
        this.city = city;
        this.district = district;
        this.postalCode = postalCode;
        this.regionCode = regionCode;
        this.countryCode = countryCode;
        this.panNo = panNo;
        this.gstin = gstin;
        this.telephoneNo = telephoneNo;
        this.doorNo = doorNo;
        this.streetName_1 = streetName_1;
        this.streetName_3 = streetName_3;
        this.landmark = landmark;
        this.mobileNo_1 = mobileNo_1;
        this.mobileNo_2 = mobileNo_2;
        this.email = email;
        this.vendorCode = vendorCode;
        this.status = status;
        this.createdBy = createdBy;
        this.createdOn = createdOn;
        this.lastChangedBy = lastChangedBy;
        this.lastChangedOn = lastChangedOn;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.COMP_CODE</code>.
     */
    @Column(name = "COMP_CODE", nullable = false, length = 10)
    @NotNull
    @Size(max = 10)
    public String getCompCode() {
        return this.compCode;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.COMP_CODE</code>.
     */
    public CustomerMaster setCompCode(String compCode) {
        this.compCode = compCode;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.CUSTOMER_CODE</code>.
     */
    @Column(name = "CUSTOMER_CODE", nullable = false, length = 20)
    @NotNull
    @Size(max = 20)
    public String getCustomerCode() {
        return this.customerCode;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.CUSTOMER_CODE</code>.
     */
    public CustomerMaster setCustomerCode(String customerCode) {
        this.customerCode = customerCode;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.CUSTOMER_ACC_GRP_CODE</code>.
     */
    @Column(name = "CUSTOMER_ACC_GRP_CODE", nullable = false, length = 4)
    @NotNull
    @Size(max = 4)
    public String getCustomerAccGrpCode() {
        return this.customerAccGrpCode;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.CUSTOMER_ACC_GRP_CODE</code>.
     */
    public CustomerMaster setCustomerAccGrpCode(String customerAccGrpCode) {
        this.customerAccGrpCode = customerAccGrpCode;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.CUSTOMER_GRP_CODE</code>.
     */
    @Column(name = "CUSTOMER_GRP_CODE", nullable = false, length = 2)
    @NotNull
    @Size(max = 2)
    public String getCustomerGrpCode() {
        return this.customerGrpCode;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.CUSTOMER_GRP_CODE</code>.
     */
    public CustomerMaster setCustomerGrpCode(String customerGrpCode) {
        this.customerGrpCode = customerGrpCode;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.NAME</code>.
     */
    @Column(name = "NAME", length = 35)
    @Size(max = 35)
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.NAME</code>.
     */
    public CustomerMaster setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.NAME_2</code>.
     */
    @Column(name = "NAME_2", length = 35)
    @Size(max = 35)
    public String getName_2() {
        return this.name_2;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.NAME_2</code>.
     */
    public CustomerMaster setName_2(String name_2) {
        this.name_2 = name_2;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.CITY</code>.
     */
    @Column(name = "CITY", length = 40)
    @Size(max = 40)
    public String getCity() {
        return this.city;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.CITY</code>.
     */
    public CustomerMaster setCity(String city) {
        this.city = city;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.DISTRICT</code>.
     */
    @Column(name = "DISTRICT", length = 40)
    @Size(max = 40)
    public String getDistrict() {
        return this.district;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.DISTRICT</code>.
     */
    public CustomerMaster setDistrict(String district) {
        this.district = district;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.POSTAL_CODE</code>.
     */
    @Column(name = "POSTAL_CODE", length = 10)
    @Size(max = 10)
    public String getPostalCode() {
        return this.postalCode;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.POSTAL_CODE</code>.
     */
    public CustomerMaster setPostalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.REGION_CODE</code>.
     */
    @Column(name = "REGION_CODE", length = 3)
    @Size(max = 3)
    public String getRegionCode() {
        return this.regionCode;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.REGION_CODE</code>.
     */
    public CustomerMaster setRegionCode(String regionCode) {
        this.regionCode = regionCode;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.COUNTRY_CODE</code>.
     */
    @Column(name = "COUNTRY_CODE", length = 3)
    @Size(max = 3)
    public String getCountryCode() {
        return this.countryCode;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.COUNTRY_CODE</code>.
     */
    public CustomerMaster setCountryCode(String countryCode) {
        this.countryCode = countryCode;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.PAN_NO</code>.
     */
    @Column(name = "PAN_NO", length = 40)
    @Size(max = 40)
    public String getPanNo() {
        return this.panNo;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.PAN_NO</code>.
     */
    public CustomerMaster setPanNo(String panNo) {
        this.panNo = panNo;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.GSTIN</code>.
     */
    @Column(name = "GSTIN", length = 45)
    @Size(max = 45)
    public String getGstin() {
        return this.gstin;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.GSTIN</code>.
     */
    public CustomerMaster setGstin(String gstin) {
        this.gstin = gstin;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.TELEPHONE_NO</code>.
     */
    @Column(name = "TELEPHONE_NO", length = 30)
    @Size(max = 30)
    public String getTelephoneNo() {
        return this.telephoneNo;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.TELEPHONE_NO</code>.
     */
    public CustomerMaster setTelephoneNo(String telephoneNo) {
        this.telephoneNo = telephoneNo;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.DOOR_NO</code>.
     */
    @Column(name = "DOOR_NO", length = 10)
    @Size(max = 10)
    public String getDoorNo() {
        return this.doorNo;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.DOOR_NO</code>.
     */
    public CustomerMaster setDoorNo(String doorNo) {
        this.doorNo = doorNo;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.STREET_NAME_1</code>.
     */
    @Column(name = "STREET_NAME_1", length = 60)
    @Size(max = 60)
    public String getStreetName_1() {
        return this.streetName_1;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.STREET_NAME_1</code>.
     */
    public CustomerMaster setStreetName_1(String streetName_1) {
        this.streetName_1 = streetName_1;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.STREET_NAME_3</code>.
     */
    @Column(name = "STREET_NAME_3", length = 40)
    @Size(max = 40)
    public String getStreetName_3() {
        return this.streetName_3;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.STREET_NAME_3</code>.
     */
    public CustomerMaster setStreetName_3(String streetName_3) {
        this.streetName_3 = streetName_3;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.LANDMARK</code>.
     */
    @Column(name = "LANDMARK", length = 40)
    @Size(max = 40)
    public String getLandmark() {
        return this.landmark;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.LANDMARK</code>.
     */
    public CustomerMaster setLandmark(String landmark) {
        this.landmark = landmark;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.MOBILE_NO_1</code>.
     */
    @Column(name = "MOBILE_NO_1", length = 15)
    @Size(max = 15)
    public String getMobileNo_1() {
        return this.mobileNo_1;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.MOBILE_NO_1</code>.
     */
    public CustomerMaster setMobileNo_1(String mobileNo_1) {
        this.mobileNo_1 = mobileNo_1;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.MOBILE_NO_2</code>.
     */
    @Column(name = "MOBILE_NO_2", length = 15)
    @Size(max = 15)
    public String getMobileNo_2() {
        return this.mobileNo_2;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.MOBILE_NO_2</code>.
     */
    public CustomerMaster setMobileNo_2(String mobileNo_2) {
        this.mobileNo_2 = mobileNo_2;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.EMAIL</code>.
     */
    @Column(name = "EMAIL", length = 250)
    @Size(max = 250)
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.EMAIL</code>.
     */
    public CustomerMaster setEmail(String email) {
        this.email = email;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.VENDOR_CODE</code>.
     */
    @Column(name = "VENDOR_CODE", length = 10)
    @Size(max = 10)
    public String getVendorCode() {
        return this.vendorCode;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.VENDOR_CODE</code>.
     */
    public CustomerMaster setVendorCode(String vendorCode) {
        this.vendorCode = vendorCode;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.STATUS</code>.
     */
    @Column(name = "STATUS", length = 1)
    @Size(max = 1)
    public String getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.STATUS</code>.
     */
    public CustomerMaster setStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.CREATED_BY</code>.
     */
    @Column(name = "CREATED_BY", precision = 10)
    public Integer getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.CREATED_BY</code>.
     */
    public CustomerMaster setCreatedBy(Integer createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.CREATED_ON</code>.
     */
    @Column(name = "CREATED_ON")
    public LocalDateTime getCreatedOn() {
        return this.createdOn;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.CREATED_ON</code>.
     */
    public CustomerMaster setCreatedOn(LocalDateTime createdOn) {
        this.createdOn = createdOn;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.LAST_CHANGED_BY</code>.
     */
    @Column(name = "LAST_CHANGED_BY", precision = 10)
    public Integer getLastChangedBy() {
        return this.lastChangedBy;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.LAST_CHANGED_BY</code>.
     */
    public CustomerMaster setLastChangedBy(Integer lastChangedBy) {
        this.lastChangedBy = lastChangedBy;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.customer_master.LAST_CHANGED_ON</code>.
     */
    @Column(name = "LAST_CHANGED_ON")
    public LocalDateTime getLastChangedOn() {
        return this.lastChangedOn;
    }

    /**
     * Setter for <code>jooq_demo.customer_master.LAST_CHANGED_ON</code>.
     */
    public CustomerMaster setLastChangedOn(LocalDateTime lastChangedOn) {
        this.lastChangedOn = lastChangedOn;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final CustomerMaster other = (CustomerMaster) obj;
        if (compCode == null) {
            if (other.compCode != null)
                return false;
        }
        else if (!compCode.equals(other.compCode))
            return false;
        if (customerCode == null) {
            if (other.customerCode != null)
                return false;
        }
        else if (!customerCode.equals(other.customerCode))
            return false;
        if (customerAccGrpCode == null) {
            if (other.customerAccGrpCode != null)
                return false;
        }
        else if (!customerAccGrpCode.equals(other.customerAccGrpCode))
            return false;
        if (customerGrpCode == null) {
            if (other.customerGrpCode != null)
                return false;
        }
        else if (!customerGrpCode.equals(other.customerGrpCode))
            return false;
        if (name == null) {
            if (other.name != null)
                return false;
        }
        else if (!name.equals(other.name))
            return false;
        if (name_2 == null) {
            if (other.name_2 != null)
                return false;
        }
        else if (!name_2.equals(other.name_2))
            return false;
        if (city == null) {
            if (other.city != null)
                return false;
        }
        else if (!city.equals(other.city))
            return false;
        if (district == null) {
            if (other.district != null)
                return false;
        }
        else if (!district.equals(other.district))
            return false;
        if (postalCode == null) {
            if (other.postalCode != null)
                return false;
        }
        else if (!postalCode.equals(other.postalCode))
            return false;
        if (regionCode == null) {
            if (other.regionCode != null)
                return false;
        }
        else if (!regionCode.equals(other.regionCode))
            return false;
        if (countryCode == null) {
            if (other.countryCode != null)
                return false;
        }
        else if (!countryCode.equals(other.countryCode))
            return false;
        if (panNo == null) {
            if (other.panNo != null)
                return false;
        }
        else if (!panNo.equals(other.panNo))
            return false;
        if (gstin == null) {
            if (other.gstin != null)
                return false;
        }
        else if (!gstin.equals(other.gstin))
            return false;
        if (telephoneNo == null) {
            if (other.telephoneNo != null)
                return false;
        }
        else if (!telephoneNo.equals(other.telephoneNo))
            return false;
        if (doorNo == null) {
            if (other.doorNo != null)
                return false;
        }
        else if (!doorNo.equals(other.doorNo))
            return false;
        if (streetName_1 == null) {
            if (other.streetName_1 != null)
                return false;
        }
        else if (!streetName_1.equals(other.streetName_1))
            return false;
        if (streetName_3 == null) {
            if (other.streetName_3 != null)
                return false;
        }
        else if (!streetName_3.equals(other.streetName_3))
            return false;
        if (landmark == null) {
            if (other.landmark != null)
                return false;
        }
        else if (!landmark.equals(other.landmark))
            return false;
        if (mobileNo_1 == null) {
            if (other.mobileNo_1 != null)
                return false;
        }
        else if (!mobileNo_1.equals(other.mobileNo_1))
            return false;
        if (mobileNo_2 == null) {
            if (other.mobileNo_2 != null)
                return false;
        }
        else if (!mobileNo_2.equals(other.mobileNo_2))
            return false;
        if (email == null) {
            if (other.email != null)
                return false;
        }
        else if (!email.equals(other.email))
            return false;
        if (vendorCode == null) {
            if (other.vendorCode != null)
                return false;
        }
        else if (!vendorCode.equals(other.vendorCode))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (createdOn == null) {
            if (other.createdOn != null)
                return false;
        }
        else if (!createdOn.equals(other.createdOn))
            return false;
        if (lastChangedBy == null) {
            if (other.lastChangedBy != null)
                return false;
        }
        else if (!lastChangedBy.equals(other.lastChangedBy))
            return false;
        if (lastChangedOn == null) {
            if (other.lastChangedOn != null)
                return false;
        }
        else if (!lastChangedOn.equals(other.lastChangedOn))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.compCode == null) ? 0 : this.compCode.hashCode());
        result = prime * result + ((this.customerCode == null) ? 0 : this.customerCode.hashCode());
        result = prime * result + ((this.customerAccGrpCode == null) ? 0 : this.customerAccGrpCode.hashCode());
        result = prime * result + ((this.customerGrpCode == null) ? 0 : this.customerGrpCode.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.name_2 == null) ? 0 : this.name_2.hashCode());
        result = prime * result + ((this.city == null) ? 0 : this.city.hashCode());
        result = prime * result + ((this.district == null) ? 0 : this.district.hashCode());
        result = prime * result + ((this.postalCode == null) ? 0 : this.postalCode.hashCode());
        result = prime * result + ((this.regionCode == null) ? 0 : this.regionCode.hashCode());
        result = prime * result + ((this.countryCode == null) ? 0 : this.countryCode.hashCode());
        result = prime * result + ((this.panNo == null) ? 0 : this.panNo.hashCode());
        result = prime * result + ((this.gstin == null) ? 0 : this.gstin.hashCode());
        result = prime * result + ((this.telephoneNo == null) ? 0 : this.telephoneNo.hashCode());
        result = prime * result + ((this.doorNo == null) ? 0 : this.doorNo.hashCode());
        result = prime * result + ((this.streetName_1 == null) ? 0 : this.streetName_1.hashCode());
        result = prime * result + ((this.streetName_3 == null) ? 0 : this.streetName_3.hashCode());
        result = prime * result + ((this.landmark == null) ? 0 : this.landmark.hashCode());
        result = prime * result + ((this.mobileNo_1 == null) ? 0 : this.mobileNo_1.hashCode());
        result = prime * result + ((this.mobileNo_2 == null) ? 0 : this.mobileNo_2.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.vendorCode == null) ? 0 : this.vendorCode.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.createdOn == null) ? 0 : this.createdOn.hashCode());
        result = prime * result + ((this.lastChangedBy == null) ? 0 : this.lastChangedBy.hashCode());
        result = prime * result + ((this.lastChangedOn == null) ? 0 : this.lastChangedOn.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CustomerMaster (");

        sb.append(compCode);
        sb.append(", ").append(customerCode);
        sb.append(", ").append(customerAccGrpCode);
        sb.append(", ").append(customerGrpCode);
        sb.append(", ").append(name);
        sb.append(", ").append(name_2);
        sb.append(", ").append(city);
        sb.append(", ").append(district);
        sb.append(", ").append(postalCode);
        sb.append(", ").append(regionCode);
        sb.append(", ").append(countryCode);
        sb.append(", ").append(panNo);
        sb.append(", ").append(gstin);
        sb.append(", ").append(telephoneNo);
        sb.append(", ").append(doorNo);
        sb.append(", ").append(streetName_1);
        sb.append(", ").append(streetName_3);
        sb.append(", ").append(landmark);
        sb.append(", ").append(mobileNo_1);
        sb.append(", ").append(mobileNo_2);
        sb.append(", ").append(email);
        sb.append(", ").append(vendorCode);
        sb.append(", ").append(status);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(lastChangedBy);
        sb.append(", ").append(lastChangedOn);

        sb.append(")");
        return sb.toString();
    }
}
