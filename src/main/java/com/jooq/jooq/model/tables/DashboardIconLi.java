/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.DashboardIconLiRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DashboardIconLi extends TableImpl<DashboardIconLiRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.dashboard_icon_li</code>
     */
    public static final DashboardIconLi DASHBOARD_ICON_LI = new DashboardIconLi();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DashboardIconLiRecord> getRecordType() {
        return DashboardIconLiRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.dashboard_icon_li.NO</code>.
     */
    public final TableField<DashboardIconLiRecord, String> NO = createField(DSL.name("NO"), SQLDataType.VARCHAR(3).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.dashboard_icon_li.ROLE_ID</code>.
     */
    public final TableField<DashboardIconLiRecord, String> ROLE_ID = createField(DSL.name("ROLE_ID"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.dashboard_icon_li.MENU_NAME</code>.
     */
    public final TableField<DashboardIconLiRecord, String> MENU_NAME = createField(DSL.name("MENU_NAME"), SQLDataType.VARCHAR(150), this, "");

    /**
     * The column <code>vendor_portal_pbx.dashboard_icon_li.RETURN_MENU_NAME</code>.
     */
    public final TableField<DashboardIconLiRecord, String> RETURN_MENU_NAME = createField(DSL.name("RETURN_MENU_NAME"), SQLDataType.VARCHAR(150), this, "");

    /**
     * The column <code>vendor_portal_pbx.dashboard_icon_li.STATUS</code>.
     */
    public final TableField<DashboardIconLiRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(1), this, "");

    private DashboardIconLi(Name alias, Table<DashboardIconLiRecord> aliased) {
        this(alias, aliased, null);
    }

    private DashboardIconLi(Name alias, Table<DashboardIconLiRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.dashboard_icon_li</code> table reference
     */
    public DashboardIconLi(String alias) {
        this(DSL.name(alias), DASHBOARD_ICON_LI);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.dashboard_icon_li</code> table reference
     */
    public DashboardIconLi(Name alias) {
        this(alias, DASHBOARD_ICON_LI);
    }

    /**
     * Create a <code>vendor_portal_pbx.dashboard_icon_li</code> table reference
     */
    public DashboardIconLi() {
        this(DSL.name("dashboard_icon_li"), null);
    }

    public <O extends Record> DashboardIconLi(Table<O> child, ForeignKey<O, DashboardIconLiRecord> key) {
        super(child, key, DASHBOARD_ICON_LI);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<DashboardIconLiRecord> getPrimaryKey() {
        return Keys.KEY_DASHBOARD_ICON_LI_PRIMARY;
    }

    @Override
    public List<UniqueKey<DashboardIconLiRecord>> getKeys() {
        return Arrays.<UniqueKey<DashboardIconLiRecord>>asList(Keys.KEY_DASHBOARD_ICON_LI_PRIMARY);
    }

    @Override
    public DashboardIconLi as(String alias) {
        return new DashboardIconLi(DSL.name(alias), this);
    }

    @Override
    public DashboardIconLi as(Name alias) {
        return new DashboardIconLi(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DashboardIconLi rename(String name) {
        return new DashboardIconLi(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DashboardIconLi rename(Name name) {
        return new DashboardIconLi(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
