/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Indexes;
import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.MilkSpoilageRecord;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MilkSpoilage extends TableImpl<MilkSpoilageRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.milk_spoilage</code>
     */
    public static final MilkSpoilage MILK_SPOILAGE = new MilkSpoilage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MilkSpoilageRecord> getRecordType() {
        return MilkSpoilageRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.milk_spoilage.CRDAT</code>.
     */
    public final TableField<MilkSpoilageRecord, String> CRDAT = createField(DSL.name("CRDAT"), SQLDataType.VARCHAR(12).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_spoilage.SHIFT</code>.
     */
    public final TableField<MilkSpoilageRecord, String> SHIFT = createField(DSL.name("SHIFT"), SQLDataType.VARCHAR(1).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_spoilage.MILK_CATEGORY</code>.
     */
    public final TableField<MilkSpoilageRecord, String> MILK_CATEGORY = createField(DSL.name("MILK_CATEGORY"), SQLDataType.VARCHAR(1).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_spoilage.WERKS</code>.
     */
    public final TableField<MilkSpoilageRecord, String> WERKS = createField(DSL.name("WERKS"), SQLDataType.VARCHAR(5).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_spoilage.SOCIETY</code>.
     */
    public final TableField<MilkSpoilageRecord, String> SOCIETY = createField(DSL.name("SOCIETY"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_spoilage.ERFMG</code>.
     */
    public final TableField<MilkSpoilageRecord, String> ERFMG = createField(DSL.name("ERFMG"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_spoilage.FIRST_MILK_DATE</code>.
     */
    public final TableField<MilkSpoilageRecord, String> FIRST_MILK_DATE = createField(DSL.name("FIRST_MILK_DATE"), SQLDataType.VARCHAR(12), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_spoilage.REMARKS1</code>.
     */
    public final TableField<MilkSpoilageRecord, String> REMARKS1 = createField(DSL.name("REMARKS1"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_spoilage.REMARKS2</code>.
     */
    public final TableField<MilkSpoilageRecord, String> REMARKS2 = createField(DSL.name("REMARKS2"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_spoilage.BY_INCHARGE</code>.
     */
    public final TableField<MilkSpoilageRecord, String> BY_INCHARGE = createField(DSL.name("BY_INCHARGE"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_spoilage.BY_FIELDSTAFF</code>.
     */
    public final TableField<MilkSpoilageRecord, String> BY_FIELDSTAFF = createField(DSL.name("BY_FIELDSTAFF"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_spoilage.INCHARGE_UPDATED_DATE</code>.
     */
    public final TableField<MilkSpoilageRecord, LocalDate> INCHARGE_UPDATED_DATE = createField(DSL.name("INCHARGE_UPDATED_DATE"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>vendor_portal_pbx.milk_spoilage.FIELDSTAFF_UPDATED_DATE</code>.
     */
    public final TableField<MilkSpoilageRecord, LocalDate> FIELDSTAFF_UPDATED_DATE = createField(DSL.name("FIELDSTAFF_UPDATED_DATE"), SQLDataType.LOCALDATE, this, "");

    private MilkSpoilage(Name alias, Table<MilkSpoilageRecord> aliased) {
        this(alias, aliased, null);
    }

    private MilkSpoilage(Name alias, Table<MilkSpoilageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.milk_spoilage</code> table reference
     */
    public MilkSpoilage(String alias) {
        this(DSL.name(alias), MILK_SPOILAGE);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.milk_spoilage</code> table reference
     */
    public MilkSpoilage(Name alias) {
        this(alias, MILK_SPOILAGE);
    }

    /**
     * Create a <code>vendor_portal_pbx.milk_spoilage</code> table reference
     */
    public MilkSpoilage() {
        this(DSL.name("milk_spoilage"), null);
    }

    public <O extends Record> MilkSpoilage(Table<O> child, ForeignKey<O, MilkSpoilageRecord> key) {
        super(child, key, MILK_SPOILAGE);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MILK_SPOILAGE_FK_MILK_CATEGORY_IDX);
    }

    @Override
    public UniqueKey<MilkSpoilageRecord> getPrimaryKey() {
        return Keys.KEY_MILK_SPOILAGE_PRIMARY;
    }

    @Override
    public List<UniqueKey<MilkSpoilageRecord>> getKeys() {
        return Arrays.<UniqueKey<MilkSpoilageRecord>>asList(Keys.KEY_MILK_SPOILAGE_PRIMARY);
    }

    @Override
    public List<ForeignKey<MilkSpoilageRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MilkSpoilageRecord, ?>>asList(Keys.FK_MILK_CATEGORY);
    }

    private transient MilkSpoilageCategory _milkSpoilageCategory;

    public MilkSpoilageCategory milkSpoilageCategory() {
        if (_milkSpoilageCategory == null)
            _milkSpoilageCategory = new MilkSpoilageCategory(this, Keys.FK_MILK_CATEGORY);

        return _milkSpoilageCategory;
    }

    @Override
    public MilkSpoilage as(String alias) {
        return new MilkSpoilage(DSL.name(alias), this);
    }

    @Override
    public MilkSpoilage as(Name alias) {
        return new MilkSpoilage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MilkSpoilage rename(String name) {
        return new MilkSpoilage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MilkSpoilage rename(Name name) {
        return new MilkSpoilage(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<String, String, String, String, String, String, String, String, String, String, String, LocalDate, LocalDate> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
