/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.FreezerGateentryDetailsRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FreezerGateentryDetails extends TableImpl<FreezerGateentryDetailsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.freezer_gateentry_details</code>
     */
    public static final FreezerGateentryDetails FREEZER_GATEENTRY_DETAILS = new FreezerGateentryDetails();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FreezerGateentryDetailsRecord> getRecordType() {
        return FreezerGateentryDetailsRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.freezer_gateentry_details.CFA</code>.
     */
    public final TableField<FreezerGateentryDetailsRecord, String> CFA = createField(DSL.name("CFA"), SQLDataType.VARCHAR(5).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.freezer_gateentry_details.CUSTOMER_CODE</code>.
     */
    public final TableField<FreezerGateentryDetailsRecord, String> CUSTOMER_CODE = createField(DSL.name("CUSTOMER_CODE"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.freezer_gateentry_details.GATE_ENTRY_NO</code>.
     */
    public final TableField<FreezerGateentryDetailsRecord, String> GATE_ENTRY_NO = createField(DSL.name("GATE_ENTRY_NO"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.freezer_gateentry_details.POSTING_DATE</code>.
     */
    public final TableField<FreezerGateentryDetailsRecord, LocalDate> POSTING_DATE = createField(DSL.name("POSTING_DATE"), SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.freezer_gateentry_details.DESCRIPTION</code>.
     */
    public final TableField<FreezerGateentryDetailsRecord, String> DESCRIPTION = createField(DSL.name("DESCRIPTION"), SQLDataType.VARCHAR(150).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.freezer_gateentry_details.DIVISION</code>.
     */
    public final TableField<FreezerGateentryDetailsRecord, String> DIVISION = createField(DSL.name("DIVISION"), SQLDataType.VARCHAR(15), this, "");

    /**
     * The column <code>vendor_portal_pbx.freezer_gateentry_details.QTY</code>.
     */
    public final TableField<FreezerGateentryDetailsRecord, Double> QTY = createField(DSL.name("QTY"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>vendor_portal_pbx.freezer_gateentry_details.CREATED_BY</code>.
     */
    public final TableField<FreezerGateentryDetailsRecord, String> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.freezer_gateentry_details.CREATED_ON</code>.
     */
    public final TableField<FreezerGateentryDetailsRecord, LocalDateTime> CREATED_ON = createField(DSL.name("CREATED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.freezer_gateentry_details.CHANGED_BY</code>.
     */
    public final TableField<FreezerGateentryDetailsRecord, String> CHANGED_BY = createField(DSL.name("CHANGED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.freezer_gateentry_details.CHANGED_ON</code>.
     */
    public final TableField<FreezerGateentryDetailsRecord, LocalDateTime> CHANGED_ON = createField(DSL.name("CHANGED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    private FreezerGateentryDetails(Name alias, Table<FreezerGateentryDetailsRecord> aliased) {
        this(alias, aliased, null);
    }

    private FreezerGateentryDetails(Name alias, Table<FreezerGateentryDetailsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.freezer_gateentry_details</code> table reference
     */
    public FreezerGateentryDetails(String alias) {
        this(DSL.name(alias), FREEZER_GATEENTRY_DETAILS);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.freezer_gateentry_details</code> table reference
     */
    public FreezerGateentryDetails(Name alias) {
        this(alias, FREEZER_GATEENTRY_DETAILS);
    }

    /**
     * Create a <code>vendor_portal_pbx.freezer_gateentry_details</code> table reference
     */
    public FreezerGateentryDetails() {
        this(DSL.name("freezer_gateentry_details"), null);
    }

    public <O extends Record> FreezerGateentryDetails(Table<O> child, ForeignKey<O, FreezerGateentryDetailsRecord> key) {
        super(child, key, FREEZER_GATEENTRY_DETAILS);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<FreezerGateentryDetailsRecord> getPrimaryKey() {
        return Keys.KEY_FREEZER_GATEENTRY_DETAILS_PRIMARY;
    }

    @Override
    public List<UniqueKey<FreezerGateentryDetailsRecord>> getKeys() {
        return Arrays.<UniqueKey<FreezerGateentryDetailsRecord>>asList(Keys.KEY_FREEZER_GATEENTRY_DETAILS_PRIMARY);
    }

    @Override
    public FreezerGateentryDetails as(String alias) {
        return new FreezerGateentryDetails(DSL.name(alias), this);
    }

    @Override
    public FreezerGateentryDetails as(Name alias) {
        return new FreezerGateentryDetails(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FreezerGateentryDetails rename(String name) {
        return new FreezerGateentryDetails(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FreezerGateentryDetails rename(Name name) {
        return new FreezerGateentryDetails(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<String, String, String, LocalDate, String, String, Double, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
