/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.records;


import com.jooq.jooq.model.tables.FreezerOverallCount;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FreezerOverallCountRecord extends UpdatableRecordImpl<FreezerOverallCountRecord> implements Record6<String, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>vendor_portal_pbx.freezer_overall_count.RSM_ID</code>.
     */
    public FreezerOverallCountRecord setRsmId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_overall_count.RSM_ID</code>.
     */
    public String getRsmId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_overall_count.RSM_NAME</code>.
     */
    public FreezerOverallCountRecord setRsmName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_overall_count.RSM_NAME</code>.
     */
    public String getRsmName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_overall_count.OVERALL_FREEZER</code>.
     */
    public FreezerOverallCountRecord setOverallFreezer(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_overall_count.OVERALL_FREEZER</code>.
     */
    public String getOverallFreezer() {
        return (String) get(2);
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_overall_count.UPLOADED FREEZER</code>.
     */
    public FreezerOverallCountRecord setUploadedFreezer(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_overall_count.UPLOADED FREEZER</code>.
     */
    public String getUploadedFreezer() {
        return (String) get(3);
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_overall_count.PERCENTAGE</code>.
     */
    public FreezerOverallCountRecord setPercentage(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_overall_count.PERCENTAGE</code>.
     */
    public String getPercentage() {
        return (String) get(4);
    }

    /**
     * Setter for <code>vendor_portal_pbx.freezer_overall_count.STATUS</code>.
     */
    public FreezerOverallCountRecord setStatus(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.freezer_overall_count.STATUS</code>.
     */
    public String getStatus() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, String, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, String, String, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return FreezerOverallCount.FREEZER_OVERALL_COUNT.RSM_ID;
    }

    @Override
    public Field<String> field2() {
        return FreezerOverallCount.FREEZER_OVERALL_COUNT.RSM_NAME;
    }

    @Override
    public Field<String> field3() {
        return FreezerOverallCount.FREEZER_OVERALL_COUNT.OVERALL_FREEZER;
    }

    @Override
    public Field<String> field4() {
        return FreezerOverallCount.FREEZER_OVERALL_COUNT.UPLOADED_FREEZER;
    }

    @Override
    public Field<String> field5() {
        return FreezerOverallCount.FREEZER_OVERALL_COUNT.PERCENTAGE;
    }

    @Override
    public Field<String> field6() {
        return FreezerOverallCount.FREEZER_OVERALL_COUNT.STATUS;
    }

    @Override
    public String component1() {
        return getRsmId();
    }

    @Override
    public String component2() {
        return getRsmName();
    }

    @Override
    public String component3() {
        return getOverallFreezer();
    }

    @Override
    public String component4() {
        return getUploadedFreezer();
    }

    @Override
    public String component5() {
        return getPercentage();
    }

    @Override
    public String component6() {
        return getStatus();
    }

    @Override
    public String value1() {
        return getRsmId();
    }

    @Override
    public String value2() {
        return getRsmName();
    }

    @Override
    public String value3() {
        return getOverallFreezer();
    }

    @Override
    public String value4() {
        return getUploadedFreezer();
    }

    @Override
    public String value5() {
        return getPercentage();
    }

    @Override
    public String value6() {
        return getStatus();
    }

    @Override
    public FreezerOverallCountRecord value1(String value) {
        setRsmId(value);
        return this;
    }

    @Override
    public FreezerOverallCountRecord value2(String value) {
        setRsmName(value);
        return this;
    }

    @Override
    public FreezerOverallCountRecord value3(String value) {
        setOverallFreezer(value);
        return this;
    }

    @Override
    public FreezerOverallCountRecord value4(String value) {
        setUploadedFreezer(value);
        return this;
    }

    @Override
    public FreezerOverallCountRecord value5(String value) {
        setPercentage(value);
        return this;
    }

    @Override
    public FreezerOverallCountRecord value6(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public FreezerOverallCountRecord values(String value1, String value2, String value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FreezerOverallCountRecord
     */
    public FreezerOverallCountRecord() {
        super(FreezerOverallCount.FREEZER_OVERALL_COUNT);
    }

    /**
     * Create a detached, initialised FreezerOverallCountRecord
     */
    public FreezerOverallCountRecord(String rsmId, String rsmName, String overallFreezer, String uploadedFreezer, String percentage, String status) {
        super(FreezerOverallCount.FREEZER_OVERALL_COUNT);

        setRsmId(rsmId);
        setRsmName(rsmName);
        setOverallFreezer(overallFreezer);
        setUploadedFreezer(uploadedFreezer);
        setPercentage(percentage);
        setStatus(status);
    }
}
