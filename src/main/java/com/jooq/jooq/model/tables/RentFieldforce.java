/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.RentFieldforceRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RentFieldforce extends TableImpl<RentFieldforceRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.rent_fieldforce</code>
     */
    public static final RentFieldforce RENT_FIELDFORCE = new RentFieldforce();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RentFieldforceRecord> getRecordType() {
        return RentFieldforceRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.rent_fieldforce.COMP_CODE</code>.
     */
    public final TableField<RentFieldforceRecord, String> COMP_CODE = createField(DSL.name("COMP_CODE"), SQLDataType.VARCHAR(4).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.rent_fieldforce.VENDOR_CODE</code>.
     */
    public final TableField<RentFieldforceRecord, String> VENDOR_CODE = createField(DSL.name("VENDOR_CODE"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.rent_fieldforce.VENDOR_NAME</code>.
     */
    public final TableField<RentFieldforceRecord, String> VENDOR_NAME = createField(DSL.name("VENDOR_NAME"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>vendor_portal_pbx.rent_fieldforce.CUSTOMER_CODE</code>.
     */
    public final TableField<RentFieldforceRecord, String> CUSTOMER_CODE = createField(DSL.name("CUSTOMER_CODE"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>vendor_portal_pbx.rent_fieldforce.CUSTOMER_NAME</code>.
     */
    public final TableField<RentFieldforceRecord, String> CUSTOMER_NAME = createField(DSL.name("CUSTOMER_NAME"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>vendor_portal_pbx.rent_fieldforce.LEASE_FIELD_NAME</code>.
     */
    public final TableField<RentFieldforceRecord, String> LEASE_FIELD_NAME = createField(DSL.name("LEASE_FIELD_NAME"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>vendor_portal_pbx.rent_fieldforce.LEASE_FIELD_MOBILE</code>.
     */
    public final TableField<RentFieldforceRecord, String> LEASE_FIELD_MOBILE = createField(DSL.name("LEASE_FIELD_MOBILE"), SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>vendor_portal_pbx.rent_fieldforce.LEASE_FIELD_MAIL</code>.
     */
    public final TableField<RentFieldforceRecord, String> LEASE_FIELD_MAIL = createField(DSL.name("LEASE_FIELD_MAIL"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>vendor_portal_pbx.rent_fieldforce.LEASE_HEAD_NAME</code>.
     */
    public final TableField<RentFieldforceRecord, String> LEASE_HEAD_NAME = createField(DSL.name("LEASE_HEAD_NAME"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>vendor_portal_pbx.rent_fieldforce.LEASE_HEAD_MOBILE</code>.
     */
    public final TableField<RentFieldforceRecord, String> LEASE_HEAD_MOBILE = createField(DSL.name("LEASE_HEAD_MOBILE"), SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>vendor_portal_pbx.rent_fieldforce.LEASE_HEAD_MAIL</code>.
     */
    public final TableField<RentFieldforceRecord, String> LEASE_HEAD_MAIL = createField(DSL.name("LEASE_HEAD_MAIL"), SQLDataType.VARCHAR(255), this, "");

    private RentFieldforce(Name alias, Table<RentFieldforceRecord> aliased) {
        this(alias, aliased, null);
    }

    private RentFieldforce(Name alias, Table<RentFieldforceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.rent_fieldforce</code> table reference
     */
    public RentFieldforce(String alias) {
        this(DSL.name(alias), RENT_FIELDFORCE);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.rent_fieldforce</code> table reference
     */
    public RentFieldforce(Name alias) {
        this(alias, RENT_FIELDFORCE);
    }

    /**
     * Create a <code>vendor_portal_pbx.rent_fieldforce</code> table reference
     */
    public RentFieldforce() {
        this(DSL.name("rent_fieldforce"), null);
    }

    public <O extends Record> RentFieldforce(Table<O> child, ForeignKey<O, RentFieldforceRecord> key) {
        super(child, key, RENT_FIELDFORCE);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<RentFieldforceRecord> getPrimaryKey() {
        return Keys.KEY_RENT_FIELDFORCE_PRIMARY;
    }

    @Override
    public List<UniqueKey<RentFieldforceRecord>> getKeys() {
        return Arrays.<UniqueKey<RentFieldforceRecord>>asList(Keys.KEY_RENT_FIELDFORCE_PRIMARY);
    }

    @Override
    public RentFieldforce as(String alias) {
        return new RentFieldforce(DSL.name(alias), this);
    }

    @Override
    public RentFieldforce as(Name alias) {
        return new RentFieldforce(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RentFieldforce rename(String name) {
        return new RentFieldforce(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RentFieldforce rename(Name name) {
        return new RentFieldforce(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<String, String, String, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
