/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.FeedCfaReasonRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FeedCfaReason extends TableImpl<FeedCfaReasonRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.feed_cfa_reason</code>
     */
    public static final FeedCfaReason FEED_CFA_REASON = new FeedCfaReason();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FeedCfaReasonRecord> getRecordType() {
        return FeedCfaReasonRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.feed_cfa_reason.id</code>.
     */
    public final TableField<FeedCfaReasonRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>vendor_portal_pbx.feed_cfa_reason.reason</code>.
     */
    public final TableField<FeedCfaReasonRecord, String> REASON = createField(DSL.name("reason"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.feed_cfa_reason.status</code>.
     */
    public final TableField<FeedCfaReasonRecord, String> STATUS = createField(DSL.name("status"), SQLDataType.VARCHAR(45), this, "");

    private FeedCfaReason(Name alias, Table<FeedCfaReasonRecord> aliased) {
        this(alias, aliased, null);
    }

    private FeedCfaReason(Name alias, Table<FeedCfaReasonRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.feed_cfa_reason</code> table reference
     */
    public FeedCfaReason(String alias) {
        this(DSL.name(alias), FEED_CFA_REASON);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.feed_cfa_reason</code> table reference
     */
    public FeedCfaReason(Name alias) {
        this(alias, FEED_CFA_REASON);
    }

    /**
     * Create a <code>vendor_portal_pbx.feed_cfa_reason</code> table reference
     */
    public FeedCfaReason() {
        this(DSL.name("feed_cfa_reason"), null);
    }

    public <O extends Record> FeedCfaReason(Table<O> child, ForeignKey<O, FeedCfaReasonRecord> key) {
        super(child, key, FEED_CFA_REASON);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public Identity<FeedCfaReasonRecord, Integer> getIdentity() {
        return (Identity<FeedCfaReasonRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<FeedCfaReasonRecord> getPrimaryKey() {
        return Keys.KEY_FEED_CFA_REASON_PRIMARY;
    }

    @Override
    public List<UniqueKey<FeedCfaReasonRecord>> getKeys() {
        return Arrays.<UniqueKey<FeedCfaReasonRecord>>asList(Keys.KEY_FEED_CFA_REASON_PRIMARY);
    }

    @Override
    public FeedCfaReason as(String alias) {
        return new FeedCfaReason(DSL.name(alias), this);
    }

    @Override
    public FeedCfaReason as(Name alias) {
        return new FeedCfaReason(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FeedCfaReason rename(String name) {
        return new FeedCfaReason(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FeedCfaReason rename(Name name) {
        return new FeedCfaReason(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
