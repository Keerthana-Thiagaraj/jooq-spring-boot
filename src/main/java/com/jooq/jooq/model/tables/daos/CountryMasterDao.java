/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.daos;


import com.jooq.jooq.model.tables.CountryMaster;
import com.jooq.jooq.model.tables.records.CountryMasterRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class CountryMasterDao extends DAOImpl<CountryMasterRecord, com.jooq.jooq.model.tables.pojos.CountryMaster, Integer> {

    /**
     * Create a new CountryMasterDao without any configuration
     */
    public CountryMasterDao() {
        super(CountryMaster.COUNTRY_MASTER, com.jooq.jooq.model.tables.pojos.CountryMaster.class);
    }

    /**
     * Create a new CountryMasterDao with an attached configuration
     */
    @Autowired
    public CountryMasterDao(Configuration configuration) {
        super(CountryMaster.COUNTRY_MASTER, com.jooq.jooq.model.tables.pojos.CountryMaster.class, configuration);
    }

    @Override
    public Integer getId(com.jooq.jooq.model.tables.pojos.CountryMaster object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.CountryMaster> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(CountryMaster.COUNTRY_MASTER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.CountryMaster> fetchById(Integer... values) {
        return fetch(CountryMaster.COUNTRY_MASTER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public com.jooq.jooq.model.tables.pojos.CountryMaster fetchOneById(Integer value) {
        return fetchOne(CountryMaster.COUNTRY_MASTER.ID, value);
    }

    /**
     * Fetch records that have <code>SORT_NAME BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.CountryMaster> fetchRangeOfSortName(String lowerInclusive, String upperInclusive) {
        return fetchRange(CountryMaster.COUNTRY_MASTER.SORT_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>SORT_NAME IN (values)</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.CountryMaster> fetchBySortName(String... values) {
        return fetch(CountryMaster.COUNTRY_MASTER.SORT_NAME, values);
    }

    /**
     * Fetch records that have <code>NAME BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.CountryMaster> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(CountryMaster.COUNTRY_MASTER.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.CountryMaster> fetchByName(String... values) {
        return fetch(CountryMaster.COUNTRY_MASTER.NAME, values);
    }

    /**
     * Fetch records that have <code>PHONE_CODE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.CountryMaster> fetchRangeOfPhoneCode(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(CountryMaster.COUNTRY_MASTER.PHONE_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PHONE_CODE IN (values)</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.CountryMaster> fetchByPhoneCode(Integer... values) {
        return fetch(CountryMaster.COUNTRY_MASTER.PHONE_CODE, values);
    }

    /**
     * Fetch records that have <code>STATUS BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.CountryMaster> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(CountryMaster.COUNTRY_MASTER.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>STATUS IN (values)</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.CountryMaster> fetchByStatus(String... values) {
        return fetch(CountryMaster.COUNTRY_MASTER.STATUS, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.CountryMaster> fetchRangeOfCreatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(CountryMaster.COUNTRY_MASTER.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.CountryMaster> fetchByCreatedBy(String... values) {
        return fetch(CountryMaster.COUNTRY_MASTER.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>CREATED_ON BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.CountryMaster> fetchRangeOfCreatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(CountryMaster.COUNTRY_MASTER.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED_ON IN (values)</code>
     */
    public List<com.jooq.jooq.model.tables.pojos.CountryMaster> fetchByCreatedOn(LocalDateTime... values) {
        return fetch(CountryMaster.COUNTRY_MASTER.CREATED_ON, values);
    }
}
