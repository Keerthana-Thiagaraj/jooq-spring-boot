/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.records;


import com.jooq.jooq.model.tables.FarmerTemp;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FarmerTempRecord extends UpdatableRecordImpl<FarmerTempRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>vendor_portal_pbx.farmer_temp.FARMER</code>.
     */
    public FarmerTempRecord setFarmer(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.farmer_temp.FARMER</code>.
     */
    public String getFarmer() {
        return (String) get(0);
    }

    /**
     * Setter for <code>vendor_portal_pbx.farmer_temp.MOBILE</code>.
     */
    public FarmerTempRecord setMobile(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.farmer_temp.MOBILE</code>.
     */
    public String getMobile() {
        return (String) get(1);
    }

    /**
     * Setter for <code>vendor_portal_pbx.farmer_temp.PLANT</code>.
     */
    public FarmerTempRecord setPlant(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.farmer_temp.PLANT</code>.
     */
    public String getPlant() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return FarmerTemp.FARMER_TEMP.FARMER;
    }

    @Override
    public Field<String> field2() {
        return FarmerTemp.FARMER_TEMP.MOBILE;
    }

    @Override
    public Field<String> field3() {
        return FarmerTemp.FARMER_TEMP.PLANT;
    }

    @Override
    public String component1() {
        return getFarmer();
    }

    @Override
    public String component2() {
        return getMobile();
    }

    @Override
    public String component3() {
        return getPlant();
    }

    @Override
    public String value1() {
        return getFarmer();
    }

    @Override
    public String value2() {
        return getMobile();
    }

    @Override
    public String value3() {
        return getPlant();
    }

    @Override
    public FarmerTempRecord value1(String value) {
        setFarmer(value);
        return this;
    }

    @Override
    public FarmerTempRecord value2(String value) {
        setMobile(value);
        return this;
    }

    @Override
    public FarmerTempRecord value3(String value) {
        setPlant(value);
        return this;
    }

    @Override
    public FarmerTempRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FarmerTempRecord
     */
    public FarmerTempRecord() {
        super(FarmerTemp.FARMER_TEMP);
    }

    /**
     * Create a detached, initialised FarmerTempRecord
     */
    public FarmerTempRecord(String farmer, String mobile, String plant) {
        super(FarmerTemp.FARMER_TEMP);

        setFarmer(farmer);
        setMobile(mobile);
        setPlant(plant);
    }
}
