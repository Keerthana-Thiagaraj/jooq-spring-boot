/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.LandLordMasterRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LandLordMaster extends TableImpl<LandLordMasterRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.Land_Lord_Master</code>
     */
    public static final LandLordMaster LAND_LORD_MASTER = new LandLordMaster();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LandLordMasterRecord> getRecordType() {
        return LandLordMasterRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.Land_Lord_Master.S_NO</code>.
     */
    public final TableField<LandLordMasterRecord, Integer> S_NO = createField(DSL.name("S_NO"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>vendor_portal_pbx.Land_Lord_Master.LAND_LORD_V_Code</code>.
     */
    public final TableField<LandLordMasterRecord, Integer> LAND_LORD_V_CODE = createField(DSL.name("LAND_LORD_V_Code"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>vendor_portal_pbx.Land_Lord_Master.LAND_LORD_NAME</code>.
     */
    public final TableField<LandLordMasterRecord, String> LAND_LORD_NAME = createField(DSL.name("LAND_LORD_NAME"), SQLDataType.VARCHAR(35), this, "");

    /**
     * The column <code>vendor_portal_pbx.Land_Lord_Master.SAP_Code</code>.
     */
    public final TableField<LandLordMasterRecord, Integer> SAP_CODE = createField(DSL.name("SAP_Code"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>vendor_portal_pbx.Land_Lord_Master.Distributor_Name</code>.
     */
    public final TableField<LandLordMasterRecord, String> DISTRIBUTOR_NAME = createField(DSL.name("Distributor_Name"), SQLDataType.VARCHAR(67), this, "");

    /**
     * The column <code>vendor_portal_pbx.Land_Lord_Master.Usage_Type_Description</code>.
     */
    public final TableField<LandLordMasterRecord, String> USAGE_TYPE_DESCRIPTION = createField(DSL.name("Usage_Type_Description"), SQLDataType.VARCHAR(30), this, "");

    private LandLordMaster(Name alias, Table<LandLordMasterRecord> aliased) {
        this(alias, aliased, null);
    }

    private LandLordMaster(Name alias, Table<LandLordMasterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.Land_Lord_Master</code> table reference
     */
    public LandLordMaster(String alias) {
        this(DSL.name(alias), LAND_LORD_MASTER);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.Land_Lord_Master</code> table reference
     */
    public LandLordMaster(Name alias) {
        this(alias, LAND_LORD_MASTER);
    }

    /**
     * Create a <code>vendor_portal_pbx.Land_Lord_Master</code> table reference
     */
    public LandLordMaster() {
        this(DSL.name("Land_Lord_Master"), null);
    }

    public <O extends Record> LandLordMaster(Table<O> child, ForeignKey<O, LandLordMasterRecord> key) {
        super(child, key, LAND_LORD_MASTER);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public LandLordMaster as(String alias) {
        return new LandLordMaster(DSL.name(alias), this);
    }

    @Override
    public LandLordMaster as(Name alias) {
        return new LandLordMaster(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LandLordMaster rename(String name) {
        return new LandLordMaster(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LandLordMaster rename(Name name) {
        return new LandLordMaster(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, String, Integer, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
