/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CircularLanguage implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String  langName;

    public CircularLanguage() {}

    public CircularLanguage(CircularLanguage value) {
        this.id = value.id;
        this.langName = value.langName;
    }

    public CircularLanguage(
        Integer id,
        String  langName
    ) {
        this.id = id;
        this.langName = langName;
    }

    /**
     * Getter for <code>vendor_portal_pbx.circular_language.ID</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>vendor_portal_pbx.circular_language.ID</code>.
     */
    public CircularLanguage setId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.circular_language.LANG_NAME</code>.
     */
    public String getLangName() {
        return this.langName;
    }

    /**
     * Setter for <code>vendor_portal_pbx.circular_language.LANG_NAME</code>.
     */
    public CircularLanguage setLangName(String langName) {
        this.langName = langName;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final CircularLanguage other = (CircularLanguage) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (langName == null) {
            if (other.langName != null)
                return false;
        }
        else if (!langName.equals(other.langName))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.langName == null) ? 0 : this.langName.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CircularLanguage (");

        sb.append(id);
        sb.append(", ").append(langName);

        sb.append(")");
        return sb.toString();
    }
}
