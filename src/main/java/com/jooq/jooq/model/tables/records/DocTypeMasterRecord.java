/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.records;


import com.jooq.jooq.model.tables.DocTypeMaster;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DocTypeMasterRecord extends UpdatableRecordImpl<DocTypeMasterRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>vendor_portal_pbx.doc_type_master.DOC_TYPE</code>.
     */
    public DocTypeMasterRecord setDocType(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.doc_type_master.DOC_TYPE</code>.
     */
    public String getDocType() {
        return (String) get(0);
    }

    /**
     * Setter for <code>vendor_portal_pbx.doc_type_master.DOC_TYPE_DESC</code>.
     */
    public DocTypeMasterRecord setDocTypeDesc(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.doc_type_master.DOC_TYPE_DESC</code>.
     */
    public String getDocTypeDesc() {
        return (String) get(1);
    }

    /**
     * Setter for <code>vendor_portal_pbx.doc_type_master.STATUS</code>.
     */
    public DocTypeMasterRecord setStatus(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>vendor_portal_pbx.doc_type_master.STATUS</code>.
     */
    public String getStatus() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return DocTypeMaster.DOC_TYPE_MASTER.DOC_TYPE;
    }

    @Override
    public Field<String> field2() {
        return DocTypeMaster.DOC_TYPE_MASTER.DOC_TYPE_DESC;
    }

    @Override
    public Field<String> field3() {
        return DocTypeMaster.DOC_TYPE_MASTER.STATUS;
    }

    @Override
    public String component1() {
        return getDocType();
    }

    @Override
    public String component2() {
        return getDocTypeDesc();
    }

    @Override
    public String component3() {
        return getStatus();
    }

    @Override
    public String value1() {
        return getDocType();
    }

    @Override
    public String value2() {
        return getDocTypeDesc();
    }

    @Override
    public String value3() {
        return getStatus();
    }

    @Override
    public DocTypeMasterRecord value1(String value) {
        setDocType(value);
        return this;
    }

    @Override
    public DocTypeMasterRecord value2(String value) {
        setDocTypeDesc(value);
        return this;
    }

    @Override
    public DocTypeMasterRecord value3(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public DocTypeMasterRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DocTypeMasterRecord
     */
    public DocTypeMasterRecord() {
        super(DocTypeMaster.DOC_TYPE_MASTER);
    }

    /**
     * Create a detached, initialised DocTypeMasterRecord
     */
    public DocTypeMasterRecord(String docType, String docTypeDesc, String status) {
        super(DocTypeMaster.DOC_TYPE_MASTER);

        setDocType(docType);
        setDocTypeDesc(docTypeDesc);
        setStatus(status);
    }
}
