/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.TcRoomTypeMasterRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TcRoomTypeMaster extends TableImpl<TcRoomTypeMasterRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.TC_ROOM_TYPE_MASTER</code>
     */
    public static final TcRoomTypeMaster TC_ROOM_TYPE_MASTER = new TcRoomTypeMaster();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TcRoomTypeMasterRecord> getRecordType() {
        return TcRoomTypeMasterRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.TC_ROOM_TYPE_MASTER.ROOM_TYPE_CODE</code>.
     */
    public final TableField<TcRoomTypeMasterRecord, Integer> ROOM_TYPE_CODE = createField(DSL.name("ROOM_TYPE_CODE"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_ROOM_TYPE_MASTER.ROOM_TYPE_NAME</code>.
     */
    public final TableField<TcRoomTypeMasterRecord, String> ROOM_TYPE_NAME = createField(DSL.name("ROOM_TYPE_NAME"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_ROOM_TYPE_MASTER.FROM_DATE</code>.
     */
    public final TableField<TcRoomTypeMasterRecord, LocalDate> FROM_DATE = createField(DSL.name("FROM_DATE"), SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_ROOM_TYPE_MASTER.TO_DATE</code>.
     */
    public final TableField<TcRoomTypeMasterRecord, LocalDate> TO_DATE = createField(DSL.name("TO_DATE"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_ROOM_TYPE_MASTER.STATUS</code>.
     */
    public final TableField<TcRoomTypeMasterRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_ROOM_TYPE_MASTER.CREATED_BY</code>.
     */
    public final TableField<TcRoomTypeMasterRecord, String> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_ROOM_TYPE_MASTER.CREATED_ON</code>.
     */
    public final TableField<TcRoomTypeMasterRecord, LocalDateTime> CREATED_ON = createField(DSL.name("CREATED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_ROOM_TYPE_MASTER.LAST_CHANGED_BY</code>.
     */
    public final TableField<TcRoomTypeMasterRecord, String> LAST_CHANGED_BY = createField(DSL.name("LAST_CHANGED_BY"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>vendor_portal_pbx.TC_ROOM_TYPE_MASTER.LAST_CHANGED_ON</code>.
     */
    public final TableField<TcRoomTypeMasterRecord, LocalDateTime> LAST_CHANGED_ON = createField(DSL.name("LAST_CHANGED_ON"), SQLDataType.LOCALDATETIME(0), this, "");

    private TcRoomTypeMaster(Name alias, Table<TcRoomTypeMasterRecord> aliased) {
        this(alias, aliased, null);
    }

    private TcRoomTypeMaster(Name alias, Table<TcRoomTypeMasterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.TC_ROOM_TYPE_MASTER</code> table reference
     */
    public TcRoomTypeMaster(String alias) {
        this(DSL.name(alias), TC_ROOM_TYPE_MASTER);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.TC_ROOM_TYPE_MASTER</code> table reference
     */
    public TcRoomTypeMaster(Name alias) {
        this(alias, TC_ROOM_TYPE_MASTER);
    }

    /**
     * Create a <code>vendor_portal_pbx.TC_ROOM_TYPE_MASTER</code> table reference
     */
    public TcRoomTypeMaster() {
        this(DSL.name("TC_ROOM_TYPE_MASTER"), null);
    }

    public <O extends Record> TcRoomTypeMaster(Table<O> child, ForeignKey<O, TcRoomTypeMasterRecord> key) {
        super(child, key, TC_ROOM_TYPE_MASTER);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public Identity<TcRoomTypeMasterRecord, Integer> getIdentity() {
        return (Identity<TcRoomTypeMasterRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<TcRoomTypeMasterRecord> getPrimaryKey() {
        return Keys.KEY_TC_ROOM_TYPE_MASTER_PRIMARY;
    }

    @Override
    public List<UniqueKey<TcRoomTypeMasterRecord>> getKeys() {
        return Arrays.<UniqueKey<TcRoomTypeMasterRecord>>asList(Keys.KEY_TC_ROOM_TYPE_MASTER_PRIMARY);
    }

    @Override
    public TcRoomTypeMaster as(String alias) {
        return new TcRoomTypeMaster(DSL.name(alias), this);
    }

    @Override
    public TcRoomTypeMaster as(Name alias) {
        return new TcRoomTypeMaster(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TcRoomTypeMaster rename(String name) {
        return new TcRoomTypeMaster(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TcRoomTypeMaster rename(Name name) {
        return new TcRoomTypeMaster(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, String, LocalDate, LocalDate, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
