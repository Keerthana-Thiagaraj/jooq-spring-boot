/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "user_master",
    schema = "jooq_demo",
    uniqueConstraints = {
        @UniqueConstraint(name = "KEY_user_master_PRIMARY", columnNames = { "USER_ID" })
    }
)
public class UserMaster implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer       userId;
    private String        createdBy;
    private String        status;
    private String        name;
    private LocalDateTime createdOn;
    private String        mobile;
    private String        emailId;

    public UserMaster() {}

    public UserMaster(UserMaster value) {
        this.userId = value.userId;
        this.createdBy = value.createdBy;
        this.status = value.status;
        this.name = value.name;
        this.createdOn = value.createdOn;
        this.mobile = value.mobile;
        this.emailId = value.emailId;
    }

    public UserMaster(
        Integer       userId,
        String        createdBy,
        String        status,
        String        name,
        LocalDateTime createdOn,
        String        mobile,
        String        emailId
    ) {
        this.userId = userId;
        this.createdBy = createdBy;
        this.status = status;
        this.name = name;
        this.createdOn = createdOn;
        this.mobile = mobile;
        this.emailId = emailId;
    }

    /**
     * Getter for <code>jooq_demo.user_master.USER_ID</code>.
     */
    @Id
    @Column(name = "USER_ID", nullable = false, precision = 10)
    @NotNull
    public Integer getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>jooq_demo.user_master.USER_ID</code>.
     */
    public UserMaster setUserId(Integer userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.user_master.CREATED_BY</code>.
     */
    @Column(name = "CREATED_BY", length = 45)
    @Size(max = 45)
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>jooq_demo.user_master.CREATED_BY</code>.
     */
    public UserMaster setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.user_master.STATUS</code>.
     */
    @Column(name = "STATUS", length = 45)
    @Size(max = 45)
    public String getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>jooq_demo.user_master.STATUS</code>.
     */
    public UserMaster setStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.user_master.NAME</code>.
     */
    @Column(name = "NAME", length = 45)
    @Size(max = 45)
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>jooq_demo.user_master.NAME</code>.
     */
    public UserMaster setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.user_master.CREATED_ON</code>.
     */
    @Column(name = "CREATED_ON")
    public LocalDateTime getCreatedOn() {
        return this.createdOn;
    }

    /**
     * Setter for <code>jooq_demo.user_master.CREATED_ON</code>.
     */
    public UserMaster setCreatedOn(LocalDateTime createdOn) {
        this.createdOn = createdOn;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.user_master.MOBILE</code>.
     */
    @Column(name = "MOBILE", length = 10)
    @Size(max = 10)
    public String getMobile() {
        return this.mobile;
    }

    /**
     * Setter for <code>jooq_demo.user_master.MOBILE</code>.
     */
    public UserMaster setMobile(String mobile) {
        this.mobile = mobile;
        return this;
    }

    /**
     * Getter for <code>jooq_demo.user_master.EMAIL_ID</code>.
     */
    @Column(name = "EMAIL_ID", length = 80)
    @Size(max = 80)
    public String getEmailId() {
        return this.emailId;
    }

    /**
     * Setter for <code>jooq_demo.user_master.EMAIL_ID</code>.
     */
    public UserMaster setEmailId(String emailId) {
        this.emailId = emailId;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final UserMaster other = (UserMaster) obj;
        if (userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!userId.equals(other.userId))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        if (name == null) {
            if (other.name != null)
                return false;
        }
        else if (!name.equals(other.name))
            return false;
        if (createdOn == null) {
            if (other.createdOn != null)
                return false;
        }
        else if (!createdOn.equals(other.createdOn))
            return false;
        if (mobile == null) {
            if (other.mobile != null)
                return false;
        }
        else if (!mobile.equals(other.mobile))
            return false;
        if (emailId == null) {
            if (other.emailId != null)
                return false;
        }
        else if (!emailId.equals(other.emailId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.createdOn == null) ? 0 : this.createdOn.hashCode());
        result = prime * result + ((this.mobile == null) ? 0 : this.mobile.hashCode());
        result = prime * result + ((this.emailId == null) ? 0 : this.emailId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UserMaster (");

        sb.append(userId);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(status);
        sb.append(", ").append(name);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(mobile);
        sb.append(", ").append(emailId);

        sb.append(")");
        return sb.toString();
    }
}
