/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model.tables;


import com.jooq.jooq.model.Keys;
import com.jooq.jooq.model.VendorPortalPbx;
import com.jooq.jooq.model.tables.records.ContractLandlordRecord;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContractLandlord extends TableImpl<ContractLandlordRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>vendor_portal_pbx.contract_landlord</code>
     */
    public static final ContractLandlord CONTRACT_LANDLORD = new ContractLandlord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ContractLandlordRecord> getRecordType() {
        return ContractLandlordRecord.class;
    }

    /**
     * The column <code>vendor_portal_pbx.contract_landlord.COMPANY_CODE</code>.
     */
    public final TableField<ContractLandlordRecord, String> COMPANY_CODE = createField(DSL.name("COMPANY_CODE"), SQLDataType.VARCHAR(4).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.contract_landlord.VENDOR_CODE</code>.
     */
    public final TableField<ContractLandlordRecord, String> VENDOR_CODE = createField(DSL.name("VENDOR_CODE"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.contract_landlord.CONTRACT</code>.
     */
    public final TableField<ContractLandlordRecord, String> CONTRACT = createField(DSL.name("CONTRACT"), SQLDataType.VARCHAR(13).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.contract_landlord.OBJECT</code>.
     */
    public final TableField<ContractLandlordRecord, String> OBJECT = createField(DSL.name("OBJECT"), SQLDataType.VARCHAR(8).nullable(false), this, "");

    /**
     * The column <code>vendor_portal_pbx.contract_landlord.OBJECT_TYPE</code>.
     */
    public final TableField<ContractLandlordRecord, String> OBJECT_TYPE = createField(DSL.name("OBJECT_TYPE"), SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>vendor_portal_pbx.contract_landlord.OBJECT_FROM</code>.
     */
    public final TableField<ContractLandlordRecord, LocalDate> OBJECT_FROM = createField(DSL.name("OBJECT_FROM"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>vendor_portal_pbx.contract_landlord.OBJECT_TO</code>.
     */
    public final TableField<ContractLandlordRecord, LocalDate> OBJECT_TO = createField(DSL.name("OBJECT_TO"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>vendor_portal_pbx.contract_landlord.CREATED_ON</code>.
     */
    public final TableField<ContractLandlordRecord, LocalDate> CREATED_ON = createField(DSL.name("CREATED_ON"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>vendor_portal_pbx.contract_landlord.CREATED_BY</code>.
     */
    public final TableField<ContractLandlordRecord, String> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.VARCHAR(45), this, "");

    private ContractLandlord(Name alias, Table<ContractLandlordRecord> aliased) {
        this(alias, aliased, null);
    }

    private ContractLandlord(Name alias, Table<ContractLandlordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.contract_landlord</code> table reference
     */
    public ContractLandlord(String alias) {
        this(DSL.name(alias), CONTRACT_LANDLORD);
    }

    /**
     * Create an aliased <code>vendor_portal_pbx.contract_landlord</code> table reference
     */
    public ContractLandlord(Name alias) {
        this(alias, CONTRACT_LANDLORD);
    }

    /**
     * Create a <code>vendor_portal_pbx.contract_landlord</code> table reference
     */
    public ContractLandlord() {
        this(DSL.name("contract_landlord"), null);
    }

    public <O extends Record> ContractLandlord(Table<O> child, ForeignKey<O, ContractLandlordRecord> key) {
        super(child, key, CONTRACT_LANDLORD);
    }

    @Override
    public Schema getSchema() {
        return VendorPortalPbx.VENDOR_PORTAL_PBX;
    }

    @Override
    public UniqueKey<ContractLandlordRecord> getPrimaryKey() {
        return Keys.KEY_CONTRACT_LANDLORD_PRIMARY;
    }

    @Override
    public List<UniqueKey<ContractLandlordRecord>> getKeys() {
        return Arrays.<UniqueKey<ContractLandlordRecord>>asList(Keys.KEY_CONTRACT_LANDLORD_PRIMARY);
    }

    @Override
    public ContractLandlord as(String alias) {
        return new ContractLandlord(DSL.name(alias), this);
    }

    @Override
    public ContractLandlord as(Name alias) {
        return new ContractLandlord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ContractLandlord rename(String name) {
        return new ContractLandlord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ContractLandlord rename(Name name) {
        return new ContractLandlord(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, String, String, String, String, LocalDate, LocalDate, LocalDate, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
