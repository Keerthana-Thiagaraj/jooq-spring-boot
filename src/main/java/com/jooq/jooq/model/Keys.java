/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.model;


import com.jooq.jooq.model.tables.AgreementHa;
import com.jooq.jooq.model.tables.AgreementLi;
import com.jooq.jooq.model.tables.AnswerMaster;
import com.jooq.jooq.model.tables.ApReport;
import com.jooq.jooq.model.tables.ApiTimeMaster;
import com.jooq.jooq.model.tables.ArReport;
import com.jooq.jooq.model.tables.ArrearMaster;
import com.jooq.jooq.model.tables.AssetTrackerMaster;
import com.jooq.jooq.model.tables.BillTypeMaster;
import com.jooq.jooq.model.tables.BotTag;
import com.jooq.jooq.model.tables.BpCustomer;
import com.jooq.jooq.model.tables.BulkPaymentLi;
import com.jooq.jooq.model.tables.BulkPaymentLiArch;
import com.jooq.jooq.model.tables.BumperScheme;
import com.jooq.jooq.model.tables.BumperSchemeFile;
import com.jooq.jooq.model.tables.CcComplaintType;
import com.jooq.jooq.model.tables.CcDivision;
import com.jooq.jooq.model.tables.CcHmbCompare;
import com.jooq.jooq.model.tables.CcMailContent;
import com.jooq.jooq.model.tables.CcMailCustomerHierarchy;
import com.jooq.jooq.model.tables.CcTicketsHa;
import com.jooq.jooq.model.tables.CcUserType;
import com.jooq.jooq.model.tables.CcmsAllowanceHistory;
import com.jooq.jooq.model.tables.CcmsAllowanceHistoryVendor;
import com.jooq.jooq.model.tables.CcmsAllowanceMaster;
import com.jooq.jooq.model.tables.CcmsAllowanceMasterMapping;
import com.jooq.jooq.model.tables.CcmsAppType;
import com.jooq.jooq.model.tables.CcmsAppVersion;
import com.jooq.jooq.model.tables.CcmsBonusMaster;
import com.jooq.jooq.model.tables.CcmsCanteenCleaningCharge;
import com.jooq.jooq.model.tables.CcmsCanteenEntry;
import com.jooq.jooq.model.tables.CcmsCanteenItemTypeMaster;
import com.jooq.jooq.model.tables.CcmsCanteenMaterialMaster;
import com.jooq.jooq.model.tables.CcmsCanteenPoHeader;
import com.jooq.jooq.model.tables.CcmsCanteenPoItem;
import com.jooq.jooq.model.tables.CcmsCanteenRateMaster;
import com.jooq.jooq.model.tables.CcmsCanteenSpecialEntry;
import com.jooq.jooq.model.tables.CcmsCanteenVendorPlantMapping;
import com.jooq.jooq.model.tables.CcmsCardHistory;
import com.jooq.jooq.model.tables.CcmsCardMaster;
import com.jooq.jooq.model.tables.CcmsCardNumrange;
import com.jooq.jooq.model.tables.CcmsCcMaster;
import com.jooq.jooq.model.tables.CcmsClSupervisor;
import com.jooq.jooq.model.tables.CcmsContractorPfMaster;
import com.jooq.jooq.model.tables.CcmsDepartmentMaster;
import com.jooq.jooq.model.tables.CcmsEmpSalaryDeduction;
import com.jooq.jooq.model.tables.CcmsEmpSecQstnAns;
import com.jooq.jooq.model.tables.CcmsEmployee;
import com.jooq.jooq.model.tables.CcmsEmployeeDesignationMapping;
import com.jooq.jooq.model.tables.CcmsEmployeeType;
import com.jooq.jooq.model.tables.CcmsEsiExcludedPlant;
import com.jooq.jooq.model.tables.CcmsFreeMealMapping;
import com.jooq.jooq.model.tables.CcmsGateEntry;
import com.jooq.jooq.model.tables.CcmsGstMaster;
import com.jooq.jooq.model.tables.CcmsGuestData;
import com.jooq.jooq.model.tables.CcmsGuestDetails;
import com.jooq.jooq.model.tables.CcmsGuestDetailsNew;
import com.jooq.jooq.model.tables.CcmsHapGateEntry;
import com.jooq.jooq.model.tables.CcmsHolidaysList;
import com.jooq.jooq.model.tables.CcmsLabourCategoryMaster;
import com.jooq.jooq.model.tables.CcmsLabourShiftMaster;
import com.jooq.jooq.model.tables.CcmsLwfMaster;
import com.jooq.jooq.model.tables.CcmsMaterialMaster;
import com.jooq.jooq.model.tables.CcmsMealDeductionHistory;
import com.jooq.jooq.model.tables.CcmsMotherTongue;
import com.jooq.jooq.model.tables.CcmsMspCategoryList;
import com.jooq.jooq.model.tables.CcmsMspCustomerDetails;
import com.jooq.jooq.model.tables.CcmsMspOutletEntry;
import com.jooq.jooq.model.tables.CcmsMspPoHeader;
import com.jooq.jooq.model.tables.CcmsMspPoItem;
import com.jooq.jooq.model.tables.CcmsMspRateMaster;
import com.jooq.jooq.model.tables.CcmsMspVendorCustomerMapping;
import com.jooq.jooq.model.tables.CcmsMspVendorInvoiceDetails;
import com.jooq.jooq.model.tables.CcmsOclActivityMaster;
import com.jooq.jooq.model.tables.CcmsOclPlantSqftArea;
import com.jooq.jooq.model.tables.CcmsOclUom;
import com.jooq.jooq.model.tables.CcmsOclVendorRateMaster;
import com.jooq.jooq.model.tables.CcmsOtHours;
import com.jooq.jooq.model.tables.CcmsPlantAdminHrMapping;
import com.jooq.jooq.model.tables.CcmsPoHeader;
import com.jooq.jooq.model.tables.CcmsPoItem;
import com.jooq.jooq.model.tables.CcmsSalaryDeductionMaster;
import com.jooq.jooq.model.tables.CcmsSalaryHistory;
import com.jooq.jooq.model.tables.CcmsSalaryHoldDetails;
import com.jooq.jooq.model.tables.CcmsSalaryMonthly;
import com.jooq.jooq.model.tables.CcmsSalaryMonthlyNew;
import com.jooq.jooq.model.tables.CcmsSapLogon;
import com.jooq.jooq.model.tables.CcmsSecurityQuestions;
import com.jooq.jooq.model.tables.CcmsSecurityTypeMaster;
import com.jooq.jooq.model.tables.CcmsSecurityWagesMaster;
import com.jooq.jooq.model.tables.CcmsServiceChargeMaster;
import com.jooq.jooq.model.tables.CcmsShiftMaster;
import com.jooq.jooq.model.tables.CcmsStatePlantMapping;
import com.jooq.jooq.model.tables.CcmsStatusMaster;
import com.jooq.jooq.model.tables.CcmsStorageLocationMaster;
import com.jooq.jooq.model.tables.CcmsTabInfo;
import com.jooq.jooq.model.tables.CcmsTabUserMaster;
import com.jooq.jooq.model.tables.CcmsUserSapMapping;
import com.jooq.jooq.model.tables.CcmsVaccine;
import com.jooq.jooq.model.tables.CcmsVendorCode;
import com.jooq.jooq.model.tables.CcmsVendorInvoiceDetails;
import com.jooq.jooq.model.tables.CcmsVendorNumRange;
import com.jooq.jooq.model.tables.CcmsVendorPlantMapping;
import com.jooq.jooq.model.tables.CcmsWeekoffMaster;
import com.jooq.jooq.model.tables.CcmsWorkLocationMaster;
import com.jooq.jooq.model.tables.CcmsWorkingHours;
import com.jooq.jooq.model.tables.CertificateTypeMaster;
import com.jooq.jooq.model.tables.CfaFreezerFile;
import com.jooq.jooq.model.tables.CfaSlabDetails;
import com.jooq.jooq.model.tables.CfaSlabMaster;
import com.jooq.jooq.model.tables.CircularBusinessType;
import com.jooq.jooq.model.tables.CircularDisplayDetails;
import com.jooq.jooq.model.tables.CircularLanguage;
import com.jooq.jooq.model.tables.CircularType;
import com.jooq.jooq.model.tables.CircularUpload;
import com.jooq.jooq.model.tables.CompanyMaster;
import com.jooq.jooq.model.tables.ContractAgreement;
import com.jooq.jooq.model.tables.ContractCustomer;
import com.jooq.jooq.model.tables.ContractHike;
import com.jooq.jooq.model.tables.ContractLandlord;
import com.jooq.jooq.model.tables.ContractPeriod;
import com.jooq.jooq.model.tables.CountryMaster;
import com.jooq.jooq.model.tables.CrateBalance;
import com.jooq.jooq.model.tables.CratesMonthlyBalance;
import com.jooq.jooq.model.tables.CustomerAccountGroup;
import com.jooq.jooq.model.tables.CustomerAsset;
import com.jooq.jooq.model.tables.CustomerBankDetails;
import com.jooq.jooq.model.tables.CustomerBill;
import com.jooq.jooq.model.tables.CustomerBillAttachment;
import com.jooq.jooq.model.tables.CustomerCertificateAttachment;
import com.jooq.jooq.model.tables.CustomerEbClaim;
import com.jooq.jooq.model.tables.CustomerFreezer;
import com.jooq.jooq.model.tables.CustomerFreezerAttachment;
import com.jooq.jooq.model.tables.CustomerFreezerAttachmentNew;
import com.jooq.jooq.model.tables.CustomerFreezerAttachmentOld;
import com.jooq.jooq.model.tables.CustomerFreezerRelease;
import com.jooq.jooq.model.tables.CustomerFreezerTag;
import com.jooq.jooq.model.tables.CustomerGroup;
import com.jooq.jooq.model.tables.CustomerHmbo;
import com.jooq.jooq.model.tables.CustomerKyc;
import com.jooq.jooq.model.tables.CustomerKycAttachment;
import com.jooq.jooq.model.tables.CustomerKycDetails;
import com.jooq.jooq.model.tables.CustomerKycTypeMaster;
import com.jooq.jooq.model.tables.CustomerMaster;
import com.jooq.jooq.model.tables.CustomerMilkAvg;
import com.jooq.jooq.model.tables.CustomerReceipt;
import com.jooq.jooq.model.tables.CustomerReceiptAttachment;
import com.jooq.jooq.model.tables.CustomerSfAnswer;
import com.jooq.jooq.model.tables.CustomerSfCategory;
import com.jooq.jooq.model.tables.CustomerSfHistory;
import com.jooq.jooq.model.tables.CustomerSfQstnAnsMap;
import com.jooq.jooq.model.tables.CustomerSfQuestion;
import com.jooq.jooq.model.tables.CustomerVsVendor;
import com.jooq.jooq.model.tables.DailySchedulerLog;
import com.jooq.jooq.model.tables.DashboardCategoryMaster;
import com.jooq.jooq.model.tables.DashboardIconLi;
import com.jooq.jooq.model.tables.DashboardMaster;
import com.jooq.jooq.model.tables.DashboardMenuAccess;
import com.jooq.jooq.model.tables.DeductionMaster;
import com.jooq.jooq.model.tables.Department;
import com.jooq.jooq.model.tables.DepartmentAccess;
import com.jooq.jooq.model.tables.DistrictMaster;
import com.jooq.jooq.model.tables.DocTypeMaster;
import com.jooq.jooq.model.tables.DocumentUpload;
import com.jooq.jooq.model.tables.DocumentUploadHistory;
import com.jooq.jooq.model.tables.EkoAbcAssetTracker;
import com.jooq.jooq.model.tables.EkoBankerStagingData;
import com.jooq.jooq.model.tables.EkoMaterialStock;
import com.jooq.jooq.model.tables.FarmerAnimalInfo;
import com.jooq.jooq.model.tables.FarmerBank;
import com.jooq.jooq.model.tables.FarmerLoanLetter;
import com.jooq.jooq.model.tables.FarmerMilkReport;
import com.jooq.jooq.model.tables.FarmerMobile;
import com.jooq.jooq.model.tables.FarmerTemp;
import com.jooq.jooq.model.tables.FeedCfaReason;
import com.jooq.jooq.model.tables.FeedCfaUserMaster;
import com.jooq.jooq.model.tables.FeedInvoiceHeader;
import com.jooq.jooq.model.tables.FeedInvoiceLineitem;
import com.jooq.jooq.model.tables.FfsDesignation;
import com.jooq.jooq.model.tables.FfsDesignationMapping;
import com.jooq.jooq.model.tables.FfsPosition;
import com.jooq.jooq.model.tables.FieldForceStaff;
import com.jooq.jooq.model.tables.FieldForceStaffHmb;
import com.jooq.jooq.model.tables.FieldForceStaffOld;
import com.jooq.jooq.model.tables.FiledForce;
import com.jooq.jooq.model.tables.FiscalYear;
import com.jooq.jooq.model.tables.FleetCardMaster;
import com.jooq.jooq.model.tables.Freezer;
import com.jooq.jooq.model.tables.FreezerAckApproval;
import com.jooq.jooq.model.tables.FreezerGateentryDetails;
import com.jooq.jooq.model.tables.FreezerOverallCount;
import com.jooq.jooq.model.tables.FtpConfig;
import com.jooq.jooq.model.tables.GrnCustomerDispachHeader;
import com.jooq.jooq.model.tables.GrnCustomerDispachLi;
import com.jooq.jooq.model.tables.GrnCustomerUtrDetails;
import com.jooq.jooq.model.tables.GrnIndentDetails;
import com.jooq.jooq.model.tables.GrnStorageLocation;
import com.jooq.jooq.model.tables.GrnTagVerifi;
import com.jooq.jooq.model.tables.GrnUserLoginDetails;
import com.jooq.jooq.model.tables.GroupPosition;
import com.jooq.jooq.model.tables.HapEmployeeMaster;
import com.jooq.jooq.model.tables.HapPoHeader;
import com.jooq.jooq.model.tables.HapPoItem;
import com.jooq.jooq.model.tables.HapPoItemImageUpload;
import com.jooq.jooq.model.tables.HapPoItemService;
import com.jooq.jooq.model.tables.HapPoItemServiceMm;
import com.jooq.jooq.model.tables.HmbInchargeCustomerCare;
import com.jooq.jooq.model.tables.HmbMaterialStock;
import com.jooq.jooq.model.tables.HmbReasonMaster;
import com.jooq.jooq.model.tables.HmbServiceArrear;
import com.jooq.jooq.model.tables.HmbServiceCharges;
import com.jooq.jooq.model.tables.HmbServiceDeduction;
import com.jooq.jooq.model.tables.HoMealConfirmation;
import com.jooq.jooq.model.tables.HoMealMaster;
import com.jooq.jooq.model.tables.HoWeeklyMeal;
import com.jooq.jooq.model.tables.IbacoDbstock;
import com.jooq.jooq.model.tables.IbacoMaterial;
import com.jooq.jooq.model.tables.IbacoOyaloCustomer;
import com.jooq.jooq.model.tables.IbacoStock;
import com.jooq.jooq.model.tables.InvoiceUpload;
import com.jooq.jooq.model.tables.IvrCallRegister;
import com.jooq.jooq.model.tables.IvrCallStatusMaster;
import com.jooq.jooq.model.tables.IvrCategoryMaster;
import com.jooq.jooq.model.tables.IvrCcMaster;
import com.jooq.jooq.model.tables.IvrDivisionMaster;
import com.jooq.jooq.model.tables.IvrEscalationMaster;
import com.jooq.jooq.model.tables.IvrHolidayMaster;
import com.jooq.jooq.model.tables.IvrLanguageMaster;
import com.jooq.jooq.model.tables.IvrOptionMaster;
import com.jooq.jooq.model.tables.IvrSubDivisionMaster;
import com.jooq.jooq.model.tables.IvrSupportCallHistory;
import com.jooq.jooq.model.tables.IvrUnregnoMaster;
import com.jooq.jooq.model.tables.IvrWorkingHrsMaster;
import com.jooq.jooq.model.tables.LandlordFieldforce;
import com.jooq.jooq.model.tables.LogisticArrear;
import com.jooq.jooq.model.tables.LogisticDeduction;
import com.jooq.jooq.model.tables.LogisticTransHeader;
import com.jooq.jooq.model.tables.LogisticTransItem;
import com.jooq.jooq.model.tables.MaterialStock;
import com.jooq.jooq.model.tables.MenuCardUpload;
import com.jooq.jooq.model.tables.Menumaster;
import com.jooq.jooq.model.tables.MilkAntibiotic;
import com.jooq.jooq.model.tables.MilkArrear;
import com.jooq.jooq.model.tables.MilkAvg;
import com.jooq.jooq.model.tables.MilkAvgArch;
import com.jooq.jooq.model.tables.MilkBouns;
import com.jooq.jooq.model.tables.MilkCustomerScheme;
import com.jooq.jooq.model.tables.MilkDeduction;
import com.jooq.jooq.model.tables.MilkDeductionSd;
import com.jooq.jooq.model.tables.MilkIncentive;
import com.jooq.jooq.model.tables.MilkIncentiveArch;
import com.jooq.jooq.model.tables.MilkIncentiveMaster;
import com.jooq.jooq.model.tables.MilkLiability;
import com.jooq.jooq.model.tables.MilkPaymentHa;
import com.jooq.jooq.model.tables.MilkPaymentHaArch;
import com.jooq.jooq.model.tables.MilkPaymentHaTemp;
import com.jooq.jooq.model.tables.MilkPaymentLi;
import com.jooq.jooq.model.tables.MilkPaymentLiArch;
import com.jooq.jooq.model.tables.MilkPlant;
import com.jooq.jooq.model.tables.MilkRecovery;
import com.jooq.jooq.model.tables.MilkSnfCompare;
import com.jooq.jooq.model.tables.MilkSpoilage;
import com.jooq.jooq.model.tables.MilkSpoilageCategory;
import com.jooq.jooq.model.tables.MonthlyVehicleSummary;
import com.jooq.jooq.model.tables.MspDetails;
import com.jooq.jooq.model.tables.NewsLetter;
import com.jooq.jooq.model.tables.NewsLetterLanguage;
import com.jooq.jooq.model.tables.NumberRange;
import com.jooq.jooq.model.tables.OrderIndent;
import com.jooq.jooq.model.tables.OtpLoginHistory;
import com.jooq.jooq.model.tables.PincodeMaster;
import com.jooq.jooq.model.tables.PlantMaster;
import com.jooq.jooq.model.tables.PoAcknowledgement;
import com.jooq.jooq.model.tables.PoHeader;
import com.jooq.jooq.model.tables.PoItem;
import com.jooq.jooq.model.tables.PoItemHistory;
import com.jooq.jooq.model.tables.PoItemService;
import com.jooq.jooq.model.tables.PoList;
import com.jooq.jooq.model.tables.PoPdf;
import com.jooq.jooq.model.tables.PortalUsageMaster;
import com.jooq.jooq.model.tables.PortalUserAccess;
import com.jooq.jooq.model.tables.Position;
import com.jooq.jooq.model.tables.Product;
import com.jooq.jooq.model.tables.ProductLi;
import com.jooq.jooq.model.tables.ProvisionalDepartment;
import com.jooq.jooq.model.tables.ProvisionalExpMaster;
import com.jooq.jooq.model.tables.ProvisionalGlMaster;
import com.jooq.jooq.model.tables.ProvisionalMonthly;
import com.jooq.jooq.model.tables.ProvisionalProfitcenter;
import com.jooq.jooq.model.tables.PurchasePlantMaster;
import com.jooq.jooq.model.tables.PurchaseVendorMenuApproval;
import com.jooq.jooq.model.tables.PurchaseVendorOtpHistory;
import com.jooq.jooq.model.tables.PurgrpMatMaster;
import com.jooq.jooq.model.tables.RbBuildingMaster;
import com.jooq.jooq.model.tables.RbFloorMaster;
import com.jooq.jooq.model.tables.RbLocationMaster;
import com.jooq.jooq.model.tables.RbRoomBooking;
import com.jooq.jooq.model.tables.RbRoomBookingLog;
import com.jooq.jooq.model.tables.RbRoomMaster;
import com.jooq.jooq.model.tables.ReceiptTypeMaster;
import com.jooq.jooq.model.tables.RecoveryMaster;
import com.jooq.jooq.model.tables.RegionMaster;
import com.jooq.jooq.model.tables.RentAttachment;
import com.jooq.jooq.model.tables.RentFieldforce;
import com.jooq.jooq.model.tables.RentHa;
import com.jooq.jooq.model.tables.RentLandlordCustomerCare;
import com.jooq.jooq.model.tables.RentVendor;
import com.jooq.jooq.model.tables.RetailerMaster;
import com.jooq.jooq.model.tables.Role;
import com.jooq.jooq.model.tables.RoleAccess;
import com.jooq.jooq.model.tables.RspCertificateAttachment;
import com.jooq.jooq.model.tables.SalesHierarchy;
import com.jooq.jooq.model.tables.SapLogon;
import com.jooq.jooq.model.tables.SchedulerLog;
import com.jooq.jooq.model.tables.Scheme;
import com.jooq.jooq.model.tables.SchemeLi;
import com.jooq.jooq.model.tables.SkuTargetUpload;
import com.jooq.jooq.model.tables.SmsConfiguration;
import com.jooq.jooq.model.tables.SoHeader;
import com.jooq.jooq.model.tables.SocietyInchargeMapping;
import com.jooq.jooq.model.tables.SocietyMaster;
import com.jooq.jooq.model.tables.SplGl;
import com.jooq.jooq.model.tables.SplGlMapping;
import com.jooq.jooq.model.tables.StockAuditCfaImage;
import com.jooq.jooq.model.tables.StockAuditPlant;
import com.jooq.jooq.model.tables.StockAuditUserLock;
import com.jooq.jooq.model.tables.StockauditConfirmstock;
import com.jooq.jooq.model.tables.StockauditLgort;
import com.jooq.jooq.model.tables.StockauditMaterialwisestock;
import com.jooq.jooq.model.tables.SuperRoleAccess;
import com.jooq.jooq.model.tables.TcBuildingMaster;
import com.jooq.jooq.model.tables.TcCalenderPlanner;
import com.jooq.jooq.model.tables.TcCeritificateIssue;
import com.jooq.jooq.model.tables.TcDeptMaster;
import com.jooq.jooq.model.tables.TcDesignation;
import com.jooq.jooq.model.tables.TcFloorMaster;
import com.jooq.jooq.model.tables.TcGiftMaster;
import com.jooq.jooq.model.tables.TcHapEmpMaster;
import com.jooq.jooq.model.tables.TcMonthStatusMaster;
import com.jooq.jooq.model.tables.TcParticipantFood;
import com.jooq.jooq.model.tables.TcParticipantRoom;
import com.jooq.jooq.model.tables.TcPlantVisit;
import com.jooq.jooq.model.tables.TcReimbursementClaim;
import com.jooq.jooq.model.tables.TcReimbursementMaster;
import com.jooq.jooq.model.tables.TcReimbursementTypeMaster;
import com.jooq.jooq.model.tables.TcRequestFs;
import com.jooq.jooq.model.tables.TcRequestGift;
import com.jooq.jooq.model.tables.TcRequestHa;
import com.jooq.jooq.model.tables.TcRequestLi;
import com.jooq.jooq.model.tables.TcRequestRsp;
import com.jooq.jooq.model.tables.TcRequestUserMapping;
import com.jooq.jooq.model.tables.TcRoomBedMaster;
import com.jooq.jooq.model.tables.TcRoomBedTypeMaster;
import com.jooq.jooq.model.tables.TcRoomMaster;
import com.jooq.jooq.model.tables.TcRoomTypeMaster;
import com.jooq.jooq.model.tables.TcRouteMaster;
import com.jooq.jooq.model.tables.TcStaffMaster;
import com.jooq.jooq.model.tables.TcStatusMaster;
import com.jooq.jooq.model.tables.TcTrainingCenter;
import com.jooq.jooq.model.tables.TcTrainingCreationLi;
import com.jooq.jooq.model.tables.TcTrainingMaster;
import com.jooq.jooq.model.tables.TcTrainingRoom;
import com.jooq.jooq.model.tables.TcTrainingTrainerMapping;
import com.jooq.jooq.model.tables.TcTransport;
import com.jooq.jooq.model.tables.TcTransportRate;
import com.jooq.jooq.model.tables.TcUserRoleDept;
import com.jooq.jooq.model.tables.TcUserTrainingCenterMaster;
import com.jooq.jooq.model.tables.TdsCetificate;
import com.jooq.jooq.model.tables.TdsDeclarationUpload;
import com.jooq.jooq.model.tables.TeamleadMaster;
import com.jooq.jooq.model.tables.TransporterDashboard;
import com.jooq.jooq.model.tables.TransporterMspDetails;
import com.jooq.jooq.model.tables.TransporterSummary;
import com.jooq.jooq.model.tables.TsRecovery;
import com.jooq.jooq.model.tables.UserControl;
import com.jooq.jooq.model.tables.UserMaster;
import com.jooq.jooq.model.tables.UserMasterSms;
import com.jooq.jooq.model.tables.UserMasterSmsMsg;
import com.jooq.jooq.model.tables.UserMenuAssignment;
import com.jooq.jooq.model.tables.UserOverallCount;
import com.jooq.jooq.model.tables.UserPlantMaster;
import com.jooq.jooq.model.tables.UserRoleAssignment;
import com.jooq.jooq.model.tables.UserTrack;
import com.jooq.jooq.model.tables.VehicleSubsidy;
import com.jooq.jooq.model.tables.VehicleTracker;
import com.jooq.jooq.model.tables.VendorAccountGroup;
import com.jooq.jooq.model.tables.VendorBankDetails;
import com.jooq.jooq.model.tables.VendorBankDetailsArch;
import com.jooq.jooq.model.tables.VendorContact;
import com.jooq.jooq.model.tables.VendorContactHistory;
import com.jooq.jooq.model.tables.VendorEvaluation;
import com.jooq.jooq.model.tables.VendorFeedback;
import com.jooq.jooq.model.tables.VendorKycBankDetails;
import com.jooq.jooq.model.tables.VendorKycBankDetailsHistory;
import com.jooq.jooq.model.tables.VendorKycDetails;
import com.jooq.jooq.model.tables.VendorKycDetailsHistory;
import com.jooq.jooq.model.tables.VendorLocation;
import com.jooq.jooq.model.tables.VendorLocationHistory;
import com.jooq.jooq.model.tables.VendorMaster;
import com.jooq.jooq.model.tables.VendorProfile;
import com.jooq.jooq.model.tables.VendorProfileHistory;
import com.jooq.jooq.model.tables.VendorTurnover;
import com.jooq.jooq.model.tables.VendorTurnoverHistory;
import com.jooq.jooq.model.tables.VendorVehicleDetails;
import com.jooq.jooq.model.tables.VisitorRegister;
import com.jooq.jooq.model.tables.records.AgreementHaRecord;
import com.jooq.jooq.model.tables.records.AgreementLiRecord;
import com.jooq.jooq.model.tables.records.AnswerMasterRecord;
import com.jooq.jooq.model.tables.records.ApReportRecord;
import com.jooq.jooq.model.tables.records.ApiTimeMasterRecord;
import com.jooq.jooq.model.tables.records.ArReportRecord;
import com.jooq.jooq.model.tables.records.ArrearMasterRecord;
import com.jooq.jooq.model.tables.records.AssetTrackerMasterRecord;
import com.jooq.jooq.model.tables.records.BillTypeMasterRecord;
import com.jooq.jooq.model.tables.records.BotTagRecord;
import com.jooq.jooq.model.tables.records.BpCustomerRecord;
import com.jooq.jooq.model.tables.records.BulkPaymentLiArchRecord;
import com.jooq.jooq.model.tables.records.BulkPaymentLiRecord;
import com.jooq.jooq.model.tables.records.BumperSchemeFileRecord;
import com.jooq.jooq.model.tables.records.BumperSchemeRecord;
import com.jooq.jooq.model.tables.records.CcComplaintTypeRecord;
import com.jooq.jooq.model.tables.records.CcDivisionRecord;
import com.jooq.jooq.model.tables.records.CcHmbCompareRecord;
import com.jooq.jooq.model.tables.records.CcMailContentRecord;
import com.jooq.jooq.model.tables.records.CcMailCustomerHierarchyRecord;
import com.jooq.jooq.model.tables.records.CcTicketsHaRecord;
import com.jooq.jooq.model.tables.records.CcUserTypeRecord;
import com.jooq.jooq.model.tables.records.CcmsAllowanceHistoryRecord;
import com.jooq.jooq.model.tables.records.CcmsAllowanceHistoryVendorRecord;
import com.jooq.jooq.model.tables.records.CcmsAllowanceMasterMappingRecord;
import com.jooq.jooq.model.tables.records.CcmsAllowanceMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsAppTypeRecord;
import com.jooq.jooq.model.tables.records.CcmsAppVersionRecord;
import com.jooq.jooq.model.tables.records.CcmsBonusMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsCanteenCleaningChargeRecord;
import com.jooq.jooq.model.tables.records.CcmsCanteenEntryRecord;
import com.jooq.jooq.model.tables.records.CcmsCanteenItemTypeMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsCanteenMaterialMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsCanteenPoHeaderRecord;
import com.jooq.jooq.model.tables.records.CcmsCanteenPoItemRecord;
import com.jooq.jooq.model.tables.records.CcmsCanteenRateMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsCanteenSpecialEntryRecord;
import com.jooq.jooq.model.tables.records.CcmsCanteenVendorPlantMappingRecord;
import com.jooq.jooq.model.tables.records.CcmsCardHistoryRecord;
import com.jooq.jooq.model.tables.records.CcmsCardMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsCardNumrangeRecord;
import com.jooq.jooq.model.tables.records.CcmsCcMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsClSupervisorRecord;
import com.jooq.jooq.model.tables.records.CcmsContractorPfMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsDepartmentMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsEmpSalaryDeductionRecord;
import com.jooq.jooq.model.tables.records.CcmsEmpSecQstnAnsRecord;
import com.jooq.jooq.model.tables.records.CcmsEmployeeDesignationMappingRecord;
import com.jooq.jooq.model.tables.records.CcmsEmployeeRecord;
import com.jooq.jooq.model.tables.records.CcmsEmployeeTypeRecord;
import com.jooq.jooq.model.tables.records.CcmsEsiExcludedPlantRecord;
import com.jooq.jooq.model.tables.records.CcmsFreeMealMappingRecord;
import com.jooq.jooq.model.tables.records.CcmsGateEntryRecord;
import com.jooq.jooq.model.tables.records.CcmsGstMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsGuestDataRecord;
import com.jooq.jooq.model.tables.records.CcmsGuestDetailsNewRecord;
import com.jooq.jooq.model.tables.records.CcmsGuestDetailsRecord;
import com.jooq.jooq.model.tables.records.CcmsHapGateEntryRecord;
import com.jooq.jooq.model.tables.records.CcmsHolidaysListRecord;
import com.jooq.jooq.model.tables.records.CcmsLabourCategoryMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsLabourShiftMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsLwfMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsMaterialMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsMealDeductionHistoryRecord;
import com.jooq.jooq.model.tables.records.CcmsMotherTongueRecord;
import com.jooq.jooq.model.tables.records.CcmsMspCategoryListRecord;
import com.jooq.jooq.model.tables.records.CcmsMspCustomerDetailsRecord;
import com.jooq.jooq.model.tables.records.CcmsMspOutletEntryRecord;
import com.jooq.jooq.model.tables.records.CcmsMspPoHeaderRecord;
import com.jooq.jooq.model.tables.records.CcmsMspPoItemRecord;
import com.jooq.jooq.model.tables.records.CcmsMspRateMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsMspVendorCustomerMappingRecord;
import com.jooq.jooq.model.tables.records.CcmsMspVendorInvoiceDetailsRecord;
import com.jooq.jooq.model.tables.records.CcmsOclActivityMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsOclPlantSqftAreaRecord;
import com.jooq.jooq.model.tables.records.CcmsOclUomRecord;
import com.jooq.jooq.model.tables.records.CcmsOclVendorRateMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsOtHoursRecord;
import com.jooq.jooq.model.tables.records.CcmsPlantAdminHrMappingRecord;
import com.jooq.jooq.model.tables.records.CcmsPoHeaderRecord;
import com.jooq.jooq.model.tables.records.CcmsPoItemRecord;
import com.jooq.jooq.model.tables.records.CcmsSalaryDeductionMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsSalaryHistoryRecord;
import com.jooq.jooq.model.tables.records.CcmsSalaryHoldDetailsRecord;
import com.jooq.jooq.model.tables.records.CcmsSalaryMonthlyNewRecord;
import com.jooq.jooq.model.tables.records.CcmsSalaryMonthlyRecord;
import com.jooq.jooq.model.tables.records.CcmsSapLogonRecord;
import com.jooq.jooq.model.tables.records.CcmsSecurityQuestionsRecord;
import com.jooq.jooq.model.tables.records.CcmsSecurityTypeMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsSecurityWagesMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsServiceChargeMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsShiftMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsStatePlantMappingRecord;
import com.jooq.jooq.model.tables.records.CcmsStatusMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsStorageLocationMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsTabInfoRecord;
import com.jooq.jooq.model.tables.records.CcmsTabUserMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsUserSapMappingRecord;
import com.jooq.jooq.model.tables.records.CcmsVaccineRecord;
import com.jooq.jooq.model.tables.records.CcmsVendorCodeRecord;
import com.jooq.jooq.model.tables.records.CcmsVendorInvoiceDetailsRecord;
import com.jooq.jooq.model.tables.records.CcmsVendorNumRangeRecord;
import com.jooq.jooq.model.tables.records.CcmsVendorPlantMappingRecord;
import com.jooq.jooq.model.tables.records.CcmsWeekoffMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsWorkLocationMasterRecord;
import com.jooq.jooq.model.tables.records.CcmsWorkingHoursRecord;
import com.jooq.jooq.model.tables.records.CertificateTypeMasterRecord;
import com.jooq.jooq.model.tables.records.CfaFreezerFileRecord;
import com.jooq.jooq.model.tables.records.CfaSlabDetailsRecord;
import com.jooq.jooq.model.tables.records.CfaSlabMasterRecord;
import com.jooq.jooq.model.tables.records.CircularBusinessTypeRecord;
import com.jooq.jooq.model.tables.records.CircularDisplayDetailsRecord;
import com.jooq.jooq.model.tables.records.CircularLanguageRecord;
import com.jooq.jooq.model.tables.records.CircularTypeRecord;
import com.jooq.jooq.model.tables.records.CircularUploadRecord;
import com.jooq.jooq.model.tables.records.CompanyMasterRecord;
import com.jooq.jooq.model.tables.records.ContractAgreementRecord;
import com.jooq.jooq.model.tables.records.ContractCustomerRecord;
import com.jooq.jooq.model.tables.records.ContractHikeRecord;
import com.jooq.jooq.model.tables.records.ContractLandlordRecord;
import com.jooq.jooq.model.tables.records.ContractPeriodRecord;
import com.jooq.jooq.model.tables.records.CountryMasterRecord;
import com.jooq.jooq.model.tables.records.CrateBalanceRecord;
import com.jooq.jooq.model.tables.records.CratesMonthlyBalanceRecord;
import com.jooq.jooq.model.tables.records.CustomerAccountGroupRecord;
import com.jooq.jooq.model.tables.records.CustomerAssetRecord;
import com.jooq.jooq.model.tables.records.CustomerBankDetailsRecord;
import com.jooq.jooq.model.tables.records.CustomerBillAttachmentRecord;
import com.jooq.jooq.model.tables.records.CustomerBillRecord;
import com.jooq.jooq.model.tables.records.CustomerCertificateAttachmentRecord;
import com.jooq.jooq.model.tables.records.CustomerEbClaimRecord;
import com.jooq.jooq.model.tables.records.CustomerFreezerAttachmentNewRecord;
import com.jooq.jooq.model.tables.records.CustomerFreezerAttachmentOldRecord;
import com.jooq.jooq.model.tables.records.CustomerFreezerAttachmentRecord;
import com.jooq.jooq.model.tables.records.CustomerFreezerRecord;
import com.jooq.jooq.model.tables.records.CustomerFreezerReleaseRecord;
import com.jooq.jooq.model.tables.records.CustomerFreezerTagRecord;
import com.jooq.jooq.model.tables.records.CustomerGroupRecord;
import com.jooq.jooq.model.tables.records.CustomerHmboRecord;
import com.jooq.jooq.model.tables.records.CustomerKycAttachmentRecord;
import com.jooq.jooq.model.tables.records.CustomerKycDetailsRecord;
import com.jooq.jooq.model.tables.records.CustomerKycRecord;
import com.jooq.jooq.model.tables.records.CustomerKycTypeMasterRecord;
import com.jooq.jooq.model.tables.records.CustomerMasterRecord;
import com.jooq.jooq.model.tables.records.CustomerMilkAvgRecord;
import com.jooq.jooq.model.tables.records.CustomerReceiptAttachmentRecord;
import com.jooq.jooq.model.tables.records.CustomerReceiptRecord;
import com.jooq.jooq.model.tables.records.CustomerSfAnswerRecord;
import com.jooq.jooq.model.tables.records.CustomerSfCategoryRecord;
import com.jooq.jooq.model.tables.records.CustomerSfHistoryRecord;
import com.jooq.jooq.model.tables.records.CustomerSfQstnAnsMapRecord;
import com.jooq.jooq.model.tables.records.CustomerSfQuestionRecord;
import com.jooq.jooq.model.tables.records.CustomerVsVendorRecord;
import com.jooq.jooq.model.tables.records.DailySchedulerLogRecord;
import com.jooq.jooq.model.tables.records.DashboardCategoryMasterRecord;
import com.jooq.jooq.model.tables.records.DashboardIconLiRecord;
import com.jooq.jooq.model.tables.records.DashboardMasterRecord;
import com.jooq.jooq.model.tables.records.DashboardMenuAccessRecord;
import com.jooq.jooq.model.tables.records.DeductionMasterRecord;
import com.jooq.jooq.model.tables.records.DepartmentAccessRecord;
import com.jooq.jooq.model.tables.records.DepartmentRecord;
import com.jooq.jooq.model.tables.records.DistrictMasterRecord;
import com.jooq.jooq.model.tables.records.DocTypeMasterRecord;
import com.jooq.jooq.model.tables.records.DocumentUploadHistoryRecord;
import com.jooq.jooq.model.tables.records.DocumentUploadRecord;
import com.jooq.jooq.model.tables.records.EkoAbcAssetTrackerRecord;
import com.jooq.jooq.model.tables.records.EkoBankerStagingDataRecord;
import com.jooq.jooq.model.tables.records.EkoMaterialStockRecord;
import com.jooq.jooq.model.tables.records.FarmerAnimalInfoRecord;
import com.jooq.jooq.model.tables.records.FarmerBankRecord;
import com.jooq.jooq.model.tables.records.FarmerLoanLetterRecord;
import com.jooq.jooq.model.tables.records.FarmerMilkReportRecord;
import com.jooq.jooq.model.tables.records.FarmerMobileRecord;
import com.jooq.jooq.model.tables.records.FarmerTempRecord;
import com.jooq.jooq.model.tables.records.FeedCfaReasonRecord;
import com.jooq.jooq.model.tables.records.FeedCfaUserMasterRecord;
import com.jooq.jooq.model.tables.records.FeedInvoiceHeaderRecord;
import com.jooq.jooq.model.tables.records.FeedInvoiceLineitemRecord;
import com.jooq.jooq.model.tables.records.FfsDesignationMappingRecord;
import com.jooq.jooq.model.tables.records.FfsDesignationRecord;
import com.jooq.jooq.model.tables.records.FfsPositionRecord;
import com.jooq.jooq.model.tables.records.FieldForceStaffHmbRecord;
import com.jooq.jooq.model.tables.records.FieldForceStaffOldRecord;
import com.jooq.jooq.model.tables.records.FieldForceStaffRecord;
import com.jooq.jooq.model.tables.records.FiledForceRecord;
import com.jooq.jooq.model.tables.records.FiscalYearRecord;
import com.jooq.jooq.model.tables.records.FleetCardMasterRecord;
import com.jooq.jooq.model.tables.records.FreezerAckApprovalRecord;
import com.jooq.jooq.model.tables.records.FreezerGateentryDetailsRecord;
import com.jooq.jooq.model.tables.records.FreezerOverallCountRecord;
import com.jooq.jooq.model.tables.records.FreezerRecord;
import com.jooq.jooq.model.tables.records.FtpConfigRecord;
import com.jooq.jooq.model.tables.records.GrnCustomerDispachHeaderRecord;
import com.jooq.jooq.model.tables.records.GrnCustomerDispachLiRecord;
import com.jooq.jooq.model.tables.records.GrnCustomerUtrDetailsRecord;
import com.jooq.jooq.model.tables.records.GrnIndentDetailsRecord;
import com.jooq.jooq.model.tables.records.GrnStorageLocationRecord;
import com.jooq.jooq.model.tables.records.GrnTagVerifiRecord;
import com.jooq.jooq.model.tables.records.GrnUserLoginDetailsRecord;
import com.jooq.jooq.model.tables.records.GroupPositionRecord;
import com.jooq.jooq.model.tables.records.HapEmployeeMasterRecord;
import com.jooq.jooq.model.tables.records.HapPoHeaderRecord;
import com.jooq.jooq.model.tables.records.HapPoItemImageUploadRecord;
import com.jooq.jooq.model.tables.records.HapPoItemRecord;
import com.jooq.jooq.model.tables.records.HapPoItemServiceMmRecord;
import com.jooq.jooq.model.tables.records.HapPoItemServiceRecord;
import com.jooq.jooq.model.tables.records.HmbInchargeCustomerCareRecord;
import com.jooq.jooq.model.tables.records.HmbMaterialStockRecord;
import com.jooq.jooq.model.tables.records.HmbReasonMasterRecord;
import com.jooq.jooq.model.tables.records.HmbServiceArrearRecord;
import com.jooq.jooq.model.tables.records.HmbServiceChargesRecord;
import com.jooq.jooq.model.tables.records.HmbServiceDeductionRecord;
import com.jooq.jooq.model.tables.records.HoMealConfirmationRecord;
import com.jooq.jooq.model.tables.records.HoMealMasterRecord;
import com.jooq.jooq.model.tables.records.HoWeeklyMealRecord;
import com.jooq.jooq.model.tables.records.IbacoDbstockRecord;
import com.jooq.jooq.model.tables.records.IbacoMaterialRecord;
import com.jooq.jooq.model.tables.records.IbacoOyaloCustomerRecord;
import com.jooq.jooq.model.tables.records.IbacoStockRecord;
import com.jooq.jooq.model.tables.records.InvoiceUploadRecord;
import com.jooq.jooq.model.tables.records.IvrCallRegisterRecord;
import com.jooq.jooq.model.tables.records.IvrCallStatusMasterRecord;
import com.jooq.jooq.model.tables.records.IvrCategoryMasterRecord;
import com.jooq.jooq.model.tables.records.IvrCcMasterRecord;
import com.jooq.jooq.model.tables.records.IvrDivisionMasterRecord;
import com.jooq.jooq.model.tables.records.IvrEscalationMasterRecord;
import com.jooq.jooq.model.tables.records.IvrHolidayMasterRecord;
import com.jooq.jooq.model.tables.records.IvrLanguageMasterRecord;
import com.jooq.jooq.model.tables.records.IvrOptionMasterRecord;
import com.jooq.jooq.model.tables.records.IvrSubDivisionMasterRecord;
import com.jooq.jooq.model.tables.records.IvrSupportCallHistoryRecord;
import com.jooq.jooq.model.tables.records.IvrUnregnoMasterRecord;
import com.jooq.jooq.model.tables.records.IvrWorkingHrsMasterRecord;
import com.jooq.jooq.model.tables.records.LandlordFieldforceRecord;
import com.jooq.jooq.model.tables.records.LogisticArrearRecord;
import com.jooq.jooq.model.tables.records.LogisticDeductionRecord;
import com.jooq.jooq.model.tables.records.LogisticTransHeaderRecord;
import com.jooq.jooq.model.tables.records.LogisticTransItemRecord;
import com.jooq.jooq.model.tables.records.MaterialStockRecord;
import com.jooq.jooq.model.tables.records.MenuCardUploadRecord;
import com.jooq.jooq.model.tables.records.MenumasterRecord;
import com.jooq.jooq.model.tables.records.MilkAntibioticRecord;
import com.jooq.jooq.model.tables.records.MilkArrearRecord;
import com.jooq.jooq.model.tables.records.MilkAvgArchRecord;
import com.jooq.jooq.model.tables.records.MilkAvgRecord;
import com.jooq.jooq.model.tables.records.MilkBounsRecord;
import com.jooq.jooq.model.tables.records.MilkCustomerSchemeRecord;
import com.jooq.jooq.model.tables.records.MilkDeductionRecord;
import com.jooq.jooq.model.tables.records.MilkDeductionSdRecord;
import com.jooq.jooq.model.tables.records.MilkIncentiveArchRecord;
import com.jooq.jooq.model.tables.records.MilkIncentiveMasterRecord;
import com.jooq.jooq.model.tables.records.MilkIncentiveRecord;
import com.jooq.jooq.model.tables.records.MilkLiabilityRecord;
import com.jooq.jooq.model.tables.records.MilkPaymentHaArchRecord;
import com.jooq.jooq.model.tables.records.MilkPaymentHaRecord;
import com.jooq.jooq.model.tables.records.MilkPaymentHaTempRecord;
import com.jooq.jooq.model.tables.records.MilkPaymentLiArchRecord;
import com.jooq.jooq.model.tables.records.MilkPaymentLiRecord;
import com.jooq.jooq.model.tables.records.MilkPlantRecord;
import com.jooq.jooq.model.tables.records.MilkRecoveryRecord;
import com.jooq.jooq.model.tables.records.MilkSnfCompareRecord;
import com.jooq.jooq.model.tables.records.MilkSpoilageCategoryRecord;
import com.jooq.jooq.model.tables.records.MilkSpoilageRecord;
import com.jooq.jooq.model.tables.records.MonthlyVehicleSummaryRecord;
import com.jooq.jooq.model.tables.records.MspDetailsRecord;
import com.jooq.jooq.model.tables.records.NewsLetterLanguageRecord;
import com.jooq.jooq.model.tables.records.NewsLetterRecord;
import com.jooq.jooq.model.tables.records.NumberRangeRecord;
import com.jooq.jooq.model.tables.records.OrderIndentRecord;
import com.jooq.jooq.model.tables.records.OtpLoginHistoryRecord;
import com.jooq.jooq.model.tables.records.PincodeMasterRecord;
import com.jooq.jooq.model.tables.records.PlantMasterRecord;
import com.jooq.jooq.model.tables.records.PoAcknowledgementRecord;
import com.jooq.jooq.model.tables.records.PoHeaderRecord;
import com.jooq.jooq.model.tables.records.PoItemHistoryRecord;
import com.jooq.jooq.model.tables.records.PoItemRecord;
import com.jooq.jooq.model.tables.records.PoItemServiceRecord;
import com.jooq.jooq.model.tables.records.PoListRecord;
import com.jooq.jooq.model.tables.records.PoPdfRecord;
import com.jooq.jooq.model.tables.records.PortalUsageMasterRecord;
import com.jooq.jooq.model.tables.records.PortalUserAccessRecord;
import com.jooq.jooq.model.tables.records.PositionRecord;
import com.jooq.jooq.model.tables.records.ProductLiRecord;
import com.jooq.jooq.model.tables.records.ProductRecord;
import com.jooq.jooq.model.tables.records.ProvisionalDepartmentRecord;
import com.jooq.jooq.model.tables.records.ProvisionalExpMasterRecord;
import com.jooq.jooq.model.tables.records.ProvisionalGlMasterRecord;
import com.jooq.jooq.model.tables.records.ProvisionalMonthlyRecord;
import com.jooq.jooq.model.tables.records.ProvisionalProfitcenterRecord;
import com.jooq.jooq.model.tables.records.PurchasePlantMasterRecord;
import com.jooq.jooq.model.tables.records.PurchaseVendorMenuApprovalRecord;
import com.jooq.jooq.model.tables.records.PurchaseVendorOtpHistoryRecord;
import com.jooq.jooq.model.tables.records.PurgrpMatMasterRecord;
import com.jooq.jooq.model.tables.records.RbBuildingMasterRecord;
import com.jooq.jooq.model.tables.records.RbFloorMasterRecord;
import com.jooq.jooq.model.tables.records.RbLocationMasterRecord;
import com.jooq.jooq.model.tables.records.RbRoomBookingLogRecord;
import com.jooq.jooq.model.tables.records.RbRoomBookingRecord;
import com.jooq.jooq.model.tables.records.RbRoomMasterRecord;
import com.jooq.jooq.model.tables.records.ReceiptTypeMasterRecord;
import com.jooq.jooq.model.tables.records.RecoveryMasterRecord;
import com.jooq.jooq.model.tables.records.RegionMasterRecord;
import com.jooq.jooq.model.tables.records.RentAttachmentRecord;
import com.jooq.jooq.model.tables.records.RentFieldforceRecord;
import com.jooq.jooq.model.tables.records.RentHaRecord;
import com.jooq.jooq.model.tables.records.RentLandlordCustomerCareRecord;
import com.jooq.jooq.model.tables.records.RentVendorRecord;
import com.jooq.jooq.model.tables.records.RetailerMasterRecord;
import com.jooq.jooq.model.tables.records.RoleAccessRecord;
import com.jooq.jooq.model.tables.records.RoleRecord;
import com.jooq.jooq.model.tables.records.RspCertificateAttachmentRecord;
import com.jooq.jooq.model.tables.records.SalesHierarchyRecord;
import com.jooq.jooq.model.tables.records.SapLogonRecord;
import com.jooq.jooq.model.tables.records.SchedulerLogRecord;
import com.jooq.jooq.model.tables.records.SchemeLiRecord;
import com.jooq.jooq.model.tables.records.SchemeRecord;
import com.jooq.jooq.model.tables.records.SkuTargetUploadRecord;
import com.jooq.jooq.model.tables.records.SmsConfigurationRecord;
import com.jooq.jooq.model.tables.records.SoHeaderRecord;
import com.jooq.jooq.model.tables.records.SocietyInchargeMappingRecord;
import com.jooq.jooq.model.tables.records.SocietyMasterRecord;
import com.jooq.jooq.model.tables.records.SplGlMappingRecord;
import com.jooq.jooq.model.tables.records.SplGlRecord;
import com.jooq.jooq.model.tables.records.StockAuditCfaImageRecord;
import com.jooq.jooq.model.tables.records.StockAuditPlantRecord;
import com.jooq.jooq.model.tables.records.StockAuditUserLockRecord;
import com.jooq.jooq.model.tables.records.StockauditConfirmstockRecord;
import com.jooq.jooq.model.tables.records.StockauditLgortRecord;
import com.jooq.jooq.model.tables.records.StockauditMaterialwisestockRecord;
import com.jooq.jooq.model.tables.records.SuperRoleAccessRecord;
import com.jooq.jooq.model.tables.records.TcBuildingMasterRecord;
import com.jooq.jooq.model.tables.records.TcCalenderPlannerRecord;
import com.jooq.jooq.model.tables.records.TcCeritificateIssueRecord;
import com.jooq.jooq.model.tables.records.TcDeptMasterRecord;
import com.jooq.jooq.model.tables.records.TcDesignationRecord;
import com.jooq.jooq.model.tables.records.TcFloorMasterRecord;
import com.jooq.jooq.model.tables.records.TcGiftMasterRecord;
import com.jooq.jooq.model.tables.records.TcHapEmpMasterRecord;
import com.jooq.jooq.model.tables.records.TcMonthStatusMasterRecord;
import com.jooq.jooq.model.tables.records.TcParticipantFoodRecord;
import com.jooq.jooq.model.tables.records.TcParticipantRoomRecord;
import com.jooq.jooq.model.tables.records.TcPlantVisitRecord;
import com.jooq.jooq.model.tables.records.TcReimbursementClaimRecord;
import com.jooq.jooq.model.tables.records.TcReimbursementMasterRecord;
import com.jooq.jooq.model.tables.records.TcReimbursementTypeMasterRecord;
import com.jooq.jooq.model.tables.records.TcRequestFsRecord;
import com.jooq.jooq.model.tables.records.TcRequestGiftRecord;
import com.jooq.jooq.model.tables.records.TcRequestHaRecord;
import com.jooq.jooq.model.tables.records.TcRequestLiRecord;
import com.jooq.jooq.model.tables.records.TcRequestRspRecord;
import com.jooq.jooq.model.tables.records.TcRequestUserMappingRecord;
import com.jooq.jooq.model.tables.records.TcRoomBedMasterRecord;
import com.jooq.jooq.model.tables.records.TcRoomBedTypeMasterRecord;
import com.jooq.jooq.model.tables.records.TcRoomMasterRecord;
import com.jooq.jooq.model.tables.records.TcRoomTypeMasterRecord;
import com.jooq.jooq.model.tables.records.TcRouteMasterRecord;
import com.jooq.jooq.model.tables.records.TcStaffMasterRecord;
import com.jooq.jooq.model.tables.records.TcStatusMasterRecord;
import com.jooq.jooq.model.tables.records.TcTrainingCenterRecord;
import com.jooq.jooq.model.tables.records.TcTrainingCreationLiRecord;
import com.jooq.jooq.model.tables.records.TcTrainingMasterRecord;
import com.jooq.jooq.model.tables.records.TcTrainingRoomRecord;
import com.jooq.jooq.model.tables.records.TcTrainingTrainerMappingRecord;
import com.jooq.jooq.model.tables.records.TcTransportRateRecord;
import com.jooq.jooq.model.tables.records.TcTransportRecord;
import com.jooq.jooq.model.tables.records.TcUserRoleDeptRecord;
import com.jooq.jooq.model.tables.records.TcUserTrainingCenterMasterRecord;
import com.jooq.jooq.model.tables.records.TdsCetificateRecord;
import com.jooq.jooq.model.tables.records.TdsDeclarationUploadRecord;
import com.jooq.jooq.model.tables.records.TeamleadMasterRecord;
import com.jooq.jooq.model.tables.records.TransporterDashboardRecord;
import com.jooq.jooq.model.tables.records.TransporterMspDetailsRecord;
import com.jooq.jooq.model.tables.records.TransporterSummaryRecord;
import com.jooq.jooq.model.tables.records.TsRecoveryRecord;
import com.jooq.jooq.model.tables.records.UserControlRecord;
import com.jooq.jooq.model.tables.records.UserMasterRecord;
import com.jooq.jooq.model.tables.records.UserMasterSmsMsgRecord;
import com.jooq.jooq.model.tables.records.UserMasterSmsRecord;
import com.jooq.jooq.model.tables.records.UserMenuAssignmentRecord;
import com.jooq.jooq.model.tables.records.UserOverallCountRecord;
import com.jooq.jooq.model.tables.records.UserPlantMasterRecord;
import com.jooq.jooq.model.tables.records.UserRoleAssignmentRecord;
import com.jooq.jooq.model.tables.records.UserTrackRecord;
import com.jooq.jooq.model.tables.records.VehicleSubsidyRecord;
import com.jooq.jooq.model.tables.records.VehicleTrackerRecord;
import com.jooq.jooq.model.tables.records.VendorAccountGroupRecord;
import com.jooq.jooq.model.tables.records.VendorBankDetailsArchRecord;
import com.jooq.jooq.model.tables.records.VendorBankDetailsRecord;
import com.jooq.jooq.model.tables.records.VendorContactHistoryRecord;
import com.jooq.jooq.model.tables.records.VendorContactRecord;
import com.jooq.jooq.model.tables.records.VendorEvaluationRecord;
import com.jooq.jooq.model.tables.records.VendorFeedbackRecord;
import com.jooq.jooq.model.tables.records.VendorKycBankDetailsHistoryRecord;
import com.jooq.jooq.model.tables.records.VendorKycBankDetailsRecord;
import com.jooq.jooq.model.tables.records.VendorKycDetailsHistoryRecord;
import com.jooq.jooq.model.tables.records.VendorKycDetailsRecord;
import com.jooq.jooq.model.tables.records.VendorLocationHistoryRecord;
import com.jooq.jooq.model.tables.records.VendorLocationRecord;
import com.jooq.jooq.model.tables.records.VendorMasterRecord;
import com.jooq.jooq.model.tables.records.VendorProfileHistoryRecord;
import com.jooq.jooq.model.tables.records.VendorProfileRecord;
import com.jooq.jooq.model.tables.records.VendorTurnoverHistoryRecord;
import com.jooq.jooq.model.tables.records.VendorTurnoverRecord;
import com.jooq.jooq.model.tables.records.VendorVehicleDetailsRecord;
import com.jooq.jooq.model.tables.records.VisitorRegisterRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * vendor_portal_pbx.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AgreementHaRecord> KEY_AGREEMENT_HA_PRIMARY = Internal.createUniqueKey(AgreementHa.AGREEMENT_HA, DSL.name("KEY_agreement_ha_PRIMARY"), new TableField[] { AgreementHa.AGREEMENT_HA.COMP_CODE, AgreementHa.AGREEMENT_HA.VENDOR_CODE, AgreementHa.AGREEMENT_HA.FISCAL_YEAR, AgreementHa.AGREEMENT_HA.AGREEMENT_NO }, true);
    public static final UniqueKey<AgreementLiRecord> KEY_AGREEMENT_LI_PRIMARY = Internal.createUniqueKey(AgreementLi.AGREEMENT_LI, DSL.name("KEY_agreement_li_PRIMARY"), new TableField[] { AgreementLi.AGREEMENT_LI.COMP_CODE, AgreementLi.AGREEMENT_LI.VENDOR_CODE, AgreementLi.AGREEMENT_LI.FISCAL_YEAR, AgreementLi.AGREEMENT_LI.AGREEMENT_NO, AgreementLi.AGREEMENT_LI.ACTIVITY_ID }, true);
    public static final UniqueKey<AnswerMasterRecord> KEY_ANSWER_MASTER_PRIMARY = Internal.createUniqueKey(AnswerMaster.ANSWER_MASTER, DSL.name("KEY_answer_master_PRIMARY"), new TableField[] { AnswerMaster.ANSWER_MASTER.ID }, true);
    public static final UniqueKey<ApReportRecord> KEY_AP_REPORT_PRIMARY = Internal.createUniqueKey(ApReport.AP_REPORT, DSL.name("KEY_ap_report_PRIMARY"), new TableField[] { ApReport.AP_REPORT.COMP_CODE, ApReport.AP_REPORT.VENDOR_CODE, ApReport.AP_REPORT.DOC_NO, ApReport.AP_REPORT.ITEM_NO, ApReport.AP_REPORT.FI_YEAR }, true);
    public static final UniqueKey<ApiTimeMasterRecord> KEY_API_TIME_MASTER_PRIMARY = Internal.createUniqueKey(ApiTimeMaster.API_TIME_MASTER, DSL.name("KEY_api_time_master_PRIMARY"), new TableField[] { ApiTimeMaster.API_TIME_MASTER.COMP_CODE, ApiTimeMaster.API_TIME_MASTER.ID }, true);
    public static final UniqueKey<ArReportRecord> KEY_AR_REPORT_PRIMARY = Internal.createUniqueKey(ArReport.AR_REPORT, DSL.name("KEY_ar_report_PRIMARY"), new TableField[] { ArReport.AR_REPORT.COMP_CODE, ArReport.AR_REPORT.CUSTOMER_CODE, ArReport.AR_REPORT.DOC_NO, ArReport.AR_REPORT.FI_YEAR, ArReport.AR_REPORT.ITEM_NO }, true);
    public static final UniqueKey<ArrearMasterRecord> KEY_ARREAR_MASTER_PRIMARY = Internal.createUniqueKey(ArrearMaster.ARREAR_MASTER, DSL.name("KEY_arrear_master_PRIMARY"), new TableField[] { ArrearMaster.ARREAR_MASTER.ARREAR_CODE }, true);
    public static final UniqueKey<AssetTrackerMasterRecord> KEY_ASSET_TRACKER_MASTER_PRIMARY = Internal.createUniqueKey(AssetTrackerMaster.ASSET_TRACKER_MASTER, DSL.name("KEY_asset_tracker_master_PRIMARY"), new TableField[] { AssetTrackerMaster.ASSET_TRACKER_MASTER.COMP_CODE, AssetTrackerMaster.ASSET_TRACKER_MASTER.ASSET_NO }, true);
    public static final UniqueKey<BillTypeMasterRecord> KEY_BILL_TYPE_MASTER_PRIMARY = Internal.createUniqueKey(BillTypeMaster.BILL_TYPE_MASTER, DSL.name("KEY_bill_type_master_PRIMARY"), new TableField[] { BillTypeMaster.BILL_TYPE_MASTER.BILL_TYPE_ID }, true);
    public static final UniqueKey<BotTagRecord> KEY_BOT_TAG_PRIMARY = Internal.createUniqueKey(BotTag.BOT_TAG, DSL.name("KEY_bot_tag_PRIMARY"), new TableField[] { BotTag.BOT_TAG.ID }, true);
    public static final UniqueKey<BpCustomerRecord> KEY_BP_CUSTOMER_PRIMARY = Internal.createUniqueKey(BpCustomer.BP_CUSTOMER, DSL.name("KEY_bp_customer_PRIMARY"), new TableField[] { BpCustomer.BP_CUSTOMER.ID }, true);
    public static final UniqueKey<BulkPaymentLiRecord> KEY_BULK_PAYMENT_LI_PRIMARY = Internal.createUniqueKey(BulkPaymentLi.BULK_PAYMENT_LI, DSL.name("KEY_bulk_payment_li_PRIMARY"), new TableField[] { BulkPaymentLi.BULK_PAYMENT_LI.BILL_NUM, BulkPaymentLi.BULK_PAYMENT_LI.PLANT, BulkPaymentLi.BULK_PAYMENT_LI.SS_DATE, BulkPaymentLi.BULK_PAYMENT_LI.SHIFT }, true);
    public static final UniqueKey<BulkPaymentLiArchRecord> KEY_BULK_PAYMENT_LI_ARCH_PRIMARY = Internal.createUniqueKey(BulkPaymentLiArch.BULK_PAYMENT_LI_ARCH, DSL.name("KEY_bulk_payment_li_arch_PRIMARY"), new TableField[] { BulkPaymentLiArch.BULK_PAYMENT_LI_ARCH.BILL_NUM, BulkPaymentLiArch.BULK_PAYMENT_LI_ARCH.PLANT, BulkPaymentLiArch.BULK_PAYMENT_LI_ARCH.SS_DATE, BulkPaymentLiArch.BULK_PAYMENT_LI_ARCH.SHIFT }, true);
    public static final UniqueKey<BumperSchemeRecord> KEY_BUMPER_SCHEME_PRIMARY = Internal.createUniqueKey(BumperScheme.BUMPER_SCHEME, DSL.name("KEY_bumper_scheme_PRIMARY"), new TableField[] { BumperScheme.BUMPER_SCHEME.COMP_CODE, BumperScheme.BUMPER_SCHEME.REGION, BumperScheme.BUMPER_SCHEME.DIVISION, BumperScheme.BUMPER_SCHEME.FROM_DATE, BumperScheme.BUMPER_SCHEME.TO_DATE, BumperScheme.BUMPER_SCHEME.CUSTOMER_CODE }, true);
    public static final UniqueKey<BumperSchemeFileRecord> KEY_BUMPER_SCHEME_FILE_PRIMARY = Internal.createUniqueKey(BumperSchemeFile.BUMPER_SCHEME_FILE, DSL.name("KEY_bumper_scheme_file_PRIMARY"), new TableField[] { BumperSchemeFile.BUMPER_SCHEME_FILE.COMP_CODE, BumperSchemeFile.BUMPER_SCHEME_FILE.DIVISION, BumperSchemeFile.BUMPER_SCHEME_FILE.REGION, BumperSchemeFile.BUMPER_SCHEME_FILE.FROM_DATE, BumperSchemeFile.BUMPER_SCHEME_FILE.TO_DATE }, true);
    public static final UniqueKey<CcComplaintTypeRecord> KEY_CC_COMPLAINT_TYPE_PRIMARY = Internal.createUniqueKey(CcComplaintType.CC_COMPLAINT_TYPE, DSL.name("KEY_cc_complaint_type_PRIMARY"), new TableField[] { CcComplaintType.CC_COMPLAINT_TYPE.COMPLAINT_ID }, true);
    public static final UniqueKey<CcDivisionRecord> KEY_CC_DIVISION_PRIMARY = Internal.createUniqueKey(CcDivision.CC_DIVISION, DSL.name("KEY_cc_division_PRIMARY"), new TableField[] { CcDivision.CC_DIVISION.DIVISION_ID }, true);
    public static final UniqueKey<CcHmbCompareRecord> KEY_CC_HMB_COMPARE_PRIMARY = Internal.createUniqueKey(CcHmbCompare.CC_HMB_COMPARE, DSL.name("KEY_cc_hmb_compare_PRIMARY"), new TableField[] { CcHmbCompare.CC_HMB_COMPARE.WERKS, CcHmbCompare.CC_HMB_COMPARE.SOCIETY, CcHmbCompare.CC_HMB_COMPARE.CRDAT, CcHmbCompare.CC_HMB_COMPARE.SHIFT }, true);
    public static final UniqueKey<CcMailContentRecord> KEY_CC_MAIL_CONTENT_PRIMARY = Internal.createUniqueKey(CcMailContent.CC_MAIL_CONTENT, DSL.name("KEY_cc_mail_content_PRIMARY"), new TableField[] { CcMailContent.CC_MAIL_CONTENT.TICKET_ID }, true);
    public static final UniqueKey<CcMailCustomerHierarchyRecord> KEY_CC_MAIL_CUSTOMER_HIERARCHY_PRIMARY = Internal.createUniqueKey(CcMailCustomerHierarchy.CC_MAIL_CUSTOMER_HIERARCHY, DSL.name("KEY_cc_mail_customer_hierarchy_PRIMARY"), new TableField[] { CcMailCustomerHierarchy.CC_MAIL_CUSTOMER_HIERARCHY.SNO }, true);
    public static final UniqueKey<CcTicketsHaRecord> KEY_CC_TICKETS_HA_PRIMARY = Internal.createUniqueKey(CcTicketsHa.CC_TICKETS_HA, DSL.name("KEY_cc_tickets_ha_PRIMARY"), new TableField[] { CcTicketsHa.CC_TICKETS_HA.COMP_CODE, CcTicketsHa.CC_TICKETS_HA.TICKET_ID }, true);
    public static final UniqueKey<CcUserTypeRecord> KEY_CC_USER_TYPE_PRIMARY = Internal.createUniqueKey(CcUserType.CC_USER_TYPE, DSL.name("KEY_cc_user_type_PRIMARY"), new TableField[] { CcUserType.CC_USER_TYPE.USER_TYPE_ID }, true);
    public static final UniqueKey<CcmsAllowanceHistoryRecord> KEY_CCMS_ALLOWANCE_HISTORY_PRIMARY = Internal.createUniqueKey(CcmsAllowanceHistory.CCMS_ALLOWANCE_HISTORY, DSL.name("KEY_ccms_allowance_history_PRIMARY"), new TableField[] { CcmsAllowanceHistory.CCMS_ALLOWANCE_HISTORY.ALLOWANCE_DATE, CcmsAllowanceHistory.CCMS_ALLOWANCE_HISTORY.SAL_YEAR, CcmsAllowanceHistory.CCMS_ALLOWANCE_HISTORY.SAL_MONTH, CcmsAllowanceHistory.CCMS_ALLOWANCE_HISTORY.EMP_CODE, CcmsAllowanceHistory.CCMS_ALLOWANCE_HISTORY.ALLOWANCE_TYPE, CcmsAllowanceHistory.CCMS_ALLOWANCE_HISTORY.PLANT_CODE }, true);
    public static final UniqueKey<CcmsAllowanceHistoryVendorRecord> KEY_CCMS_ALLOWANCE_HISTORY_VENDOR_PRIMARY = Internal.createUniqueKey(CcmsAllowanceHistoryVendor.CCMS_ALLOWANCE_HISTORY_VENDOR, DSL.name("KEY_ccms_allowance_history_vendor_PRIMARY"), new TableField[] { CcmsAllowanceHistoryVendor.CCMS_ALLOWANCE_HISTORY_VENDOR.SAL_YEAR, CcmsAllowanceHistoryVendor.CCMS_ALLOWANCE_HISTORY_VENDOR.SAL_MONTH, CcmsAllowanceHistoryVendor.CCMS_ALLOWANCE_HISTORY_VENDOR.VENDOR_CODE, CcmsAllowanceHistoryVendor.CCMS_ALLOWANCE_HISTORY_VENDOR.ALLOWANCE_TYPE, CcmsAllowanceHistoryVendor.CCMS_ALLOWANCE_HISTORY_VENDOR.PLANT_CODE }, true);
    public static final UniqueKey<CcmsAllowanceMasterRecord> KEY_CCMS_ALLOWANCE_MASTER_PRIMARY = Internal.createUniqueKey(CcmsAllowanceMaster.CCMS_ALLOWANCE_MASTER, DSL.name("KEY_ccms_allowance_master_PRIMARY"), new TableField[] { CcmsAllowanceMaster.CCMS_ALLOWANCE_MASTER.PLANT, CcmsAllowanceMaster.CCMS_ALLOWANCE_MASTER.INCENTIVE_TYPE, CcmsAllowanceMaster.CCMS_ALLOWANCE_MASTER.EFFECTIVE_FROM_DATE, CcmsAllowanceMaster.CCMS_ALLOWANCE_MASTER.VENDOR_CODE }, true);
    public static final UniqueKey<CcmsAllowanceMasterMappingRecord> KEY_CCMS_ALLOWANCE_MASTER_MAPPING_PRIMARY = Internal.createUniqueKey(CcmsAllowanceMasterMapping.CCMS_ALLOWANCE_MASTER_MAPPING, DSL.name("KEY_ccms_allowance_master_mapping_PRIMARY"), new TableField[] { CcmsAllowanceMasterMapping.CCMS_ALLOWANCE_MASTER_MAPPING.ALLOWANCE_ID, CcmsAllowanceMasterMapping.CCMS_ALLOWANCE_MASTER_MAPPING.PLANT }, true);
    public static final UniqueKey<CcmsAppTypeRecord> KEY_CCMS_APP_TYPE_PRIMARY = Internal.createUniqueKey(CcmsAppType.CCMS_APP_TYPE, DSL.name("KEY_ccms_app_type_PRIMARY"), new TableField[] { CcmsAppType.CCMS_APP_TYPE.ID }, true);
    public static final UniqueKey<CcmsAppVersionRecord> KEY_CCMS_APP_VERSION_PRIMARY = Internal.createUniqueKey(CcmsAppVersion.CCMS_APP_VERSION, DSL.name("KEY_ccms_app_version_PRIMARY"), new TableField[] { CcmsAppVersion.CCMS_APP_VERSION.APP_VERSION }, true);
    public static final UniqueKey<CcmsBonusMasterRecord> KEY_CCMS_BONUS_MASTER_PRIMARY = Internal.createUniqueKey(CcmsBonusMaster.CCMS_BONUS_MASTER, DSL.name("KEY_ccms_bonus_master_PRIMARY"), new TableField[] { CcmsBonusMaster.CCMS_BONUS_MASTER.USER_TYPE, CcmsBonusMaster.CCMS_BONUS_MASTER.START_DATE, CcmsBonusMaster.CCMS_BONUS_MASTER.END_DATE }, true);
    public static final UniqueKey<CcmsCanteenCleaningChargeRecord> KEY_CCMS_CANTEEN_CLEANING_CHARGE_PRIMARY = Internal.createUniqueKey(CcmsCanteenCleaningCharge.CCMS_CANTEEN_CLEANING_CHARGE, DSL.name("KEY_ccms_canteen_cleaning_charge_PRIMARY"), new TableField[] { CcmsCanteenCleaningCharge.CCMS_CANTEEN_CLEANING_CHARGE.PLANT, CcmsCanteenCleaningCharge.CCMS_CANTEEN_CLEANING_CHARGE.EFFECTIVE_DATE }, true);
    public static final UniqueKey<CcmsCanteenEntryRecord> KEY_CCMS_CANTEEN_ENTRY_PRIMARY = Internal.createUniqueKey(CcmsCanteenEntry.CCMS_CANTEEN_ENTRY, DSL.name("KEY_ccms_canteen_entry_PRIMARY"), new TableField[] { CcmsCanteenEntry.CCMS_CANTEEN_ENTRY.ID }, true);
    public static final UniqueKey<CcmsCanteenItemTypeMasterRecord> KEY_CCMS_CANTEEN_ITEM_TYPE_MASTER_PRIMARY = Internal.createUniqueKey(CcmsCanteenItemTypeMaster.CCMS_CANTEEN_ITEM_TYPE_MASTER, DSL.name("KEY_ccms_canteen_item_type_master_PRIMARY"), new TableField[] { CcmsCanteenItemTypeMaster.CCMS_CANTEEN_ITEM_TYPE_MASTER.ID }, true);
    public static final UniqueKey<CcmsCanteenMaterialMasterRecord> KEY_CCMS_CANTEEN_MATERIAL_MASTER_PRIMARY = Internal.createUniqueKey(CcmsCanteenMaterialMaster.CCMS_CANTEEN_MATERIAL_MASTER, DSL.name("KEY_ccms_canteen_material_master_PRIMARY"), new TableField[] { CcmsCanteenMaterialMaster.CCMS_CANTEEN_MATERIAL_MASTER.PLANT, CcmsCanteenMaterialMaster.CCMS_CANTEEN_MATERIAL_MASTER.MATERIAL_CODE, CcmsCanteenMaterialMaster.CCMS_CANTEEN_MATERIAL_MASTER.STRG_LOCATION, CcmsCanteenMaterialMaster.CCMS_CANTEEN_MATERIAL_MASTER.HSN_CODE, CcmsCanteenMaterialMaster.CCMS_CANTEEN_MATERIAL_MASTER.COST_CENTER, CcmsCanteenMaterialMaster.CCMS_CANTEEN_MATERIAL_MASTER.TYPE }, true);
    public static final UniqueKey<CcmsCanteenPoHeaderRecord> KEY_CCMS_CANTEEN_PO_HEADER_PRIMARY = Internal.createUniqueKey(CcmsCanteenPoHeader.CCMS_CANTEEN_PO_HEADER, DSL.name("KEY_ccms_canteen_po_header_PRIMARY"), new TableField[] { CcmsCanteenPoHeader.CCMS_CANTEEN_PO_HEADER.VENDOR, CcmsCanteenPoHeader.CCMS_CANTEEN_PO_HEADER.MONTH, CcmsCanteenPoHeader.CCMS_CANTEEN_PO_HEADER.YEAR, CcmsCanteenPoHeader.CCMS_CANTEEN_PO_HEADER.CYCLE, CcmsCanteenPoHeader.CCMS_CANTEEN_PO_HEADER.PLANT, CcmsCanteenPoHeader.CCMS_CANTEEN_PO_HEADER.MATERIAL_NO, CcmsCanteenPoHeader.CCMS_CANTEEN_PO_HEADER.STRG_LOCATION, CcmsCanteenPoHeader.CCMS_CANTEEN_PO_HEADER.PO_TYPE }, true);
    public static final UniqueKey<CcmsCanteenPoItemRecord> KEY_CCMS_CANTEEN_PO_ITEM_PRIMARY = Internal.createUniqueKey(CcmsCanteenPoItem.CCMS_CANTEEN_PO_ITEM, DSL.name("KEY_ccms_canteen_po_item_PRIMARY"), new TableField[] { CcmsCanteenPoItem.CCMS_CANTEEN_PO_ITEM.ID }, true);
    public static final UniqueKey<CcmsCanteenRateMasterRecord> KEY_CCMS_CANTEEN_RATE_MASTER_PRIMARY = Internal.createUniqueKey(CcmsCanteenRateMaster.CCMS_CANTEEN_RATE_MASTER, DSL.name("KEY_ccms_canteen_rate_master_PRIMARY"), new TableField[] { CcmsCanteenRateMaster.CCMS_CANTEEN_RATE_MASTER.PLANT, CcmsCanteenRateMaster.CCMS_CANTEEN_RATE_MASTER.MEAL_TYPE, CcmsCanteenRateMaster.CCMS_CANTEEN_RATE_MASTER.EFFECTIVE_FROM_DATE }, true);
    public static final UniqueKey<CcmsCanteenSpecialEntryRecord> KEY_CCMS_CANTEEN_SPECIAL_ENTRY_PRIMARY = Internal.createUniqueKey(CcmsCanteenSpecialEntry.CCMS_CANTEEN_SPECIAL_ENTRY, DSL.name("KEY_ccms_canteen_special_entry_PRIMARY"), new TableField[] { CcmsCanteenSpecialEntry.CCMS_CANTEEN_SPECIAL_ENTRY.ENTRY_DATE, CcmsCanteenSpecialEntry.CCMS_CANTEEN_SPECIAL_ENTRY.MEAL_TYPE, CcmsCanteenSpecialEntry.CCMS_CANTEEN_SPECIAL_ENTRY.PLANT_CODE }, true);
    public static final UniqueKey<CcmsCanteenVendorPlantMappingRecord> KEY_CCMS_CANTEEN_VENDOR_PLANT_MAPPING_PRIMARY = Internal.createUniqueKey(CcmsCanteenVendorPlantMapping.CCMS_CANTEEN_VENDOR_PLANT_MAPPING, DSL.name("KEY_ccms_canteen_vendor_plant_mapping_PRIMARY"), new TableField[] { CcmsCanteenVendorPlantMapping.CCMS_CANTEEN_VENDOR_PLANT_MAPPING.VENDOR_CODE, CcmsCanteenVendorPlantMapping.CCMS_CANTEEN_VENDOR_PLANT_MAPPING.PLANT }, true);
    public static final UniqueKey<CcmsCardHistoryRecord> KEY_CCMS_CARD_HISTORY_PRIMARY = Internal.createUniqueKey(CcmsCardHistory.CCMS_CARD_HISTORY, DSL.name("KEY_ccms_card_history_PRIMARY"), new TableField[] { CcmsCardHistory.CCMS_CARD_HISTORY.CARD_NO }, true);
    public static final UniqueKey<CcmsCardMasterRecord> KEY_CCMS_CARD_MASTER_PRIMARY = Internal.createUniqueKey(CcmsCardMaster.CCMS_CARD_MASTER, DSL.name("KEY_ccms_card_master_PRIMARY"), new TableField[] { CcmsCardMaster.CCMS_CARD_MASTER.CARD_NUMBER }, true);
    public static final UniqueKey<CcmsCardMasterRecord> KEY_CCMS_CARD_MASTER_UK_F3O20SFT5J5ASK4QSFYNI12LK = Internal.createUniqueKey(CcmsCardMaster.CCMS_CARD_MASTER, DSL.name("KEY_ccms_card_master_UK_f3o20sft5j5ask4qsfyni12lk"), new TableField[] { CcmsCardMaster.CCMS_CARD_MASTER.CARD_NUMBER }, true);
    public static final UniqueKey<CcmsCardNumrangeRecord> KEY_CCMS_CARD_NUMRANGE_PRIMARY = Internal.createUniqueKey(CcmsCardNumrange.CCMS_CARD_NUMRANGE, DSL.name("KEY_ccms_card_numrange_PRIMARY"), new TableField[] { CcmsCardNumrange.CCMS_CARD_NUMRANGE.PLANT_CODE }, true);
    public static final UniqueKey<CcmsCcMasterRecord> KEY_CCMS_CC_MASTER_PRIMARY = Internal.createUniqueKey(CcmsCcMaster.CCMS_CC_MASTER, DSL.name("KEY_ccms_cc_master_PRIMARY"), new TableField[] { CcmsCcMaster.CCMS_CC_MASTER.CC_NAME, CcmsCcMaster.CCMS_CC_MASTER.DEPT, CcmsCcMaster.CCMS_CC_MASTER.CC_CODE, CcmsCcMaster.CCMS_CC_MASTER.DIVISION, CcmsCcMaster.CCMS_CC_MASTER.PLANT }, true);
    public static final UniqueKey<CcmsClSupervisorRecord> KEY_CCMS_CL_SUPERVISOR_PRIMARY = Internal.createUniqueKey(CcmsClSupervisor.CCMS_CL_SUPERVISOR, DSL.name("KEY_ccms_cl_supervisor_PRIMARY"), new TableField[] { CcmsClSupervisor.CCMS_CL_SUPERVISOR.PLANT, CcmsClSupervisor.CCMS_CL_SUPERVISOR.VENDOR, CcmsClSupervisor.CCMS_CL_SUPERVISOR.EMP_CODE }, true);
    public static final UniqueKey<CcmsContractorPfMasterRecord> KEY_CCMS_CONTRACTOR_PF_MASTER_PRIMARY = Internal.createUniqueKey(CcmsContractorPfMaster.CCMS_CONTRACTOR_PF_MASTER, DSL.name("KEY_ccms_contractor_pf_master_PRIMARY"), new TableField[] { CcmsContractorPfMaster.CCMS_CONTRACTOR_PF_MASTER.NAME }, true);
    public static final UniqueKey<CcmsDepartmentMasterRecord> KEY_CCMS_DEPARTMENT_MASTER_PRIMARY = Internal.createUniqueKey(CcmsDepartmentMaster.CCMS_DEPARTMENT_MASTER, DSL.name("KEY_ccms_department_master_PRIMARY"), new TableField[] { CcmsDepartmentMaster.CCMS_DEPARTMENT_MASTER.NAME, CcmsDepartmentMaster.CCMS_DEPARTMENT_MASTER.DIVISION }, true);
    public static final UniqueKey<CcmsEmpSalaryDeductionRecord> KEY_CCMS_EMP_SALARY_DEDUCTION_PRIMARY = Internal.createUniqueKey(CcmsEmpSalaryDeduction.CCMS_EMP_SALARY_DEDUCTION, DSL.name("KEY_ccms_emp_salary_deduction_PRIMARY"), new TableField[] { CcmsEmpSalaryDeduction.CCMS_EMP_SALARY_DEDUCTION.EMPLOYEE_CODE }, true);
    public static final UniqueKey<CcmsEmpSecQstnAnsRecord> KEY_CCMS_EMP_SEC_QSTN_ANS_PRIMARY = Internal.createUniqueKey(CcmsEmpSecQstnAns.CCMS_EMP_SEC_QSTN_ANS, DSL.name("KEY_ccms_emp_sec_qstn_ans_PRIMARY"), new TableField[] { CcmsEmpSecQstnAns.CCMS_EMP_SEC_QSTN_ANS.ID }, true);
    public static final UniqueKey<CcmsEmployeeRecord> KEY_CCMS_EMPLOYEE_PRIMARY = Internal.createUniqueKey(CcmsEmployee.CCMS_EMPLOYEE, DSL.name("KEY_ccms_employee_PRIMARY"), new TableField[] { CcmsEmployee.CCMS_EMPLOYEE.EMP_CODE }, true);
    public static final UniqueKey<CcmsEmployeeDesignationMappingRecord> KEY_CCMS_EMPLOYEE_DESIGNATION_MAPPING_PRIMARY = Internal.createUniqueKey(CcmsEmployeeDesignationMapping.CCMS_EMPLOYEE_DESIGNATION_MAPPING, DSL.name("KEY_ccms_employee_designation_mapping_PRIMARY"), new TableField[] { CcmsEmployeeDesignationMapping.CCMS_EMPLOYEE_DESIGNATION_MAPPING.TYPE, CcmsEmployeeDesignationMapping.CCMS_EMPLOYEE_DESIGNATION_MAPPING.DESIGNATION }, true);
    public static final UniqueKey<CcmsEmployeeTypeRecord> KEY_CCMS_EMPLOYEE_TYPE_PRIMARY = Internal.createUniqueKey(CcmsEmployeeType.CCMS_EMPLOYEE_TYPE, DSL.name("KEY_ccms_employee_type_PRIMARY"), new TableField[] { CcmsEmployeeType.CCMS_EMPLOYEE_TYPE.ID }, true);
    public static final UniqueKey<CcmsEsiExcludedPlantRecord> KEY_CCMS_ESI_EXCLUDED_PLANT_PRIMARY = Internal.createUniqueKey(CcmsEsiExcludedPlant.CCMS_ESI_EXCLUDED_PLANT, DSL.name("KEY_ccms_esi_excluded_plant_PRIMARY"), new TableField[] { CcmsEsiExcludedPlant.CCMS_ESI_EXCLUDED_PLANT.PLANT_CODE }, true);
    public static final UniqueKey<CcmsFreeMealMappingRecord> KEY_CCMS_FREE_MEAL_MAPPING_PRIMARY = Internal.createUniqueKey(CcmsFreeMealMapping.CCMS_FREE_MEAL_MAPPING, DSL.name("KEY_ccms_free_meal_mapping_PRIMARY"), new TableField[] { CcmsFreeMealMapping.CCMS_FREE_MEAL_MAPPING.PLANT, CcmsFreeMealMapping.CCMS_FREE_MEAL_MAPPING.SHIFT_ID, CcmsFreeMealMapping.CCMS_FREE_MEAL_MAPPING.FREE_MEAL_ID }, true);
    public static final UniqueKey<CcmsGateEntryRecord> KEY_CCMS_GATE_ENTRY_PRIMARY = Internal.createUniqueKey(CcmsGateEntry.CCMS_GATE_ENTRY, DSL.name("KEY_ccms_gate_entry_PRIMARY"), new TableField[] { CcmsGateEntry.CCMS_GATE_ENTRY.ID }, true);
    public static final UniqueKey<CcmsGstMasterRecord> KEY_CCMS_GST_MASTER_PRIMARY = Internal.createUniqueKey(CcmsGstMaster.CCMS_GST_MASTER, DSL.name("KEY_ccms_gst_master_PRIMARY"), new TableField[] { CcmsGstMaster.CCMS_GST_MASTER.STATE, CcmsGstMaster.CCMS_GST_MASTER.PLANT }, true);
    public static final UniqueKey<CcmsGuestDataRecord> KEY_CCMS_GUEST_DATA_PASS_NO_UNIQUE = Internal.createUniqueKey(CcmsGuestData.CCMS_GUEST_DATA, DSL.name("KEY_ccms_guest_data_pass_no_UNIQUE"), new TableField[] { CcmsGuestData.CCMS_GUEST_DATA.PASS_NO }, true);
    public static final UniqueKey<CcmsGuestDataRecord> KEY_CCMS_GUEST_DATA_PRIMARY = Internal.createUniqueKey(CcmsGuestData.CCMS_GUEST_DATA, DSL.name("KEY_ccms_guest_data_PRIMARY"), new TableField[] { CcmsGuestData.CCMS_GUEST_DATA.YEAR, CcmsGuestData.CCMS_GUEST_DATA.VISITOR_REG_ID, CcmsGuestData.CCMS_GUEST_DATA.PASS_NO }, true);
    public static final UniqueKey<CcmsGuestDetailsRecord> KEY_CCMS_GUEST_DETAILS_PRIMARY = Internal.createUniqueKey(CcmsGuestDetails.CCMS_GUEST_DETAILS, DSL.name("KEY_ccms_guest_details_PRIMARY"), new TableField[] { CcmsGuestDetails.CCMS_GUEST_DETAILS.EMP_ID, CcmsGuestDetails.CCMS_GUEST_DETAILS.MEAL_SHIFT, CcmsGuestDetails.CCMS_GUEST_DETAILS.MEAL_DATE, CcmsGuestDetails.CCMS_GUEST_DETAILS.PLANT_CODE }, true);
    public static final UniqueKey<CcmsGuestDetailsNewRecord> KEY_CCMS_GUEST_DETAILS_NEW_PRIMARY = Internal.createUniqueKey(CcmsGuestDetailsNew.CCMS_GUEST_DETAILS_NEW, DSL.name("KEY_ccms_guest_details_new_PRIMARY"), new TableField[] { CcmsGuestDetailsNew.CCMS_GUEST_DETAILS_NEW.EMP_CODE, CcmsGuestDetailsNew.CCMS_GUEST_DETAILS_NEW.MEAL_DATE, CcmsGuestDetailsNew.CCMS_GUEST_DETAILS_NEW.MEAL_SHIFT, CcmsGuestDetailsNew.CCMS_GUEST_DETAILS_NEW.PLANT_CODE }, true);
    public static final UniqueKey<CcmsHapGateEntryRecord> KEY_CCMS_HAP_GATE_ENTRY_PRIMARY = Internal.createUniqueKey(CcmsHapGateEntry.CCMS_HAP_GATE_ENTRY, DSL.name("KEY_ccms_hap_gate_entry_PRIMARY"), new TableField[] { CcmsHapGateEntry.CCMS_HAP_GATE_ENTRY.EMP_CODE, CcmsHapGateEntry.CCMS_HAP_GATE_ENTRY.PUNCH_DATE, CcmsHapGateEntry.CCMS_HAP_GATE_ENTRY.IN_TIME }, true);
    public static final UniqueKey<CcmsHolidaysListRecord> KEY_CCMS_HOLIDAYS_LIST_PRIMARY = Internal.createUniqueKey(CcmsHolidaysList.CCMS_HOLIDAYS_LIST, DSL.name("KEY_ccms_holidays_list_PRIMARY"), new TableField[] { CcmsHolidaysList.CCMS_HOLIDAYS_LIST.STATE, CcmsHolidaysList.CCMS_HOLIDAYS_LIST.YEAR, CcmsHolidaysList.CCMS_HOLIDAYS_LIST.DATE }, true);
    public static final UniqueKey<CcmsLabourCategoryMasterRecord> KEY_CCMS_LABOUR_CATEGORY_MASTER_PRIMARY = Internal.createUniqueKey(CcmsLabourCategoryMaster.CCMS_LABOUR_CATEGORY_MASTER, DSL.name("KEY_ccms_labour_category_master_PRIMARY"), new TableField[] { CcmsLabourCategoryMaster.CCMS_LABOUR_CATEGORY_MASTER.ID }, true);
    public static final UniqueKey<CcmsLabourShiftMasterRecord> KEY_CCMS_LABOUR_SHIFT_MASTER_PRIMARY = Internal.createUniqueKey(CcmsLabourShiftMaster.CCMS_LABOUR_SHIFT_MASTER, DSL.name("KEY_ccms_labour_shift_master_PRIMARY"), new TableField[] { CcmsLabourShiftMaster.CCMS_LABOUR_SHIFT_MASTER.PLANT, CcmsLabourShiftMaster.CCMS_LABOUR_SHIFT_MASTER.SHIFT_NAME }, true);
    public static final UniqueKey<CcmsLwfMasterRecord> KEY_CCMS_LWF_MASTER_PRIMARY = Internal.createUniqueKey(CcmsLwfMaster.CCMS_LWF_MASTER, DSL.name("KEY_ccms_lwf_master_PRIMARY"), new TableField[] { CcmsLwfMaster.CCMS_LWF_MASTER.YEAR, CcmsLwfMaster.CCMS_LWF_MASTER.MONTH }, true);
    public static final UniqueKey<CcmsMaterialMasterRecord> KEY_CCMS_MATERIAL_MASTER_PRIMARY = Internal.createUniqueKey(CcmsMaterialMaster.CCMS_MATERIAL_MASTER, DSL.name("KEY_ccms_material_master_PRIMARY"), new TableField[] { CcmsMaterialMaster.CCMS_MATERIAL_MASTER.MAT_NUMBER, CcmsMaterialMaster.CCMS_MATERIAL_MASTER.PLANT }, true);
    public static final UniqueKey<CcmsMealDeductionHistoryRecord> KEY_CCMS_MEAL_DEDUCTION_HISTORY_PRIMARY = Internal.createUniqueKey(CcmsMealDeductionHistory.CCMS_MEAL_DEDUCTION_HISTORY, DSL.name("KEY_ccms_meal_deduction_history_PRIMARY"), new TableField[] { CcmsMealDeductionHistory.CCMS_MEAL_DEDUCTION_HISTORY.EMP_CODE, CcmsMealDeductionHistory.CCMS_MEAL_DEDUCTION_HISTORY.PLANT, CcmsMealDeductionHistory.CCMS_MEAL_DEDUCTION_HISTORY.YEAR, CcmsMealDeductionHistory.CCMS_MEAL_DEDUCTION_HISTORY.MONTH, CcmsMealDeductionHistory.CCMS_MEAL_DEDUCTION_HISTORY.PUNCH_DATE, CcmsMealDeductionHistory.CCMS_MEAL_DEDUCTION_HISTORY.CANTEEN_ID }, true);
    public static final UniqueKey<CcmsMotherTongueRecord> KEY_CCMS_MOTHER_TONGUE_PRIMARY = Internal.createUniqueKey(CcmsMotherTongue.CCMS_MOTHER_TONGUE, DSL.name("KEY_ccms_mother_tongue_PRIMARY"), new TableField[] { CcmsMotherTongue.CCMS_MOTHER_TONGUE.NAME }, true);
    public static final UniqueKey<CcmsMspCategoryListRecord> KEY_CCMS_MSP_CATEGORY_LIST_PRIMARY = Internal.createUniqueKey(CcmsMspCategoryList.CCMS_MSP_CATEGORY_LIST, DSL.name("KEY_ccms_msp_category_list_PRIMARY"), new TableField[] { CcmsMspCategoryList.CCMS_MSP_CATEGORY_LIST.ID }, true);
    public static final UniqueKey<CcmsMspCustomerDetailsRecord> KEY_CCMS_MSP_CUSTOMER_DETAILS_PRIMARY = Internal.createUniqueKey(CcmsMspCustomerDetails.CCMS_MSP_CUSTOMER_DETAILS, DSL.name("KEY_ccms_msp_customer_details_PRIMARY"), new TableField[] { CcmsMspCustomerDetails.CCMS_MSP_CUSTOMER_DETAILS.CUSTOMER_CODE }, true);
    public static final UniqueKey<CcmsMspOutletEntryRecord> KEY_CCMS_MSP_OUTLET_ENTRY_PRIMARY = Internal.createUniqueKey(CcmsMspOutletEntry.CCMS_MSP_OUTLET_ENTRY, DSL.name("KEY_ccms_msp_outlet_entry_PRIMARY"), new TableField[] { CcmsMspOutletEntry.CCMS_MSP_OUTLET_ENTRY.YEAR, CcmsMspOutletEntry.CCMS_MSP_OUTLET_ENTRY.MONTH, CcmsMspOutletEntry.CCMS_MSP_OUTLET_ENTRY.CYCLE, CcmsMspOutletEntry.CCMS_MSP_OUTLET_ENTRY.VENDOR, CcmsMspOutletEntry.CCMS_MSP_OUTLET_ENTRY.CATEGORY }, true);
    public static final UniqueKey<CcmsMspPoHeaderRecord> KEY_CCMS_MSP_PO_HEADER_PRIMARY = Internal.createUniqueKey(CcmsMspPoHeader.CCMS_MSP_PO_HEADER, DSL.name("KEY_ccms_msp_po_header_PRIMARY"), new TableField[] { CcmsMspPoHeader.CCMS_MSP_PO_HEADER.VENDOR, CcmsMspPoHeader.CCMS_MSP_PO_HEADER.MONTH, CcmsMspPoHeader.CCMS_MSP_PO_HEADER.YEAR, CcmsMspPoHeader.CCMS_MSP_PO_HEADER.CATEGORY, CcmsMspPoHeader.CCMS_MSP_PO_HEADER.CYCLE, CcmsMspPoHeader.CCMS_MSP_PO_HEADER.STRG_LOCATION, CcmsMspPoHeader.CCMS_MSP_PO_HEADER.PO_TYPE }, true);
    public static final UniqueKey<CcmsMspPoItemRecord> KEY_CCMS_MSP_PO_ITEM_PRIMARY = Internal.createUniqueKey(CcmsMspPoItem.CCMS_MSP_PO_ITEM, DSL.name("KEY_ccms_msp_po_item_PRIMARY"), new TableField[] { CcmsMspPoItem.CCMS_MSP_PO_ITEM.ID }, true);
    public static final UniqueKey<CcmsMspRateMasterRecord> KEY_CCMS_MSP_RATE_MASTER_PRIMARY = Internal.createUniqueKey(CcmsMspRateMaster.CCMS_MSP_RATE_MASTER, DSL.name("KEY_ccms_msp_rate_master_PRIMARY"), new TableField[] { CcmsMspRateMaster.CCMS_MSP_RATE_MASTER.OUTLET_CATEGORY, CcmsMspRateMaster.CCMS_MSP_RATE_MASTER.EFFECTIVE_FROM_DATE }, true);
    public static final UniqueKey<CcmsMspVendorCustomerMappingRecord> KEY_CCMS_MSP_VENDOR_CUSTOMER_MAPPING_PRIMARY = Internal.createUniqueKey(CcmsMspVendorCustomerMapping.CCMS_MSP_VENDOR_CUSTOMER_MAPPING, DSL.name("KEY_ccms_msp_vendor_customer_mapping_PRIMARY"), new TableField[] { CcmsMspVendorCustomerMapping.CCMS_MSP_VENDOR_CUSTOMER_MAPPING.YEAR, CcmsMspVendorCustomerMapping.CCMS_MSP_VENDOR_CUSTOMER_MAPPING.MONTH, CcmsMspVendorCustomerMapping.CCMS_MSP_VENDOR_CUSTOMER_MAPPING.CATEGORY, CcmsMspVendorCustomerMapping.CCMS_MSP_VENDOR_CUSTOMER_MAPPING.VENDOR_CODE, CcmsMspVendorCustomerMapping.CCMS_MSP_VENDOR_CUSTOMER_MAPPING.CUSTOMER_CODE }, true);
    public static final UniqueKey<CcmsMspVendorInvoiceDetailsRecord> KEY_CCMS_MSP_VENDOR_INVOICE_DETAILS_PRIMARY = Internal.createUniqueKey(CcmsMspVendorInvoiceDetails.CCMS_MSP_VENDOR_INVOICE_DETAILS, DSL.name("KEY_ccms_msp_vendor_invoice_details_PRIMARY"), new TableField[] { CcmsMspVendorInvoiceDetails.CCMS_MSP_VENDOR_INVOICE_DETAILS.VENDOR }, true);
    public static final UniqueKey<CcmsOclActivityMasterRecord> KEY_CCMS_OCL_ACTIVITY_MASTER_PRIMARY = Internal.createUniqueKey(CcmsOclActivityMaster.CCMS_OCL_ACTIVITY_MASTER, DSL.name("KEY_ccms_ocl_activity_master_PRIMARY"), new TableField[] { CcmsOclActivityMaster.CCMS_OCL_ACTIVITY_MASTER.NAME }, true);
    public static final UniqueKey<CcmsOclPlantSqftAreaRecord> KEY_CCMS_OCL_PLANT_SQFT_AREA_PRIMARY = Internal.createUniqueKey(CcmsOclPlantSqftArea.CCMS_OCL_PLANT_SQFT_AREA, DSL.name("KEY_ccms_ocl_plant_sqft_area_PRIMARY"), new TableField[] { CcmsOclPlantSqftArea.CCMS_OCL_PLANT_SQFT_AREA.EFFECTIVE_FROM, CcmsOclPlantSqftArea.CCMS_OCL_PLANT_SQFT_AREA.PLANT }, true);
    public static final UniqueKey<CcmsOclUomRecord> KEY_CCMS_OCL_UOM_PRIMARY = Internal.createUniqueKey(CcmsOclUom.CCMS_OCL_UOM, DSL.name("KEY_ccms_ocl_uom_PRIMARY"), new TableField[] { CcmsOclUom.CCMS_OCL_UOM.UOM }, true);
    public static final UniqueKey<CcmsOclVendorRateMasterRecord> KEY_CCMS_OCL_VENDOR_RATE_MASTER_PRIMARY = Internal.createUniqueKey(CcmsOclVendorRateMaster.CCMS_OCL_VENDOR_RATE_MASTER, DSL.name("KEY_ccms_ocl_vendor_rate_master_PRIMARY"), new TableField[] { CcmsOclVendorRateMaster.CCMS_OCL_VENDOR_RATE_MASTER.EFFECTIVE_FROM, CcmsOclVendorRateMaster.CCMS_OCL_VENDOR_RATE_MASTER.DEPARTMENT, CcmsOclVendorRateMaster.CCMS_OCL_VENDOR_RATE_MASTER.PLANT, CcmsOclVendorRateMaster.CCMS_OCL_VENDOR_RATE_MASTER.VENDOR, CcmsOclVendorRateMaster.CCMS_OCL_VENDOR_RATE_MASTER.UOM }, true);
    public static final UniqueKey<CcmsOtHoursRecord> KEY_CCMS_OT_HOURS_PRIMARY = Internal.createUniqueKey(CcmsOtHours.CCMS_OT_HOURS, DSL.name("KEY_ccms_ot_hours_PRIMARY"), new TableField[] { CcmsOtHours.CCMS_OT_HOURS.WORK_TIME }, true);
    public static final UniqueKey<CcmsPlantAdminHrMappingRecord> KEY_CCMS_PLANT_ADMIN_HR_MAPPING_PRIMARY = Internal.createUniqueKey(CcmsPlantAdminHrMapping.CCMS_PLANT_ADMIN_HR_MAPPING, DSL.name("KEY_ccms_plant_admin_hr_mapping_PRIMARY"), new TableField[] { CcmsPlantAdminHrMapping.CCMS_PLANT_ADMIN_HR_MAPPING.PLANT, CcmsPlantAdminHrMapping.CCMS_PLANT_ADMIN_HR_MAPPING.USER }, true);
    public static final UniqueKey<CcmsPoHeaderRecord> KEY_CCMS_PO_HEADER_PRIMARY = Internal.createUniqueKey(CcmsPoHeader.CCMS_PO_HEADER, DSL.name("KEY_ccms_po_header_PRIMARY"), new TableField[] { CcmsPoHeader.CCMS_PO_HEADER.VENDOR, CcmsPoHeader.CCMS_PO_HEADER.MONTH, CcmsPoHeader.CCMS_PO_HEADER.YEAR, CcmsPoHeader.CCMS_PO_HEADER.EMP_TYPE, CcmsPoHeader.CCMS_PO_HEADER.PLANT, CcmsPoHeader.CCMS_PO_HEADER.MATERIAL_NO, CcmsPoHeader.CCMS_PO_HEADER.STRG_LOCATION }, true);
    public static final UniqueKey<CcmsPoItemRecord> KEY_CCMS_PO_ITEM_PRIMARY = Internal.createUniqueKey(CcmsPoItem.CCMS_PO_ITEM, DSL.name("KEY_ccms_po_item_PRIMARY"), new TableField[] { CcmsPoItem.CCMS_PO_ITEM.ID }, true);
    public static final UniqueKey<CcmsSalaryDeductionMasterRecord> KEY_CCMS_SALARY_DEDUCTION_MASTER_PRIMARY = Internal.createUniqueKey(CcmsSalaryDeductionMaster.CCMS_SALARY_DEDUCTION_MASTER, DSL.name("KEY_ccms_salary_deduction_master_PRIMARY"), new TableField[] { CcmsSalaryDeductionMaster.CCMS_SALARY_DEDUCTION_MASTER.NAME }, true);
    public static final UniqueKey<CcmsSalaryHistoryRecord> KEY_CCMS_SALARY_HISTORY_PRIMARY = Internal.createUniqueKey(CcmsSalaryHistory.CCMS_SALARY_HISTORY, DSL.name("KEY_ccms_salary_history_PRIMARY"), new TableField[] { CcmsSalaryHistory.CCMS_SALARY_HISTORY.EMPLOYEE_CODE, CcmsSalaryHistory.CCMS_SALARY_HISTORY.SALARY_DATE, CcmsSalaryHistory.CCMS_SALARY_HISTORY.PLANT_CODE }, true);
    public static final UniqueKey<CcmsSalaryHoldDetailsRecord> KEY_CCMS_SALARY_HOLD_DETAILS_PRIMARY = Internal.createUniqueKey(CcmsSalaryHoldDetails.CCMS_SALARY_HOLD_DETAILS, DSL.name("KEY_ccms_salary_hold_details_PRIMARY"), new TableField[] { CcmsSalaryHoldDetails.CCMS_SALARY_HOLD_DETAILS.YEAR, CcmsSalaryHoldDetails.CCMS_SALARY_HOLD_DETAILS.MONTH, CcmsSalaryHoldDetails.CCMS_SALARY_HOLD_DETAILS.EMP_CODE }, true);
    public static final UniqueKey<CcmsSalaryMonthlyRecord> KEY_CCMS_SALARY_MONTHLY_PRIMARY = Internal.createUniqueKey(CcmsSalaryMonthly.CCMS_SALARY_MONTHLY, DSL.name("KEY_ccms_salary_monthly_PRIMARY"), new TableField[] { CcmsSalaryMonthly.CCMS_SALARY_MONTHLY.EMPLOYEE_CODE, CcmsSalaryMonthly.CCMS_SALARY_MONTHLY.SALARY_MONTH, CcmsSalaryMonthly.CCMS_SALARY_MONTHLY.PLANT_CODE, CcmsSalaryMonthly.CCMS_SALARY_MONTHLY.SALARY_YEAR }, true);
    public static final UniqueKey<CcmsSalaryMonthlyNewRecord> KEY_CCMS_SALARY_MONTHLY_NEW_PRIMARY = Internal.createUniqueKey(CcmsSalaryMonthlyNew.CCMS_SALARY_MONTHLY_NEW, DSL.name("KEY_ccms_salary_monthly_new_PRIMARY"), new TableField[] { CcmsSalaryMonthlyNew.CCMS_SALARY_MONTHLY_NEW.EMPLOYEE_CODE, CcmsSalaryMonthlyNew.CCMS_SALARY_MONTHLY_NEW.SALARY_MONTH, CcmsSalaryMonthlyNew.CCMS_SALARY_MONTHLY_NEW.PLANT_CODE, CcmsSalaryMonthlyNew.CCMS_SALARY_MONTHLY_NEW.SALARY_YEAR }, true);
    public static final UniqueKey<CcmsSapLogonRecord> KEY_CCMS_SAP_LOGON_PRIMARY = Internal.createUniqueKey(CcmsSapLogon.CCMS_SAP_LOGON, DSL.name("KEY_ccms_sap_logon_PRIMARY"), new TableField[] { CcmsSapLogon.CCMS_SAP_LOGON.PLANT_CODE, CcmsSapLogon.CCMS_SAP_LOGON.USER_ID }, true);
    public static final UniqueKey<CcmsSecurityQuestionsRecord> KEY_CCMS_SECURITY_QUESTIONS_PRIMARY = Internal.createUniqueKey(CcmsSecurityQuestions.CCMS_SECURITY_QUESTIONS, DSL.name("KEY_ccms_security_questions_PRIMARY"), new TableField[] { CcmsSecurityQuestions.CCMS_SECURITY_QUESTIONS.ID }, true);
    public static final UniqueKey<CcmsSecurityTypeMasterRecord> KEY_CCMS_SECURITY_TYPE_MASTER_PRIMARY = Internal.createUniqueKey(CcmsSecurityTypeMaster.CCMS_SECURITY_TYPE_MASTER, DSL.name("KEY_ccms_security_type_master_PRIMARY"), new TableField[] { CcmsSecurityTypeMaster.CCMS_SECURITY_TYPE_MASTER.ID }, true);
    public static final UniqueKey<CcmsSecurityWagesMasterRecord> KEY_CCMS_SECURITY_WAGES_MASTER_PRIMARY = Internal.createUniqueKey(CcmsSecurityWagesMaster.CCMS_SECURITY_WAGES_MASTER, DSL.name("KEY_ccms_security_wages_master_PRIMARY"), new TableField[] { CcmsSecurityWagesMaster.CCMS_SECURITY_WAGES_MASTER.PLANT, CcmsSecurityWagesMaster.CCMS_SECURITY_WAGES_MASTER.VENDOR, CcmsSecurityWagesMaster.CCMS_SECURITY_WAGES_MASTER.SECURITY_TYPE }, true);
    public static final UniqueKey<CcmsServiceChargeMasterRecord> KEY_CCMS_SERVICE_CHARGE_MASTER_PRIMARY = Internal.createUniqueKey(CcmsServiceChargeMaster.CCMS_SERVICE_CHARGE_MASTER, DSL.name("KEY_ccms_service_charge_master_PRIMARY"), new TableField[] { CcmsServiceChargeMaster.CCMS_SERVICE_CHARGE_MASTER.ID }, true);
    public static final UniqueKey<CcmsShiftMasterRecord> KEY_CCMS_SHIFT_MASTER_PRIMARY = Internal.createUniqueKey(CcmsShiftMaster.CCMS_SHIFT_MASTER, DSL.name("KEY_ccms_shift_master_PRIMARY"), new TableField[] { CcmsShiftMaster.CCMS_SHIFT_MASTER.ID }, true);
    public static final UniqueKey<CcmsStatePlantMappingRecord> KEY_CCMS_STATE_PLANT_MAPPING_PRIMARY = Internal.createUniqueKey(CcmsStatePlantMapping.CCMS_STATE_PLANT_MAPPING, DSL.name("KEY_ccms_state_plant_mapping_PRIMARY"), new TableField[] { CcmsStatePlantMapping.CCMS_STATE_PLANT_MAPPING.STATE, CcmsStatePlantMapping.CCMS_STATE_PLANT_MAPPING.PLANT }, true);
    public static final UniqueKey<CcmsStatusMasterRecord> KEY_CCMS_STATUS_MASTER_PRIMARY = Internal.createUniqueKey(CcmsStatusMaster.CCMS_STATUS_MASTER, DSL.name("KEY_ccms_status_master_PRIMARY"), new TableField[] { CcmsStatusMaster.CCMS_STATUS_MASTER.ID }, true);
    public static final UniqueKey<CcmsStorageLocationMasterRecord> KEY_CCMS_STORAGE_LOCATION_MASTER_PRIMARY = Internal.createUniqueKey(CcmsStorageLocationMaster.CCMS_STORAGE_LOCATION_MASTER, DSL.name("KEY_ccms_storage_location_master_PRIMARY"), new TableField[] { CcmsStorageLocationMaster.CCMS_STORAGE_LOCATION_MASTER.COST_CENTER }, true);
    public static final UniqueKey<CcmsTabInfoRecord> KEY_CCMS_TAB_INFO_PRIMARY = Internal.createUniqueKey(CcmsTabInfo.CCMS_TAB_INFO, DSL.name("KEY_ccms_tab_info_PRIMARY"), new TableField[] { CcmsTabInfo.CCMS_TAB_INFO.DEVICE_ID }, true);
    public static final UniqueKey<CcmsTabUserMasterRecord> KEY_CCMS_TAB_USER_MASTER_PRIMARY = Internal.createUniqueKey(CcmsTabUserMaster.CCMS_TAB_USER_MASTER, DSL.name("KEY_ccms_tab_user_master_PRIMARY"), new TableField[] { CcmsTabUserMaster.CCMS_TAB_USER_MASTER.EMAIL, CcmsTabUserMaster.CCMS_TAB_USER_MASTER.PLANT_CODE, CcmsTabUserMaster.CCMS_TAB_USER_MASTER.DEVICE_ID }, true);
    public static final UniqueKey<CcmsUserSapMappingRecord> KEY_CCMS_USER_SAP_MAPPING_PRIMARY = Internal.createUniqueKey(CcmsUserSapMapping.CCMS_USER_SAP_MAPPING, DSL.name("KEY_ccms_user_sap_mapping_PRIMARY"), new TableField[] { CcmsUserSapMapping.CCMS_USER_SAP_MAPPING.USER_ID }, true);
    public static final UniqueKey<CcmsVaccineRecord> KEY_CCMS_VACCINE_PRIMARY = Internal.createUniqueKey(CcmsVaccine.CCMS_VACCINE, DSL.name("KEY_ccms_vaccine_PRIMARY"), new TableField[] { CcmsVaccine.CCMS_VACCINE.CONTRACTOR_CODE, CcmsVaccine.CCMS_VACCINE.EMP_CODE, CcmsVaccine.CCMS_VACCINE.EMP_TYPE, CcmsVaccine.CCMS_VACCINE.VACCINATION_TAKEN, CcmsVaccine.CCMS_VACCINE.DOSE_TAKEN }, true);
    public static final UniqueKey<CcmsVendorCodeRecord> KEY_CCMS_VENDOR_CODE_PRIMARY = Internal.createUniqueKey(CcmsVendorCode.CCMS_VENDOR_CODE, DSL.name("KEY_ccms_vendor_code_PRIMARY"), new TableField[] { CcmsVendorCode.CCMS_VENDOR_CODE.VENDOR_CODE }, true);
    public static final UniqueKey<CcmsVendorInvoiceDetailsRecord> KEY_CCMS_VENDOR_INVOICE_DETAILS_PRIMARY = Internal.createUniqueKey(CcmsVendorInvoiceDetails.CCMS_VENDOR_INVOICE_DETAILS, DSL.name("KEY_ccms_vendor_invoice_details_PRIMARY"), new TableField[] { CcmsVendorInvoiceDetails.CCMS_VENDOR_INVOICE_DETAILS.PLANT, CcmsVendorInvoiceDetails.CCMS_VENDOR_INVOICE_DETAILS.VENDOR }, true);
    public static final UniqueKey<CcmsVendorNumRangeRecord> KEY_CCMS_VENDOR_NUM_RANGE_PRIMARY = Internal.createUniqueKey(CcmsVendorNumRange.CCMS_VENDOR_NUM_RANGE, DSL.name("KEY_ccms_vendor_num_range_PRIMARY"), new TableField[] { CcmsVendorNumRange.CCMS_VENDOR_NUM_RANGE.VENDOR_CODE, CcmsVendorNumRange.CCMS_VENDOR_NUM_RANGE.PLANT_CODE }, true);
    public static final UniqueKey<CcmsVendorPlantMappingRecord> KEY_CCMS_VENDOR_PLANT_MAPPING_PRIMARY = Internal.createUniqueKey(CcmsVendorPlantMapping.CCMS_VENDOR_PLANT_MAPPING, DSL.name("KEY_ccms_vendor_plant_mapping_PRIMARY"), new TableField[] { CcmsVendorPlantMapping.CCMS_VENDOR_PLANT_MAPPING.VENDOR_CODE, CcmsVendorPlantMapping.CCMS_VENDOR_PLANT_MAPPING.PLANT }, true);
    public static final UniqueKey<CcmsWeekoffMasterRecord> KEY_CCMS_WEEKOFF_MASTER_PRIMARY = Internal.createUniqueKey(CcmsWeekoffMaster.CCMS_WEEKOFF_MASTER, DSL.name("KEY_ccms_weekoff_master_PRIMARY"), new TableField[] { CcmsWeekoffMaster.CCMS_WEEKOFF_MASTER.ID }, true);
    public static final UniqueKey<CcmsWorkLocationMasterRecord> KEY_CCMS_WORK_LOCATION_MASTER_PRIMARY = Internal.createUniqueKey(CcmsWorkLocationMaster.CCMS_WORK_LOCATION_MASTER, DSL.name("KEY_ccms_work_location_master_PRIMARY"), new TableField[] { CcmsWorkLocationMaster.CCMS_WORK_LOCATION_MASTER.NAME }, true);
    public static final UniqueKey<CcmsWorkingHoursRecord> KEY_CCMS_WORKING_HOURS_PRIMARY = Internal.createUniqueKey(CcmsWorkingHours.CCMS_WORKING_HOURS, DSL.name("KEY_ccms_working_hours_PRIMARY"), new TableField[] { CcmsWorkingHours.CCMS_WORKING_HOURS.WORK_TIME }, true);
    public static final UniqueKey<CertificateTypeMasterRecord> KEY_CERTIFICATE_TYPE_MASTER_PRIMARY = Internal.createUniqueKey(CertificateTypeMaster.CERTIFICATE_TYPE_MASTER, DSL.name("KEY_certificate_type_master_PRIMARY"), new TableField[] { CertificateTypeMaster.CERTIFICATE_TYPE_MASTER.CERTIFICATE_TYPE_ID }, true);
    public static final UniqueKey<CfaFreezerFileRecord> KEY_CFA_FREEZER_FILE_PRIMARY = Internal.createUniqueKey(CfaFreezerFile.CFA_FREEZER_FILE, DSL.name("KEY_cfa_freezer_file_PRIMARY"), new TableField[] { CfaFreezerFile.CFA_FREEZER_FILE.CFA, CfaFreezerFile.CFA_FREEZER_FILE.CUSTOMER_CODE, CfaFreezerFile.CFA_FREEZER_FILE.GATE_ENTRY_NO, CfaFreezerFile.CFA_FREEZER_FILE.DESCRIPTION }, true);
    public static final UniqueKey<CfaSlabDetailsRecord> KEY_CFA_SLAB_DETAILS_PRIMARY = Internal.createUniqueKey(CfaSlabDetails.CFA_SLAB_DETAILS, DSL.name("KEY_cfa_slab_details_PRIMARY"), new TableField[] { CfaSlabDetails.CFA_SLAB_DETAILS.PLANT, CfaSlabDetails.CFA_SLAB_DETAILS.FROM_DATE, CfaSlabDetails.CFA_SLAB_DETAILS.TO_DATE, CfaSlabDetails.CFA_SLAB_DETAILS.SLAB }, true);
    public static final UniqueKey<CfaSlabMasterRecord> KEY_CFA_SLAB_MASTER_PRIMARY = Internal.createUniqueKey(CfaSlabMaster.CFA_SLAB_MASTER, DSL.name("KEY_cfa_slab_master_PRIMARY"), new TableField[] { CfaSlabMaster.CFA_SLAB_MASTER.SNO }, true);
    public static final UniqueKey<CircularBusinessTypeRecord> KEY_CIRCULAR_BUSINESS_TYPE_PRIMARY = Internal.createUniqueKey(CircularBusinessType.CIRCULAR_BUSINESS_TYPE, DSL.name("KEY_circular_business_type_PRIMARY"), new TableField[] { CircularBusinessType.CIRCULAR_BUSINESS_TYPE.ACC_GRP_CODE }, true);
    public static final UniqueKey<CircularDisplayDetailsRecord> KEY_CIRCULAR_DISPLAY_DETAILS_PRIMARY = Internal.createUniqueKey(CircularDisplayDetails.CIRCULAR_DISPLAY_DETAILS, DSL.name("KEY_circular_display_details_PRIMARY"), new TableField[] { CircularDisplayDetails.CIRCULAR_DISPLAY_DETAILS.COMP_CODE, CircularDisplayDetails.CIRCULAR_DISPLAY_DETAILS.CUSTOMER_CODE, CircularDisplayDetails.CIRCULAR_DISPLAY_DETAILS.SERIAL_NO }, true);
    public static final UniqueKey<CircularLanguageRecord> KEY_CIRCULAR_LANGUAGE_PRIMARY = Internal.createUniqueKey(CircularLanguage.CIRCULAR_LANGUAGE, DSL.name("KEY_circular_language_PRIMARY"), new TableField[] { CircularLanguage.CIRCULAR_LANGUAGE.ID }, true);
    public static final UniqueKey<CircularTypeRecord> KEY_CIRCULAR_TYPE_PRIMARY = Internal.createUniqueKey(CircularType.CIRCULAR_TYPE, DSL.name("KEY_circular_type_PRIMARY"), new TableField[] { CircularType.CIRCULAR_TYPE.ID }, true);
    public static final UniqueKey<CircularUploadRecord> KEY_CIRCULAR_UPLOAD_PRIMARY = Internal.createUniqueKey(CircularUpload.CIRCULAR_UPLOAD, DSL.name("KEY_circular_upload_PRIMARY"), new TableField[] { CircularUpload.CIRCULAR_UPLOAD.ID, CircularUpload.CIRCULAR_UPLOAD.COMP_CODE, CircularUpload.CIRCULAR_UPLOAD.COUNTRY_CODE, CircularUpload.CIRCULAR_UPLOAD.CIR_OPTION }, true);
    public static final UniqueKey<CompanyMasterRecord> KEY_COMPANY_MASTER_PRIMARY = Internal.createUniqueKey(CompanyMaster.COMPANY_MASTER, DSL.name("KEY_company_master_PRIMARY"), new TableField[] { CompanyMaster.COMPANY_MASTER.COMP_CODE }, true);
    public static final UniqueKey<ContractAgreementRecord> KEY_CONTRACT_AGREEMENT_PRIMARY = Internal.createUniqueKey(ContractAgreement.CONTRACT_AGREEMENT, DSL.name("KEY_contract_agreement_PRIMARY"), new TableField[] { ContractAgreement.CONTRACT_AGREEMENT.COMPANY_CODE, ContractAgreement.CONTRACT_AGREEMENT.VENDOR_CODE, ContractAgreement.CONTRACT_AGREEMENT.DOCUMENT_ID }, true);
    public static final UniqueKey<ContractCustomerRecord> KEY_CONTRACT_CUSTOMER_PRIMARY = Internal.createUniqueKey(ContractCustomer.CONTRACT_CUSTOMER, DSL.name("KEY_contract_customer_PRIMARY"), new TableField[] { ContractCustomer.CONTRACT_CUSTOMER.COMPANY_CODE }, true);
    public static final UniqueKey<ContractHikeRecord> KEY_CONTRACT_HIKE_PRIMARY = Internal.createUniqueKey(ContractHike.CONTRACT_HIKE, DSL.name("KEY_contract_hike_PRIMARY"), new TableField[] { ContractHike.CONTRACT_HIKE.COMPANY_CODE, ContractHike.CONTRACT_HIKE.VENDOR_CODE, ContractHike.CONTRACT_HIKE.CONTRACT, ContractHike.CONTRACT_HIKE.AGREEMENT_ID }, true);
    public static final UniqueKey<ContractLandlordRecord> KEY_CONTRACT_LANDLORD_PRIMARY = Internal.createUniqueKey(ContractLandlord.CONTRACT_LANDLORD, DSL.name("KEY_contract_landlord_PRIMARY"), new TableField[] { ContractLandlord.CONTRACT_LANDLORD.COMPANY_CODE, ContractLandlord.CONTRACT_LANDLORD.VENDOR_CODE, ContractLandlord.CONTRACT_LANDLORD.CONTRACT, ContractLandlord.CONTRACT_LANDLORD.OBJECT }, true);
    public static final UniqueKey<ContractPeriodRecord> KEY_CONTRACT_PERIOD_PRIMARY = Internal.createUniqueKey(ContractPeriod.CONTRACT_PERIOD, DSL.name("KEY_contract_period_PRIMARY"), new TableField[] { ContractPeriod.CONTRACT_PERIOD.COMPANY_CODE, ContractPeriod.CONTRACT_PERIOD.VENDOR_CODE, ContractPeriod.CONTRACT_PERIOD.CONTRACT }, true);
    public static final UniqueKey<CountryMasterRecord> KEY_COUNTRY_MASTER_PRIMARY = Internal.createUniqueKey(CountryMaster.COUNTRY_MASTER, DSL.name("KEY_country_master_PRIMARY"), new TableField[] { CountryMaster.COUNTRY_MASTER.COUNTRY_CODE }, true);
    public static final UniqueKey<CrateBalanceRecord> KEY_CRATE_BALANCE_PRIMARY = Internal.createUniqueKey(CrateBalance.CRATE_BALANCE, DSL.name("KEY_crate_balance_PRIMARY"), new TableField[] { CrateBalance.CRATE_BALANCE.WERKS, CrateBalance.CRATE_BALANCE.KUNNR, CrateBalance.CRATE_BALANCE.MATNR, CrateBalance.CRATE_BALANCE.BUDAT }, true);
    public static final UniqueKey<CratesMonthlyBalanceRecord> KEY_CRATES_MONTHLY_BALANCE_PRIMARY = Internal.createUniqueKey(CratesMonthlyBalance.CRATES_MONTHLY_BALANCE, DSL.name("KEY_crates_monthly_balance_PRIMARY"), new TableField[] { CratesMonthlyBalance.CRATES_MONTHLY_BALANCE.COMPANY, CratesMonthlyBalance.CRATES_MONTHLY_BALANCE.YEAR, CratesMonthlyBalance.CRATES_MONTHLY_BALANCE.MONTH, CratesMonthlyBalance.CRATES_MONTHLY_BALANCE.CUSTOMER_CODE, CratesMonthlyBalance.CRATES_MONTHLY_BALANCE.CRATE_TYPE, CratesMonthlyBalance.CRATES_MONTHLY_BALANCE.PLANT }, true);
    public static final UniqueKey<CustomerAccountGroupRecord> KEY_CUSTOMER_ACCOUNT_GROUP_PRIMARY = Internal.createUniqueKey(CustomerAccountGroup.CUSTOMER_ACCOUNT_GROUP, DSL.name("KEY_customer_account_group_PRIMARY"), new TableField[] { CustomerAccountGroup.CUSTOMER_ACCOUNT_GROUP.CUSTOMER_ACC_GRP_CODE, CustomerAccountGroup.CUSTOMER_ACCOUNT_GROUP.COMP_CODE }, true);
    public static final UniqueKey<CustomerAssetRecord> KEY_CUSTOMER_ASSET_PRIMARY = Internal.createUniqueKey(CustomerAsset.CUSTOMER_ASSET, DSL.name("KEY_customer_asset_PRIMARY"), new TableField[] { CustomerAsset.CUSTOMER_ASSET.BUKRS, CustomerAsset.CUSTOMER_ASSET.KUNNR, CustomerAsset.CUSTOMER_ASSET.ANLR0 }, true);
    public static final UniqueKey<CustomerBankDetailsRecord> KEY_CUSTOMER_BANK_DETAILS_PRIMARY = Internal.createUniqueKey(CustomerBankDetails.CUSTOMER_BANK_DETAILS, DSL.name("KEY_customer_bank_details_PRIMARY"), new TableField[] { CustomerBankDetails.CUSTOMER_BANK_DETAILS.ACCOUNT_NO, CustomerBankDetails.CUSTOMER_BANK_DETAILS.CUSTOMER_CODE, CustomerBankDetails.CUSTOMER_BANK_DETAILS.COMP_CODE }, true);
    public static final UniqueKey<CustomerBillRecord> KEY_CUSTOMER_BILL_PRIMARY = Internal.createUniqueKey(CustomerBill.CUSTOMER_BILL, DSL.name("KEY_customer_bill_PRIMARY"), new TableField[] { CustomerBill.CUSTOMER_BILL.COMP_CODE, CustomerBill.CUSTOMER_BILL.CUSTOMER_CODE, CustomerBill.CUSTOMER_BILL.SERIAL_NO }, true);
    public static final UniqueKey<CustomerBillAttachmentRecord> KEY_CUSTOMER_BILL_ATTACHMENT_PRIMARY = Internal.createUniqueKey(CustomerBillAttachment.CUSTOMER_BILL_ATTACHMENT, DSL.name("KEY_customer_bill_attachment_PRIMARY"), new TableField[] { CustomerBillAttachment.CUSTOMER_BILL_ATTACHMENT.COMP_CODE, CustomerBillAttachment.CUSTOMER_BILL_ATTACHMENT.CUSTOMER_CODE, CustomerBillAttachment.CUSTOMER_BILL_ATTACHMENT.SERIAL_NO }, true);
    public static final UniqueKey<CustomerCertificateAttachmentRecord> KEY_CUSTOMER_CERTIFICATE_ATTACHMENT_PRIMARY = Internal.createUniqueKey(CustomerCertificateAttachment.CUSTOMER_CERTIFICATE_ATTACHMENT, DSL.name("KEY_customer_certificate_attachment_PRIMARY"), new TableField[] { CustomerCertificateAttachment.CUSTOMER_CERTIFICATE_ATTACHMENT.COMP_CODE, CustomerCertificateAttachment.CUSTOMER_CERTIFICATE_ATTACHMENT.CUSTOMER_CODE, CustomerCertificateAttachment.CUSTOMER_CERTIFICATE_ATTACHMENT.SERIAL_NO, CustomerCertificateAttachment.CUSTOMER_CERTIFICATE_ATTACHMENT.ATTACHED_DATETIME }, true);
    public static final UniqueKey<CustomerEbClaimRecord> KEY_CUSTOMER_EB_CLAIM_PRIMARY = Internal.createUniqueKey(CustomerEbClaim.CUSTOMER_EB_CLAIM, DSL.name("KEY_customer_eb_claim_PRIMARY"), new TableField[] { CustomerEbClaim.CUSTOMER_EB_CLAIM.COMP_CODE, CustomerEbClaim.CUSTOMER_EB_CLAIM.CUSTOMER_CODE, CustomerEbClaim.CUSTOMER_EB_CLAIM.VENDOR_CODE, CustomerEbClaim.CUSTOMER_EB_CLAIM.EB_YEAR, CustomerEbClaim.CUSTOMER_EB_CLAIM.EB_MONTH }, true);
    public static final UniqueKey<CustomerFreezerRecord> KEY_CUSTOMER_FREEZER_PRIMARY = Internal.createUniqueKey(CustomerFreezer.CUSTOMER_FREEZER, DSL.name("KEY_customer_freezer_PRIMARY"), new TableField[] { CustomerFreezer.CUSTOMER_FREEZER.COMP_CODE, CustomerFreezer.CUSTOMER_FREEZER.CUSTOMER_CODE, CustomerFreezer.CUSTOMER_FREEZER.RETAILER_SFA_CODE, CustomerFreezer.CUSTOMER_FREEZER.TAG_NO }, true);
    public static final UniqueKey<CustomerFreezerAttachmentRecord> KEY_CUSTOMER_FREEZER_ATTACHMENT_PRIMARY = Internal.createUniqueKey(CustomerFreezerAttachment.CUSTOMER_FREEZER_ATTACHMENT, DSL.name("KEY_customer_freezer_attachment_PRIMARY"), new TableField[] { CustomerFreezerAttachment.CUSTOMER_FREEZER_ATTACHMENT.COMP_CODE, CustomerFreezerAttachment.CUSTOMER_FREEZER_ATTACHMENT.CUSTOMER_CODE, CustomerFreezerAttachment.CUSTOMER_FREEZER_ATTACHMENT.RETAILER_SFA_CODE, CustomerFreezerAttachment.CUSTOMER_FREEZER_ATTACHMENT.TAG_NO }, true);
    public static final UniqueKey<CustomerFreezerAttachmentNewRecord> KEY_CUSTOMER_FREEZER_ATTACHMENT_NEW_PRIMARY = Internal.createUniqueKey(CustomerFreezerAttachmentNew.CUSTOMER_FREEZER_ATTACHMENT_NEW, DSL.name("KEY_customer_freezer_attachment_new_PRIMARY"), new TableField[] { CustomerFreezerAttachmentNew.CUSTOMER_FREEZER_ATTACHMENT_NEW.COMP_CODE, CustomerFreezerAttachmentNew.CUSTOMER_FREEZER_ATTACHMENT_NEW.CUSTOMER_CODE, CustomerFreezerAttachmentNew.CUSTOMER_FREEZER_ATTACHMENT_NEW.TAG_NO, CustomerFreezerAttachmentNew.CUSTOMER_FREEZER_ATTACHMENT_NEW.RETAILER_SFA_CODE }, true);
    public static final UniqueKey<CustomerFreezerAttachmentOldRecord> KEY_CUSTOMER_FREEZER_ATTACHMENT_OLD_PRIMARY = Internal.createUniqueKey(CustomerFreezerAttachmentOld.CUSTOMER_FREEZER_ATTACHMENT_OLD, DSL.name("KEY_customer_freezer_attachment_old_PRIMARY"), new TableField[] { CustomerFreezerAttachmentOld.CUSTOMER_FREEZER_ATTACHMENT_OLD.COMP_CODE, CustomerFreezerAttachmentOld.CUSTOMER_FREEZER_ATTACHMENT_OLD.CUSTOMER_CODE, CustomerFreezerAttachmentOld.CUSTOMER_FREEZER_ATTACHMENT_OLD.RETAILER_SFA_CODE, CustomerFreezerAttachmentOld.CUSTOMER_FREEZER_ATTACHMENT_OLD.TAG_NO }, true);
    public static final UniqueKey<CustomerFreezerReleaseRecord> KEY_CUSTOMER_FREEZER_RELEASE_PRIMARY = Internal.createUniqueKey(CustomerFreezerRelease.CUSTOMER_FREEZER_RELEASE, DSL.name("KEY_customer_freezer_release_PRIMARY"), new TableField[] { CustomerFreezerRelease.CUSTOMER_FREEZER_RELEASE.COMP_CODE, CustomerFreezerRelease.CUSTOMER_FREEZER_RELEASE.CUSTOMER_CODE, CustomerFreezerRelease.CUSTOMER_FREEZER_RELEASE.RETAILER_SFA_CODE, CustomerFreezerRelease.CUSTOMER_FREEZER_RELEASE.TAG_NO }, true);
    public static final UniqueKey<CustomerFreezerTagRecord> KEY_CUSTOMER_FREEZER_TAG_PRIMARY = Internal.createUniqueKey(CustomerFreezerTag.CUSTOMER_FREEZER_TAG, DSL.name("KEY_customer_freezer_tag_PRIMARY"), new TableField[] { CustomerFreezerTag.CUSTOMER_FREEZER_TAG.CFA, CustomerFreezerTag.CUSTOMER_FREEZER_TAG.CUSTOMER_CODE, CustomerFreezerTag.CUSTOMER_FREEZER_TAG.GATE_ENTRY_NO, CustomerFreezerTag.CUSTOMER_FREEZER_TAG.DESCRIPTION }, true);
    public static final UniqueKey<CustomerGroupRecord> KEY_CUSTOMER_GROUP_PRIMARY = Internal.createUniqueKey(CustomerGroup.CUSTOMER_GROUP, DSL.name("KEY_customer_group_PRIMARY"), new TableField[] { CustomerGroup.CUSTOMER_GROUP.CUSTOMER_GRP_CODE, CustomerGroup.CUSTOMER_GROUP.COMP_CODE }, true);
    public static final UniqueKey<CustomerHmboRecord> KEY_CUSTOMER_HMBO_PRIMARY = Internal.createUniqueKey(CustomerHmbo.CUSTOMER_HMBO, DSL.name("KEY_customer_hmbo_PRIMARY"), new TableField[] { CustomerHmbo.CUSTOMER_HMBO.COMP_CODE, CustomerHmbo.CUSTOMER_HMBO.CUSTOMER_CODE, CustomerHmbo.CUSTOMER_HMBO.VENDOR_CODE, CustomerHmbo.CUSTOMER_HMBO.VENDOR_ACC_GRP_CODE }, true);
    public static final UniqueKey<CustomerKycRecord> KEY_CUSTOMER_KYC_PRIMARY = Internal.createUniqueKey(CustomerKyc.CUSTOMER_KYC, DSL.name("KEY_customer_kyc_PRIMARY"), new TableField[] { CustomerKyc.CUSTOMER_KYC.COMP_CODE, CustomerKyc.CUSTOMER_KYC.CUSTOMER_CODE, CustomerKyc.CUSTOMER_KYC.SERIAL_NO }, true);
    public static final UniqueKey<CustomerKycAttachmentRecord> KEY_CUSTOMER_KYC_ATTACHMENT_PRIMARY = Internal.createUniqueKey(CustomerKycAttachment.CUSTOMER_KYC_ATTACHMENT, DSL.name("KEY_customer_kyc_attachment_PRIMARY"), new TableField[] { CustomerKycAttachment.CUSTOMER_KYC_ATTACHMENT.COMP_CODE, CustomerKycAttachment.CUSTOMER_KYC_ATTACHMENT.CUSTOMER_CODE, CustomerKycAttachment.CUSTOMER_KYC_ATTACHMENT.SERIAL_NO }, true);
    public static final UniqueKey<CustomerKycDetailsRecord> KEY_CUSTOMER_KYC_DETAILS_PRIMARY = Internal.createUniqueKey(CustomerKycDetails.CUSTOMER_KYC_DETAILS, DSL.name("KEY_customer_KYC_details_PRIMARY"), new TableField[] { CustomerKycDetails.CUSTOMER_KYC_DETAILS.CUSTOMER_CODE, CustomerKycDetails.CUSTOMER_KYC_DETAILS.SERIAL_NO }, true);
    public static final UniqueKey<CustomerKycTypeMasterRecord> KEY_CUSTOMER_KYC_TYPE_MASTER_PRIMARY = Internal.createUniqueKey(CustomerKycTypeMaster.CUSTOMER_KYC_TYPE_MASTER, DSL.name("KEY_customer_Kyc_Type_master_PRIMARY"), new TableField[] { CustomerKycTypeMaster.CUSTOMER_KYC_TYPE_MASTER.KYC_TYPE_ID }, true);
    public static final UniqueKey<CustomerMasterRecord> KEY_CUSTOMER_MASTER_PRIMARY = Internal.createUniqueKey(CustomerMaster.CUSTOMER_MASTER, DSL.name("KEY_customer_master_PRIMARY"), new TableField[] { CustomerMaster.CUSTOMER_MASTER.COMP_CODE, CustomerMaster.CUSTOMER_MASTER.CUSTOMER_CODE }, true);
    public static final UniqueKey<CustomerMilkAvgRecord> KEY_CUSTOMER_MILK_AVG_PRIMARY = Internal.createUniqueKey(CustomerMilkAvg.CUSTOMER_MILK_AVG, DSL.name("KEY_customer_milk_avg_PRIMARY"), new TableField[] { CustomerMilkAvg.CUSTOMER_MILK_AVG.COMP_CODE, CustomerMilkAvg.CUSTOMER_MILK_AVG.CUSTOMER_CODE, CustomerMilkAvg.CUSTOMER_MILK_AVG.SPMON, CustomerMilkAvg.CUSTOMER_MILK_AVG.PUR_GRP, CustomerMilkAvg.CUSTOMER_MILK_AVG.MAT_GRP1, CustomerMilkAvg.CUSTOMER_MILK_AVG.MAT_GRP2, CustomerMilkAvg.CUSTOMER_MILK_AVG.MAT_GRP3, CustomerMilkAvg.CUSTOMER_MILK_AVG.MAT_GRP4, CustomerMilkAvg.CUSTOMER_MILK_AVG.MATNR, CustomerMilkAvg.CUSTOMER_MILK_AVG.SPYEAR, CustomerMilkAvg.CUSTOMER_MILK_AVG.VKBUR, CustomerMilkAvg.CUSTOMER_MILK_AVG.WERKS }, true);
    public static final UniqueKey<CustomerReceiptRecord> KEY_CUSTOMER_RECEIPT_PRIMARY = Internal.createUniqueKey(CustomerReceipt.CUSTOMER_RECEIPT, DSL.name("KEY_customer_receipt_PRIMARY"), new TableField[] { CustomerReceipt.CUSTOMER_RECEIPT.CUSTOMER_CODE, CustomerReceipt.CUSTOMER_RECEIPT.SERIAL_NO, CustomerReceipt.CUSTOMER_RECEIPT.COMP_CODE }, true);
    public static final UniqueKey<CustomerReceiptAttachmentRecord> KEY_CUSTOMER_RECEIPT_ATTACHMENT_PRIMARY = Internal.createUniqueKey(CustomerReceiptAttachment.CUSTOMER_RECEIPT_ATTACHMENT, DSL.name("KEY_customer_receipt_attachment_PRIMARY"), new TableField[] { CustomerReceiptAttachment.CUSTOMER_RECEIPT_ATTACHMENT.COMP_CODE, CustomerReceiptAttachment.CUSTOMER_RECEIPT_ATTACHMENT.CUSTOMER_CODE, CustomerReceiptAttachment.CUSTOMER_RECEIPT_ATTACHMENT.SERIAL_NO }, true);
    public static final UniqueKey<CustomerSfAnswerRecord> KEY_CUSTOMER_SF_ANSWER_PRIMARY = Internal.createUniqueKey(CustomerSfAnswer.CUSTOMER_SF_ANSWER, DSL.name("KEY_customer_sf_answer_PRIMARY"), new TableField[] { CustomerSfAnswer.CUSTOMER_SF_ANSWER.COMP_CODE, CustomerSfAnswer.CUSTOMER_SF_ANSWER.PLANT_CODE, CustomerSfAnswer.CUSTOMER_SF_ANSWER.HMB_CODE, CustomerSfAnswer.CUSTOMER_SF_ANSWER.VENDOR_CODE, CustomerSfAnswer.CUSTOMER_SF_ANSWER.MONTH, CustomerSfAnswer.CUSTOMER_SF_ANSWER.YEAR, CustomerSfAnswer.CUSTOMER_SF_ANSWER.Q_ID, CustomerSfAnswer.CUSTOMER_SF_ANSWER.ANSWER }, true);
    public static final UniqueKey<CustomerSfCategoryRecord> KEY_CUSTOMER_SF_CATEGORY_PRIMARY = Internal.createUniqueKey(CustomerSfCategory.CUSTOMER_SF_CATEGORY, DSL.name("KEY_customer_sf_category_PRIMARY"), new TableField[] { CustomerSfCategory.CUSTOMER_SF_CATEGORY.ID, CustomerSfCategory.CUSTOMER_SF_CATEGORY.PRODUCT, CustomerSfCategory.CUSTOMER_SF_CATEGORY.TYPE }, true);
    public static final UniqueKey<CustomerSfHistoryRecord> KEY_CUSTOMER_SF_HISTORY_PRIMARY = Internal.createUniqueKey(CustomerSfHistory.CUSTOMER_SF_HISTORY, DSL.name("KEY_customer_sf_history_PRIMARY"), new TableField[] { CustomerSfHistory.CUSTOMER_SF_HISTORY.COMP_CODE, CustomerSfHistory.CUSTOMER_SF_HISTORY.USER_ID, CustomerSfHistory.CUSTOMER_SF_HISTORY.MONTH, CustomerSfHistory.CUSTOMER_SF_HISTORY.YEAR }, true);
    public static final UniqueKey<CustomerSfQstnAnsMapRecord> KEY_CUSTOMER_SF_QSTN_ANS_MAP_PRIMARY = Internal.createUniqueKey(CustomerSfQstnAnsMap.CUSTOMER_SF_QSTN_ANS_MAP, DSL.name("KEY_customer_sf_qstn_ans_map_PRIMARY"), new TableField[] { CustomerSfQstnAnsMap.CUSTOMER_SF_QSTN_ANS_MAP.QSTN_ID, CustomerSfQstnAnsMap.CUSTOMER_SF_QSTN_ANS_MAP.COMP_CODE, CustomerSfQstnAnsMap.CUSTOMER_SF_QSTN_ANS_MAP.PRODUCT, CustomerSfQstnAnsMap.CUSTOMER_SF_QSTN_ANS_MAP.LANG_ID, CustomerSfQstnAnsMap.CUSTOMER_SF_QSTN_ANS_MAP.ROLE_ID }, true);
    public static final UniqueKey<CustomerSfQuestionRecord> KEY_CUSTOMER_SF_QUESTION_PRIMARY = Internal.createUniqueKey(CustomerSfQuestion.CUSTOMER_SF_QUESTION, DSL.name("KEY_customer_sf_question_PRIMARY"), new TableField[] { CustomerSfQuestion.CUSTOMER_SF_QUESTION.QSTN_ID, CustomerSfQuestion.CUSTOMER_SF_QUESTION.COMP_CODE, CustomerSfQuestion.CUSTOMER_SF_QUESTION.PRODUCT, CustomerSfQuestion.CUSTOMER_SF_QUESTION.PRODUCT_CATEGORY, CustomerSfQuestion.CUSTOMER_SF_QUESTION.LANG_ID, CustomerSfQuestion.CUSTOMER_SF_QUESTION.ROLE_ID }, true);
    public static final UniqueKey<CustomerVsVendorRecord> KEY_CUSTOMER_VS_VENDOR_PRIMARY = Internal.createUniqueKey(CustomerVsVendor.CUSTOMER_VS_VENDOR, DSL.name("KEY_customer_vs_vendor_PRIMARY"), new TableField[] { CustomerVsVendor.CUSTOMER_VS_VENDOR.COMP_CODE, CustomerVsVendor.CUSTOMER_VS_VENDOR.CUSTOMER }, true);
    public static final UniqueKey<DailySchedulerLogRecord> KEY_DAILY_SCHEDULER_LOG_PRIMARY = Internal.createUniqueKey(DailySchedulerLog.DAILY_SCHEDULER_LOG, DSL.name("KEY_daily_scheduler_log_PRIMARY"), new TableField[] { DailySchedulerLog.DAILY_SCHEDULER_LOG.MODULE_NAME, DailySchedulerLog.DAILY_SCHEDULER_LOG.MENU, DailySchedulerLog.DAILY_SCHEDULER_LOG.FUNCTION_NAME }, true);
    public static final UniqueKey<DashboardCategoryMasterRecord> KEY_DASHBOARD_CATEGORY_MASTER_PRIMARY = Internal.createUniqueKey(DashboardCategoryMaster.DASHBOARD_CATEGORY_MASTER, DSL.name("KEY_dashboard_category_master_PRIMARY"), new TableField[] { DashboardCategoryMaster.DASHBOARD_CATEGORY_MASTER.CATEGORY_ID }, true);
    public static final UniqueKey<DashboardIconLiRecord> KEY_DASHBOARD_ICON_LI_PRIMARY = Internal.createUniqueKey(DashboardIconLi.DASHBOARD_ICON_LI, DSL.name("KEY_dashboard_icon_li_PRIMARY"), new TableField[] { DashboardIconLi.DASHBOARD_ICON_LI.NO }, true);
    public static final UniqueKey<DashboardMasterRecord> KEY_DASHBOARD_MASTER_PRIMARY = Internal.createUniqueKey(DashboardMaster.DASHBOARD_MASTER, DSL.name("KEY_dashboard_master_PRIMARY"), new TableField[] { DashboardMaster.DASHBOARD_MASTER.DASH_MENU_ID }, true);
    public static final UniqueKey<DashboardMenuAccessRecord> KEY_DASHBOARD_MENU_ACCESS_PRIMARY = Internal.createUniqueKey(DashboardMenuAccess.DASHBOARD_MENU_ACCESS, DSL.name("KEY_dashboard_menu_access_PRIMARY"), new TableField[] { DashboardMenuAccess.DASHBOARD_MENU_ACCESS.COMP_CODE, DashboardMenuAccess.DASHBOARD_MENU_ACCESS.ROLE_ID, DashboardMenuAccess.DASHBOARD_MENU_ACCESS.DASH_MENU_ORDER_ID, DashboardMenuAccess.DASHBOARD_MENU_ACCESS.DASH_MENU_ID }, true);
    public static final UniqueKey<DeductionMasterRecord> KEY_DEDUCTION_MASTER_PRIMARY = Internal.createUniqueKey(DeductionMaster.DEDUCTION_MASTER, DSL.name("KEY_deduction_master_PRIMARY"), new TableField[] { DeductionMaster.DEDUCTION_MASTER.DEDUCTION_CODE }, true);
    public static final UniqueKey<DepartmentRecord> KEY_DEPARTMENT_PRIMARY = Internal.createUniqueKey(Department.DEPARTMENT, DSL.name("KEY_department_PRIMARY"), new TableField[] { Department.DEPARTMENT.DEPARTMENT_ID }, true);
    public static final UniqueKey<DepartmentAccessRecord> KEY_DEPARTMENT_ACCESS_PRIMARY = Internal.createUniqueKey(DepartmentAccess.DEPARTMENT_ACCESS, DSL.name("KEY_department_access_PRIMARY"), new TableField[] { DepartmentAccess.DEPARTMENT_ACCESS.COMP_CODE, DepartmentAccess.DEPARTMENT_ACCESS.ROLE_ID, DepartmentAccess.DEPARTMENT_ACCESS.DEPARTMNET_ID, DepartmentAccess.DEPARTMENT_ACCESS.MENU_ID }, true);
    public static final UniqueKey<DistrictMasterRecord> KEY_DISTRICT_MASTER_PRIMARY = Internal.createUniqueKey(DistrictMaster.DISTRICT_MASTER, DSL.name("KEY_district_master_PRIMARY"), new TableField[] { DistrictMaster.DISTRICT_MASTER.DISTRICT_CODE }, true);
    public static final UniqueKey<DocTypeMasterRecord> KEY_DOC_TYPE_MASTER_PRIMARY = Internal.createUniqueKey(DocTypeMaster.DOC_TYPE_MASTER, DSL.name("KEY_doc_type_master_PRIMARY"), new TableField[] { DocTypeMaster.DOC_TYPE_MASTER.DOC_TYPE }, true);
    public static final UniqueKey<DocumentUploadRecord> KEY_DOCUMENT_UPLOAD_PRIMARY = Internal.createUniqueKey(DocumentUpload.DOCUMENT_UPLOAD, DSL.name("KEY_document_upload_PRIMARY"), new TableField[] { DocumentUpload.DOCUMENT_UPLOAD.VENDOR_CODE, DocumentUpload.DOCUMENT_UPLOAD.DOCUMENT_ID, DocumentUpload.DOCUMENT_UPLOAD.STATUS }, true);
    public static final UniqueKey<DocumentUploadHistoryRecord> KEY_DOCUMENT_UPLOAD_HISTORY_PRIMARY = Internal.createUniqueKey(DocumentUploadHistory.DOCUMENT_UPLOAD_HISTORY, DSL.name("KEY_document_upload_history_PRIMARY"), new TableField[] { DocumentUploadHistory.DOCUMENT_UPLOAD_HISTORY.CREATED_DATE }, true);
    public static final UniqueKey<EkoAbcAssetTrackerRecord> KEY_EKO_ABC_ASSET_TRACKER_PRIMARY = Internal.createUniqueKey(EkoAbcAssetTracker.EKO_ABC_ASSET_TRACKER, DSL.name("KEY_eko_abc_asset_tracker_PRIMARY"), new TableField[] { EkoAbcAssetTracker.EKO_ABC_ASSET_TRACKER.COMP_CODE, EkoAbcAssetTracker.EKO_ABC_ASSET_TRACKER.PLANT_CODE, EkoAbcAssetTracker.EKO_ABC_ASSET_TRACKER.HMB_CODE, EkoAbcAssetTracker.EKO_ABC_ASSET_TRACKER.ASSET_NUMBER }, true);
    public static final UniqueKey<EkoBankerStagingDataRecord> KEY_EKO_BANKER_STAGING_DATA_PRIMARY = Internal.createUniqueKey(EkoBankerStagingData.EKO_BANKER_STAGING_DATA, DSL.name("KEY_eko_banker_staging_data_PRIMARY"), new TableField[] { EkoBankerStagingData.EKO_BANKER_STAGING_DATA.YEAR, EkoBankerStagingData.EKO_BANKER_STAGING_DATA.MONTH, EkoBankerStagingData.EKO_BANKER_STAGING_DATA.PLANT, EkoBankerStagingData.EKO_BANKER_STAGING_DATA.SOCIETY }, true);
    public static final UniqueKey<EkoMaterialStockRecord> KEY_EKO_MATERIAL_STOCK_PRIMARY = Internal.createUniqueKey(EkoMaterialStock.EKO_MATERIAL_STOCK, DSL.name("KEY_eko_material_stock_PRIMARY"), new TableField[] { EkoMaterialStock.EKO_MATERIAL_STOCK.SWERK, EkoMaterialStock.EKO_MATERIAL_STOCK.EQUNR, EkoMaterialStock.EKO_MATERIAL_STOCK.MSGRP }, true);
    public static final UniqueKey<FarmerAnimalInfoRecord> KEY_FARMER_ANIMAL_INFO_PRIMARY = Internal.createUniqueKey(FarmerAnimalInfo.FARMER_ANIMAL_INFO, DSL.name("KEY_farmer_animal_info_PRIMARY"), new TableField[] { FarmerAnimalInfo.FARMER_ANIMAL_INFO.PLANT, FarmerAnimalInfo.FARMER_ANIMAL_INFO.ANIMAL_TAG_ID_NO }, true);
    public static final UniqueKey<FarmerBankRecord> KEY_FARMER_BANK_PRIMARY = Internal.createUniqueKey(FarmerBank.FARMER_BANK, DSL.name("KEY_farmer_bank_PRIMARY"), new TableField[] { FarmerBank.FARMER_BANK.PLANT_CODE, FarmerBank.FARMER_BANK.HMB_CODE, FarmerBank.FARMER_BANK.PID, FarmerBank.FARMER_BANK.VENDOR_CODE }, true);
    public static final UniqueKey<FarmerLoanLetterRecord> KEY_FARMER_LOAN_LETTER_PRIMARY = Internal.createUniqueKey(FarmerLoanLetter.FARMER_LOAN_LETTER, DSL.name("KEY_farmer_loan_letter_PRIMARY"), new TableField[] { FarmerLoanLetter.FARMER_LOAN_LETTER.COMP_CODE, FarmerLoanLetter.FARMER_LOAN_LETTER.VENDOR_CODE, FarmerLoanLetter.FARMER_LOAN_LETTER.SOCIETY, FarmerLoanLetter.FARMER_LOAN_LETTER.LOAN_REQUESTED_DATETIME, FarmerLoanLetter.FARMER_LOAN_LETTER.LOAN_NO }, true);
    public static final UniqueKey<FarmerMilkReportRecord> KEY_FARMER_MILK_REPORT_PRIMARY = Internal.createUniqueKey(FarmerMilkReport.FARMER_MILK_REPORT, DSL.name("KEY_farmer_milk_report_PRIMARY"), new TableField[] { FarmerMilkReport.FARMER_MILK_REPORT.ID }, true);
    public static final UniqueKey<FarmerMobileRecord> KEY_FARMER_MOBILE_PRIMARY = Internal.createUniqueKey(FarmerMobile.FARMER_MOBILE, DSL.name("KEY_farmer_mobile_PRIMARY"), new TableField[] { FarmerMobile.FARMER_MOBILE.PLANT_CODE, FarmerMobile.FARMER_MOBILE.HMB_CODE, FarmerMobile.FARMER_MOBILE.PID }, true);
    public static final UniqueKey<FarmerTempRecord> KEY_FARMER_TEMP_PRIMARY = Internal.createUniqueKey(FarmerTemp.FARMER_TEMP, DSL.name("KEY_farmer_temp_PRIMARY"), new TableField[] { FarmerTemp.FARMER_TEMP.FARMER, FarmerTemp.FARMER_TEMP.PLANT }, true);
    public static final UniqueKey<FeedCfaReasonRecord> KEY_FEED_CFA_REASON_PRIMARY = Internal.createUniqueKey(FeedCfaReason.FEED_CFA_REASON, DSL.name("KEY_feed_cfa_reason_PRIMARY"), new TableField[] { FeedCfaReason.FEED_CFA_REASON.ID }, true);
    public static final UniqueKey<FeedCfaUserMasterRecord> KEY_FEED_CFA_USER_MASTER_PRIMARY = Internal.createUniqueKey(FeedCfaUserMaster.FEED_CFA_USER_MASTER, DSL.name("KEY_feed_cfa_user_master_PRIMARY"), new TableField[] { FeedCfaUserMaster.FEED_CFA_USER_MASTER.CFA_PLANT, FeedCfaUserMaster.FEED_CFA_USER_MASTER.CFA_USER }, true);
    public static final UniqueKey<FeedInvoiceHeaderRecord> KEY_FEED_INVOICE_HEADER_PRIMARY = Internal.createUniqueKey(FeedInvoiceHeader.FEED_INVOICE_HEADER, DSL.name("KEY_feed_invoice_header_PRIMARY"), new TableField[] { FeedInvoiceHeader.FEED_INVOICE_HEADER.INVOICE_NO }, true);
    public static final UniqueKey<FeedInvoiceLineitemRecord> KEY_FEED_INVOICE_LINEITEM_PRIMARY = Internal.createUniqueKey(FeedInvoiceLineitem.FEED_INVOICE_LINEITEM, DSL.name("KEY_feed_invoice_lineitem_PRIMARY"), new TableField[] { FeedInvoiceLineitem.FEED_INVOICE_LINEITEM.INVOICE_NO, FeedInvoiceLineitem.FEED_INVOICE_LINEITEM.LINE_ITEM_NO }, true);
    public static final UniqueKey<FfsDesignationRecord> KEY_FFS_DESIGNATION_PRIMARY = Internal.createUniqueKey(FfsDesignation.FFS_DESIGNATION, DSL.name("KEY_ffs_designation_PRIMARY"), new TableField[] { FfsDesignation.FFS_DESIGNATION.DESG_TYPE }, true);
    public static final UniqueKey<FfsDesignationMappingRecord> KEY_FFS_DESIGNATION_MAPPING_PRIMARY = Internal.createUniqueKey(FfsDesignationMapping.FFS_DESIGNATION_MAPPING, DSL.name("KEY_ffs_designation_mapping_PRIMARY"), new TableField[] { FfsDesignationMapping.FFS_DESIGNATION_MAPPING.ROLE_ID, FfsDesignationMapping.FFS_DESIGNATION_MAPPING.DESG_TYPE }, true);
    public static final UniqueKey<FfsPositionRecord> KEY_FFS_POSITION_PRIMARY = Internal.createUniqueKey(FfsPosition.FFS_POSITION, DSL.name("KEY_ffs_position_PRIMARY"), new TableField[] { FfsPosition.FFS_POSITION.POSITION_ID }, true);
    public static final UniqueKey<FieldForceStaffRecord> KEY_FIELD_FORCE_STAFF_PRIMARY = Internal.createUniqueKey(FieldForceStaff.FIELD_FORCE_STAFF, DSL.name("KEY_field_force_staff_PRIMARY"), new TableField[] { FieldForceStaff.FIELD_FORCE_STAFF.PLANT_CODE, FieldForceStaff.FIELD_FORCE_STAFF.HMB, FieldForceStaff.FIELD_FORCE_STAFF.POSITION, FieldForceStaff.FIELD_FORCE_STAFF.HMB_DATE }, true);
    public static final UniqueKey<FieldForceStaffHmbRecord> KEY_FIELD_FORCE_STAFF_HMB_PRIMARY = Internal.createUniqueKey(FieldForceStaffHmb.FIELD_FORCE_STAFF_HMB, DSL.name("KEY_field_force_staff_hmb_PRIMARY"), new TableField[] { FieldForceStaffHmb.FIELD_FORCE_STAFF_HMB.PLANT_CODE, FieldForceStaffHmb.FIELD_FORCE_STAFF_HMB.HMB, FieldForceStaffHmb.FIELD_FORCE_STAFF_HMB.VENDOR, FieldForceStaffHmb.FIELD_FORCE_STAFF_HMB.HMB_NAME }, true);
    public static final UniqueKey<FieldForceStaffOldRecord> KEY_FIELD_FORCE_STAFF_OLD_PRIMARY = Internal.createUniqueKey(FieldForceStaffOld.FIELD_FORCE_STAFF_OLD, DSL.name("KEY_field_force_staff_old_PRIMARY"), new TableField[] { FieldForceStaffOld.FIELD_FORCE_STAFF_OLD.PLANT_CODE, FieldForceStaffOld.FIELD_FORCE_STAFF_OLD.HMB, FieldForceStaffOld.FIELD_FORCE_STAFF_OLD.POSITION, FieldForceStaffOld.FIELD_FORCE_STAFF_OLD.HMB_DATE }, true);
    public static final UniqueKey<FiledForceRecord> KEY_FILED_FORCE_PRIMARY = Internal.createUniqueKey(FiledForce.FILED_FORCE, DSL.name("KEY_filed_force_PRIMARY"), new TableField[] { FiledForce.FILED_FORCE.COMP_CODE, FiledForce.FILED_FORCE.VENDOR_CUSTOMER_CODE, FiledForce.FILED_FORCE.POSITION_CODE }, true);
    public static final UniqueKey<FiscalYearRecord> KEY_FISCAL_YEAR_PRIMARY = Internal.createUniqueKey(FiscalYear.FISCAL_YEAR, DSL.name("KEY_fiscal_year_PRIMARY"), new TableField[] { FiscalYear.FISCAL_YEAR.ID }, true);
    public static final UniqueKey<FleetCardMasterRecord> KEY_FLEET_CARD_MASTER_PRIMARY = Internal.createUniqueKey(FleetCardMaster.FLEET_CARD_MASTER, DSL.name("KEY_fleet_card_master_PRIMARY"), new TableField[] { FleetCardMaster.FLEET_CARD_MASTER.FLEET_CARD }, true);
    public static final UniqueKey<FreezerRecord> KEY_FREEZER_PRIMARY = Internal.createUniqueKey(Freezer.FREEZER, DSL.name("KEY_freezer_PRIMARY"), new TableField[] { Freezer.FREEZER.EQUNR }, true);
    public static final UniqueKey<FreezerAckApprovalRecord> KEY_FREEZER_ACK_APPROVAL_PRIMARY = Internal.createUniqueKey(FreezerAckApproval.FREEZER_ACK_APPROVAL, DSL.name("KEY_freezer_ack_approval_PRIMARY"), new TableField[] { FreezerAckApproval.FREEZER_ACK_APPROVAL.CFA, FreezerAckApproval.FREEZER_ACK_APPROVAL.GATE_ENTRY_NO, FreezerAckApproval.FREEZER_ACK_APPROVAL.DESCRIPTION, FreezerAckApproval.FREEZER_ACK_APPROVAL.CUSTOMER_CODE }, true);
    public static final UniqueKey<FreezerGateentryDetailsRecord> KEY_FREEZER_GATEENTRY_DETAILS_PRIMARY = Internal.createUniqueKey(FreezerGateentryDetails.FREEZER_GATEENTRY_DETAILS, DSL.name("KEY_freezer_gateentry_details_PRIMARY"), new TableField[] { FreezerGateentryDetails.FREEZER_GATEENTRY_DETAILS.CFA, FreezerGateentryDetails.FREEZER_GATEENTRY_DETAILS.CUSTOMER_CODE, FreezerGateentryDetails.FREEZER_GATEENTRY_DETAILS.GATE_ENTRY_NO, FreezerGateentryDetails.FREEZER_GATEENTRY_DETAILS.POSTING_DATE, FreezerGateentryDetails.FREEZER_GATEENTRY_DETAILS.DESCRIPTION }, true);
    public static final UniqueKey<FreezerOverallCountRecord> KEY_FREEZER_OVERALL_COUNT_PRIMARY = Internal.createUniqueKey(FreezerOverallCount.FREEZER_OVERALL_COUNT, DSL.name("KEY_freezer_overall_count_PRIMARY"), new TableField[] { FreezerOverallCount.FREEZER_OVERALL_COUNT.RSM_ID }, true);
    public static final UniqueKey<FtpConfigRecord> KEY_FTP_CONFIG_PRIMARY = Internal.createUniqueKey(FtpConfig.FTP_CONFIG, DSL.name("KEY_ftp_config_PRIMARY"), new TableField[] { FtpConfig.FTP_CONFIG.FTP_CONFIG_ID, FtpConfig.FTP_CONFIG.MENU_TYPE, FtpConfig.FTP_CONFIG.CONFIG_TYPE }, true);
    public static final UniqueKey<GrnCustomerDispachHeaderRecord> KEY_GRN_CUSTOMER_DISPACH_HEADER_PRIMARY = Internal.createUniqueKey(GrnCustomerDispachHeader.GRN_CUSTOMER_DISPACH_HEADER, DSL.name("KEY_grn_customer_dispach_header_PRIMARY"), new TableField[] { GrnCustomerDispachHeader.GRN_CUSTOMER_DISPACH_HEADER.COMP_CODE, GrnCustomerDispachHeader.GRN_CUSTOMER_DISPACH_HEADER.CUSTOMER_CODE, GrnCustomerDispachHeader.GRN_CUSTOMER_DISPACH_HEADER.MODEL, GrnCustomerDispachHeader.GRN_CUSTOMER_DISPACH_HEADER.ASSET_REQ_DATE }, true);
    public static final UniqueKey<GrnCustomerDispachLiRecord> KEY_GRN_CUSTOMER_DISPACH_LI_PRIMARY = Internal.createUniqueKey(GrnCustomerDispachLi.GRN_CUSTOMER_DISPACH_LI, DSL.name("KEY_grn_customer_dispach_li_PRIMARY"), new TableField[] { GrnCustomerDispachLi.GRN_CUSTOMER_DISPACH_LI.COMP_CODE, GrnCustomerDispachLi.GRN_CUSTOMER_DISPACH_LI.CUSTOMER_CODE, GrnCustomerDispachLi.GRN_CUSTOMER_DISPACH_LI.TAG_NO, GrnCustomerDispachLi.GRN_CUSTOMER_DISPACH_LI.MODEL }, true);
    public static final UniqueKey<GrnCustomerUtrDetailsRecord> KEY_GRN_CUSTOMER_UTR_DETAILS_PRIMARY = Internal.createUniqueKey(GrnCustomerUtrDetails.GRN_CUSTOMER_UTR_DETAILS, DSL.name("KEY_grn_customer_utr_details_PRIMARY"), new TableField[] { GrnCustomerUtrDetails.GRN_CUSTOMER_UTR_DETAILS.SNO }, true);
    public static final UniqueKey<GrnIndentDetailsRecord> KEY_GRN_INDENT_DETAILS_PRIMARY = Internal.createUniqueKey(GrnIndentDetails.GRN_INDENT_DETAILS, DSL.name("KEY_grn_indent_details_PRIMARY"), new TableField[] { GrnIndentDetails.GRN_INDENT_DETAILS.COMP_CODE, GrnIndentDetails.GRN_INDENT_DETAILS.INDENT_REQ_DATE, GrnIndentDetails.GRN_INDENT_DETAILS.RSM_CODE, GrnIndentDetails.GRN_INDENT_DETAILS.MODEL, GrnIndentDetails.GRN_INDENT_DETAILS.CFA_CODE }, true);
    public static final UniqueKey<GrnStorageLocationRecord> KEY_GRN_STORAGE_LOCATION_PRIMARY = Internal.createUniqueKey(GrnStorageLocation.GRN_STORAGE_LOCATION, DSL.name("KEY_grn_storage_location_PRIMARY"), new TableField[] { GrnStorageLocation.GRN_STORAGE_LOCATION.DIVISION_ID, GrnStorageLocation.GRN_STORAGE_LOCATION.STORAGE_LOACATION }, true);
    public static final UniqueKey<GrnTagVerifiRecord> KEY_GRN_TAG_VERIFI_PRIMARY = Internal.createUniqueKey(GrnTagVerifi.GRN_TAG_VERIFI, DSL.name("KEY_grn_tag_verifi_PRIMARY"), new TableField[] { GrnTagVerifi.GRN_TAG_VERIFI.COMP_CODE, GrnTagVerifi.GRN_TAG_VERIFI.PO_NUMBER, GrnTagVerifi.GRN_TAG_VERIFI.TAG_NO, GrnTagVerifi.GRN_TAG_VERIFI.MODEL }, true);
    public static final UniqueKey<GrnUserLoginDetailsRecord> KEY_GRN_USER_LOGIN_DETAILS_PRIMARY = Internal.createUniqueKey(GrnUserLoginDetails.GRN_USER_LOGIN_DETAILS, DSL.name("KEY_grn_user_login_details_PRIMARY"), new TableField[] { GrnUserLoginDetails.GRN_USER_LOGIN_DETAILS.USER_ID }, true);
    public static final UniqueKey<GroupPositionRecord> KEY_GROUP_POSITION_PRIMARY = Internal.createUniqueKey(GroupPosition.GROUP_POSITION, DSL.name("KEY_group_position_PRIMARY"), new TableField[] { GroupPosition.GROUP_POSITION.GROUP_ID, GroupPosition.GROUP_POSITION.POSITION_ID }, true);
    public static final UniqueKey<HapEmployeeMasterRecord> KEY_HAP_EMPLOYEE_MASTER_PRIMARY = Internal.createUniqueKey(HapEmployeeMaster.HAP_EMPLOYEE_MASTER, DSL.name("KEY_hap_employee_master_PRIMARY"), new TableField[] { HapEmployeeMaster.HAP_EMPLOYEE_MASTER.EMP_CODE }, true);
    public static final UniqueKey<HapPoHeaderRecord> KEY_HAP_PO_HEADER_PRIMARY = Internal.createUniqueKey(HapPoHeader.HAP_PO_HEADER, DSL.name("KEY_hap_po_header_PRIMARY"), new TableField[] { HapPoHeader.HAP_PO_HEADER.COMP_CODE, HapPoHeader.HAP_PO_HEADER.PO_NUMBER }, true);
    public static final UniqueKey<HapPoItemRecord> KEY_HAP_PO_ITEM_PRIMARY = Internal.createUniqueKey(HapPoItem.HAP_PO_ITEM, DSL.name("KEY_hap_po_item_PRIMARY"), new TableField[] { HapPoItem.HAP_PO_ITEM.COMP_CODE, HapPoItem.HAP_PO_ITEM.PO_NUMBER, HapPoItem.HAP_PO_ITEM.PO_ITEM_NO }, true);
    public static final UniqueKey<HapPoItemImageUploadRecord> KEY_HAP_PO_ITEM_IMAGE_UPLOAD_PRIMARY = Internal.createUniqueKey(HapPoItemImageUpload.HAP_PO_ITEM_IMAGE_UPLOAD, DSL.name("KEY_hap_po_item_image_upload_PRIMARY"), new TableField[] { HapPoItemImageUpload.HAP_PO_ITEM_IMAGE_UPLOAD.PO_NUMBER, HapPoItemImageUpload.HAP_PO_ITEM_IMAGE_UPLOAD.PO_ITEM_NO, HapPoItemImageUpload.HAP_PO_ITEM_IMAGE_UPLOAD.PO_SERVICE_ITEM_NO, HapPoItemImageUpload.HAP_PO_ITEM_IMAGE_UPLOAD.PO_IMAGE }, true);
    public static final UniqueKey<HapPoItemServiceRecord> KEY_HAP_PO_ITEM_SERVICE_PRIMARY = Internal.createUniqueKey(HapPoItemService.HAP_PO_ITEM_SERVICE, DSL.name("KEY_hap_po_item_service_PRIMARY"), new TableField[] { HapPoItemService.HAP_PO_ITEM_SERVICE.COMP_CODE, HapPoItemService.HAP_PO_ITEM_SERVICE.PO_NUMBER, HapPoItemService.HAP_PO_ITEM_SERVICE.PO_ITEM_NO, HapPoItemService.HAP_PO_ITEM_SERVICE.PO_SERVICE_NO }, true);
    public static final UniqueKey<HapPoItemServiceMmRecord> KEY_HAP_PO_ITEM_SERVICE_MM_PRIMARY = Internal.createUniqueKey(HapPoItemServiceMm.HAP_PO_ITEM_SERVICE_MM, DSL.name("KEY_hap_po_item_service_mm_PRIMARY"), new TableField[] { HapPoItemServiceMm.HAP_PO_ITEM_SERVICE_MM.COMP_CODE, HapPoItemServiceMm.HAP_PO_ITEM_SERVICE_MM.PO_NUMBER, HapPoItemServiceMm.HAP_PO_ITEM_SERVICE_MM.PO_ITEM_NO, HapPoItemServiceMm.HAP_PO_ITEM_SERVICE_MM.PO_SERVICE_NO }, true);
    public static final UniqueKey<HmbInchargeCustomerCareRecord> KEY_HMB_INCHARGE_CUSTOMER_CARE_PRIMARY = Internal.createUniqueKey(HmbInchargeCustomerCare.HMB_INCHARGE_CUSTOMER_CARE, DSL.name("KEY_hmb_incharge_customer_care_PRIMARY"), new TableField[] { HmbInchargeCustomerCare.HMB_INCHARGE_CUSTOMER_CARE.ID, HmbInchargeCustomerCare.HMB_INCHARGE_CUSTOMER_CARE.CUSTOMER_CARE_MOBILE_NO, HmbInchargeCustomerCare.HMB_INCHARGE_CUSTOMER_CARE.CUSTOMER_CARE_EMAIL_ID }, true);
    public static final UniqueKey<HmbMaterialStockRecord> KEY_HMB_MATERIAL_STOCK_PRIMARY = Internal.createUniqueKey(HmbMaterialStock.HMB_MATERIAL_STOCK, DSL.name("KEY_hmb_material_stock_PRIMARY"), new TableField[] { HmbMaterialStock.HMB_MATERIAL_STOCK.VKBUR, HmbMaterialStock.HMB_MATERIAL_STOCK.WERKS, HmbMaterialStock.HMB_MATERIAL_STOCK.LIFNR, HmbMaterialStock.HMB_MATERIAL_STOCK.MATNR, HmbMaterialStock.HMB_MATERIAL_STOCK.SPMON }, true);
    public static final UniqueKey<HmbReasonMasterRecord> KEY_HMB_REASON_MASTER_PRIMARY = Internal.createUniqueKey(HmbReasonMaster.HMB_REASON_MASTER, DSL.name("KEY_hmb_reason_master_PRIMARY"), new TableField[] { HmbReasonMaster.HMB_REASON_MASTER.ID }, true);
    public static final UniqueKey<HmbServiceArrearRecord> KEY_HMB_SERVICE_ARREAR_PRIMARY = Internal.createUniqueKey(HmbServiceArrear.HMB_SERVICE_ARREAR, DSL.name("KEY_hmb_service_arrear_PRIMARY"), new TableField[] { HmbServiceArrear.HMB_SERVICE_ARREAR.COMP_CODE, HmbServiceArrear.HMB_SERVICE_ARREAR.TRANS_NO }, true);
    public static final UniqueKey<HmbServiceChargesRecord> KEY_HMB_SERVICE_CHARGES_PRIMARY = Internal.createUniqueKey(HmbServiceCharges.HMB_SERVICE_CHARGES, DSL.name("KEY_hmb_service_charges_PRIMARY"), new TableField[] { HmbServiceCharges.HMB_SERVICE_CHARGES.COMP_CODE, HmbServiceCharges.HMB_SERVICE_CHARGES.BILL_NUM, HmbServiceCharges.HMB_SERVICE_CHARGES.WERKS, HmbServiceCharges.HMB_SERVICE_CHARGES.PARVW, HmbServiceCharges.HMB_SERVICE_CHARGES.SOCIETY, HmbServiceCharges.HMB_SERVICE_CHARGES.C_NAME, HmbServiceCharges.HMB_SERVICE_CHARGES.GESTYP, HmbServiceCharges.HMB_SERVICE_CHARGES.LIFNR, HmbServiceCharges.HMB_SERVICE_CHARGES.C_START_DATE, HmbServiceCharges.HMB_SERVICE_CHARGES.C_END_DATE }, true);
    public static final UniqueKey<HmbServiceDeductionRecord> KEY_HMB_SERVICE_DEDUCTION_PRIMARY = Internal.createUniqueKey(HmbServiceDeduction.HMB_SERVICE_DEDUCTION, DSL.name("KEY_hmb_service_deduction_PRIMARY"), new TableField[] { HmbServiceDeduction.HMB_SERVICE_DEDUCTION.COMP_CODE, HmbServiceDeduction.HMB_SERVICE_DEDUCTION.ZDOCNO, HmbServiceDeduction.HMB_SERVICE_DEDUCTION.ZDOCITEM }, true);
    public static final UniqueKey<HoMealConfirmationRecord> KEY_HO_MEAL_CONFIRMATION_PRIMARY = Internal.createUniqueKey(HoMealConfirmation.HO_MEAL_CONFIRMATION, DSL.name("KEY_ho_meal_confirmation_PRIMARY"), new TableField[] { HoMealConfirmation.HO_MEAL_CONFIRMATION.EMP_CODE, HoMealConfirmation.HO_MEAL_CONFIRMATION.PLANT_CODE, HoMealConfirmation.HO_MEAL_CONFIRMATION.MEAL_DATE, HoMealConfirmation.HO_MEAL_CONFIRMATION.MEAL_TYPE_ID }, true);
    public static final UniqueKey<HoMealMasterRecord> KEY_HO_MEAL_MASTER_PRIMARY = Internal.createUniqueKey(HoMealMaster.HO_MEAL_MASTER, DSL.name("KEY_ho_meal_master_PRIMARY"), new TableField[] { HoMealMaster.HO_MEAL_MASTER.MEAL_TYPE_ID }, true);
    public static final UniqueKey<HoWeeklyMealRecord> KEY_HO_WEEKLY_MEAL_PRIMARY = Internal.createUniqueKey(HoWeeklyMeal.HO_WEEKLY_MEAL, DSL.name("KEY_ho_weekly_meal_PRIMARY"), new TableField[] { HoWeeklyMeal.HO_WEEKLY_MEAL.MEAL_DATE, HoWeeklyMeal.HO_WEEKLY_MEAL.MEAL_TYPE_ID, HoWeeklyMeal.HO_WEEKLY_MEAL.PLANT }, true);
    public static final UniqueKey<IbacoDbstockRecord> KEY_IBACO_DBSTOCK_PRIMARY = Internal.createUniqueKey(IbacoDbstock.IBACO_DBSTOCK, DSL.name("KEY_ibaco_dbstock_PRIMARY"), new TableField[] { IbacoDbstock.IBACO_DBSTOCK.PLANT_CODE, IbacoDbstock.IBACO_DBSTOCK.STOCK_DATE, IbacoDbstock.IBACO_DBSTOCK.STOCK_ID }, true);
    public static final UniqueKey<IbacoMaterialRecord> KEY_IBACO_MATERIAL_PRIMARY = Internal.createUniqueKey(IbacoMaterial.IBACO_MATERIAL, DSL.name("KEY_ibaco_material_PRIMARY"), new TableField[] { IbacoMaterial.IBACO_MATERIAL.SERIAL_NO, IbacoMaterial.IBACO_MATERIAL.MATERIAL_CODE }, true);
    public static final UniqueKey<IbacoOyaloCustomerRecord> KEY_IBACO_OYALO_CUSTOMER_PRIMARY = Internal.createUniqueKey(IbacoOyaloCustomer.IBACO_OYALO_CUSTOMER, DSL.name("KEY_ibaco_oyalo_customer_PRIMARY"), new TableField[] { IbacoOyaloCustomer.IBACO_OYALO_CUSTOMER.CUSTOMER_CODE }, true);
    public static final UniqueKey<IbacoStockRecord> KEY_IBACO_STOCK_PRIMARY = Internal.createUniqueKey(IbacoStock.IBACO_STOCK, DSL.name("KEY_ibaco_stock_PRIMARY"), new TableField[] { IbacoStock.IBACO_STOCK.COMP_CODE, IbacoStock.IBACO_STOCK.PLANT_CODE, IbacoStock.IBACO_STOCK.MATERIAL_CODE, IbacoStock.IBACO_STOCK.KUNNR, IbacoStock.IBACO_STOCK.CREATED_ON, IbacoStock.IBACO_STOCK.CHARG }, true);
    public static final UniqueKey<InvoiceUploadRecord> KEY_INVOICE_UPLOAD_PRIMARY = Internal.createUniqueKey(InvoiceUpload.INVOICE_UPLOAD, DSL.name("KEY_invoice_upload_PRIMARY"), new TableField[] { InvoiceUpload.INVOICE_UPLOAD.COMP_CODE, InvoiceUpload.INVOICE_UPLOAD.VENDOR_CODE, InvoiceUpload.INVOICE_UPLOAD.PO_NUMBER }, true);
    public static final UniqueKey<IvrCallRegisterRecord> KEY_IVR_CALL_REGISTER_PRIMARY = Internal.createUniqueKey(IvrCallRegister.IVR_CALL_REGISTER, DSL.name("KEY_ivr_call_register_PRIMARY"), new TableField[] { IvrCallRegister.IVR_CALL_REGISTER.TICKET_ID }, true);
    public static final UniqueKey<IvrCallStatusMasterRecord> KEY_IVR_CALL_STATUS_MASTER_PRIMARY = Internal.createUniqueKey(IvrCallStatusMaster.IVR_CALL_STATUS_MASTER, DSL.name("KEY_ivr_call_status_master_PRIMARY"), new TableField[] { IvrCallStatusMaster.IVR_CALL_STATUS_MASTER.CALL_STATUS_ID }, true);
    public static final UniqueKey<IvrCategoryMasterRecord> KEY_IVR_CATEGORY_MASTER_PRIMARY = Internal.createUniqueKey(IvrCategoryMaster.IVR_CATEGORY_MASTER, DSL.name("KEY_ivr_category_master_PRIMARY"), new TableField[] { IvrCategoryMaster.IVR_CATEGORY_MASTER.CATEGORY_ID, IvrCategoryMaster.IVR_CATEGORY_MASTER.DIVISION_ID }, true);
    public static final UniqueKey<IvrCcMasterRecord> KEY_IVR_CC_MASTER_PRIMARY = Internal.createUniqueKey(IvrCcMaster.IVR_CC_MASTER, DSL.name("KEY_ivr_cc_master_PRIMARY"), new TableField[] { IvrCcMaster.IVR_CC_MASTER.ENQUIRY_TYPE_ID, IvrCcMaster.IVR_CC_MASTER.OPTION_ID }, true);
    public static final UniqueKey<IvrDivisionMasterRecord> KEY_IVR_DIVISION_MASTER_PRIMARY = Internal.createUniqueKey(IvrDivisionMaster.IVR_DIVISION_MASTER, DSL.name("KEY_ivr_division_master_PRIMARY"), new TableField[] { IvrDivisionMaster.IVR_DIVISION_MASTER.DIVISION_ID, IvrDivisionMaster.IVR_DIVISION_MASTER.BUSINESS_TYPE_ID }, true);
    public static final UniqueKey<IvrEscalationMasterRecord> KEY_IVR_ESCALATION_MASTER_PRIMARY = Internal.createUniqueKey(IvrEscalationMaster.IVR_ESCALATION_MASTER, DSL.name("KEY_ivr_escalation_master_PRIMARY"), new TableField[] { IvrEscalationMaster.IVR_ESCALATION_MASTER.SERIAL_ID }, true);
    public static final UniqueKey<IvrHolidayMasterRecord> KEY_IVR_HOLIDAY_MASTER_PRIMARY = Internal.createUniqueKey(IvrHolidayMaster.IVR_HOLIDAY_MASTER, DSL.name("KEY_ivr_holiday_master_PRIMARY"), new TableField[] { IvrHolidayMaster.IVR_HOLIDAY_MASTER.HOLIDAY_DATE }, true);
    public static final UniqueKey<IvrLanguageMasterRecord> KEY_IVR_LANGUAGE_MASTER_PRIMARY = Internal.createUniqueKey(IvrLanguageMaster.IVR_LANGUAGE_MASTER, DSL.name("KEY_ivr_language_master_PRIMARY"), new TableField[] { IvrLanguageMaster.IVR_LANGUAGE_MASTER.LANGUAGE_ID }, true);
    public static final UniqueKey<IvrOptionMasterRecord> KEY_IVR_OPTION_MASTER_PRIMARY = Internal.createUniqueKey(IvrOptionMaster.IVR_OPTION_MASTER, DSL.name("KEY_ivr_option_master_PRIMARY"), new TableField[] { IvrOptionMaster.IVR_OPTION_MASTER.DIVISION_ID, IvrOptionMaster.IVR_OPTION_MASTER.BUSINESS_TYPE_ID, IvrOptionMaster.IVR_OPTION_MASTER.OPTION_ID, IvrOptionMaster.IVR_OPTION_MASTER.MENU_ID, IvrOptionMaster.IVR_OPTION_MASTER.SUB_OPTION_ID }, true);
    public static final UniqueKey<IvrSubDivisionMasterRecord> KEY_IVR_SUB_DIVISION_MASTER_PRIMARY = Internal.createUniqueKey(IvrSubDivisionMaster.IVR_SUB_DIVISION_MASTER, DSL.name("KEY_ivr_sub_division_master_PRIMARY"), new TableField[] { IvrSubDivisionMaster.IVR_SUB_DIVISION_MASTER.SUB_DIVISION_ID, IvrSubDivisionMaster.IVR_SUB_DIVISION_MASTER.DIVISION_ID }, true);
    public static final UniqueKey<IvrSupportCallHistoryRecord> KEY_IVR_SUPPORT_CALL_HISTORY_PRIMARY = Internal.createUniqueKey(IvrSupportCallHistory.IVR_SUPPORT_CALL_HISTORY, DSL.name("KEY_ivr_support_call_history_PRIMARY"), new TableField[] { IvrSupportCallHistory.IVR_SUPPORT_CALL_HISTORY.TICKET_ID, IvrSupportCallHistory.IVR_SUPPORT_CALL_HISTORY.MOBILE_NUMBER, IvrSupportCallHistory.IVR_SUPPORT_CALL_HISTORY.COUNT }, true);
    public static final UniqueKey<IvrUnregnoMasterRecord> KEY_IVR_UNREGNO_MASTER_PRIMARY = Internal.createUniqueKey(IvrUnregnoMaster.IVR_UNREGNO_MASTER, DSL.name("KEY_ivr_unregno_master_PRIMARY"), new TableField[] { IvrUnregnoMaster.IVR_UNREGNO_MASTER.MOBILE_NUMBER, IvrUnregnoMaster.IVR_UNREGNO_MASTER.REGISTERED_DATE }, true);
    public static final UniqueKey<IvrWorkingHrsMasterRecord> KEY_IVR_WORKING_HRS_MASTER_PRIMARY = Internal.createUniqueKey(IvrWorkingHrsMaster.IVR_WORKING_HRS_MASTER, DSL.name("KEY_ivr_working_hrs_master_PRIMARY"), new TableField[] { IvrWorkingHrsMaster.IVR_WORKING_HRS_MASTER.SNO }, true);
    public static final UniqueKey<LandlordFieldforceRecord> KEY_LANDLORD_FIELDFORCE_PRIMARY = Internal.createUniqueKey(LandlordFieldforce.LANDLORD_FIELDFORCE, DSL.name("KEY_landlord_fieldforce_PRIMARY"), new TableField[] { LandlordFieldforce.LANDLORD_FIELDFORCE.VENDOR_CODE }, true);
    public static final UniqueKey<LogisticArrearRecord> KEY_LOGISTIC_ARREAR_PRIMARY = Internal.createUniqueKey(LogisticArrear.LOGISTIC_ARREAR, DSL.name("KEY_logistic_arrear_PRIMARY"), new TableField[] { LogisticArrear.LOGISTIC_ARREAR.COMP_CODE, LogisticArrear.LOGISTIC_ARREAR.DOC_ID, LogisticArrear.LOGISTIC_ARREAR.PLANT }, true);
    public static final UniqueKey<LogisticDeductionRecord> KEY_LOGISTIC_DEDUCTION_PRIMARY = Internal.createUniqueKey(LogisticDeduction.LOGISTIC_DEDUCTION, DSL.name("KEY_logistic_deduction_PRIMARY"), new TableField[] { LogisticDeduction.LOGISTIC_DEDUCTION.COMP_CODE, LogisticDeduction.LOGISTIC_DEDUCTION.ZDOCNO, LogisticDeduction.LOGISTIC_DEDUCTION.ZDOCITEM }, true);
    public static final UniqueKey<LogisticTransHeaderRecord> KEY_LOGISTIC_TRANS_HEADER_PRIMARY = Internal.createUniqueKey(LogisticTransHeader.LOGISTIC_TRANS_HEADER, DSL.name("KEY_logistic_trans_header_PRIMARY"), new TableField[] { LogisticTransHeader.LOGISTIC_TRANS_HEADER.COMP_CODE, LogisticTransHeader.LOGISTIC_TRANS_HEADER.TRANSPORTER, LogisticTransHeader.LOGISTIC_TRANS_HEADER.PLANT, LogisticTransHeader.LOGISTIC_TRANS_HEADER.ROUTE, LogisticTransHeader.LOGISTIC_TRANS_HEADER.BILL_NUM, LogisticTransHeader.LOGISTIC_TRANS_HEADER.BILL_PRD_STR, LogisticTransHeader.LOGISTIC_TRANS_HEADER.BILL_PRD_END }, true);
    public static final UniqueKey<LogisticTransItemRecord> KEY_LOGISTIC_TRANS_ITEM_PRIMARY = Internal.createUniqueKey(LogisticTransItem.LOGISTIC_TRANS_ITEM, DSL.name("KEY_logistic_trans_item_PRIMARY"), new TableField[] { LogisticTransItem.LOGISTIC_TRANS_ITEM.COMP_CODE, LogisticTransItem.LOGISTIC_TRANS_ITEM.TRANSPORTER, LogisticTransItem.LOGISTIC_TRANS_ITEM.WERKS, LogisticTransItem.LOGISTIC_TRANS_ITEM.ROUTE_NO, LogisticTransItem.LOGISTIC_TRANS_ITEM.CRDAT }, true);
    public static final UniqueKey<MaterialStockRecord> KEY_MATERIAL_STOCK_PRIMARY = Internal.createUniqueKey(MaterialStock.MATERIAL_STOCK, DSL.name("KEY_material_stock_PRIMARY"), new TableField[] { MaterialStock.MATERIAL_STOCK.COMP_CODE, MaterialStock.MATERIAL_STOCK.MATNR, MaterialStock.MATERIAL_STOCK.WERKS, MaterialStock.MATERIAL_STOCK.CHARG, MaterialStock.MATERIAL_STOCK.SOBKZ, MaterialStock.MATERIAL_STOCK.LIFNR }, true);
    public static final UniqueKey<MenuCardUploadRecord> KEY_MENU_CARD_UPLOAD_PRIMARY = Internal.createUniqueKey(MenuCardUpload.MENU_CARD_UPLOAD, DSL.name("KEY_menu_Card_Upload_PRIMARY"), new TableField[] { MenuCardUpload.MENU_CARD_UPLOAD.SERIAL_NO }, true);
    public static final UniqueKey<MenumasterRecord> KEY_MENUMASTER_PRIMARY = Internal.createUniqueKey(Menumaster.MENUMASTER, DSL.name("KEY_menumaster_PRIMARY"), new TableField[] { Menumaster.MENUMASTER.MENU_ID }, true);
    public static final UniqueKey<MilkAntibioticRecord> KEY_MILK_ANTIBIOTIC_PRIMARY = Internal.createUniqueKey(MilkAntibiotic.MILK_ANTIBIOTIC, DSL.name("KEY_milk_antibiotic_PRIMARY"), new TableField[] { MilkAntibiotic.MILK_ANTIBIOTIC.WERKS, MilkAntibiotic.MILK_ANTIBIOTIC.CRDAT, MilkAntibiotic.MILK_ANTIBIOTIC.SHIFT, MilkAntibiotic.MILK_ANTIBIOTIC.SOCIETY, MilkAntibiotic.MILK_ANTIBIOTIC.TRUCK_TIME, MilkAntibiotic.MILK_ANTIBIOTIC.TRUCK_NO }, true);
    public static final UniqueKey<MilkArrearRecord> KEY_MILK_ARREAR_PRIMARY = Internal.createUniqueKey(MilkArrear.MILK_ARREAR, DSL.name("KEY_milk_arrear_PRIMARY"), new TableField[] { MilkArrear.MILK_ARREAR.COMP_CODE, MilkArrear.MILK_ARREAR.POST_DAT, MilkArrear.MILK_ARREAR.POST_TIME, MilkArrear.MILK_ARREAR.PLANT, MilkArrear.MILK_ARREAR.ARREAR_CODE, MilkArrear.MILK_ARREAR.ARREAR_DAT, MilkArrear.MILK_ARREAR.ARREAR_SHIFT, MilkArrear.MILK_ARREAR.MILK_TYPE, MilkArrear.MILK_ARREAR.SOCIETY, MilkArrear.MILK_ARREAR.P_CODE, MilkArrear.MILK_ARREAR.FARMER }, true);
    public static final UniqueKey<MilkAvgRecord> KEY_MILK_AVG_PRIMARY = Internal.createUniqueKey(MilkAvg.MILK_AVG, DSL.name("KEY_milk_avg_PRIMARY"), new TableField[] { MilkAvg.MILK_AVG.PLANT, MilkAvg.MILK_AVG.SOCIETY, MilkAvg.MILK_AVG.CRDAT, MilkAvg.MILK_AVG.SHIFT }, true);
    public static final UniqueKey<MilkAvgArchRecord> KEY_MILK_AVG_ARCH_PRIMARY = Internal.createUniqueKey(MilkAvgArch.MILK_AVG_ARCH, DSL.name("KEY_milk_avg_arch_PRIMARY"), new TableField[] { MilkAvgArch.MILK_AVG_ARCH.PLANT, MilkAvgArch.MILK_AVG_ARCH.SOCIETY, MilkAvgArch.MILK_AVG_ARCH.CRDAT, MilkAvgArch.MILK_AVG_ARCH.SHIFT }, true);
    public static final UniqueKey<MilkBounsRecord> KEY_MILK_BOUNS_PRIMARY = Internal.createUniqueKey(MilkBouns.MILK_BOUNS, DSL.name("KEY_milk_bouns_PRIMARY"), new TableField[] { MilkBouns.MILK_BOUNS.COMP_CODE, MilkBouns.MILK_BOUNS.POSTINGDATE, MilkBouns.MILK_BOUNS.WERKS, MilkBouns.MILK_BOUNS.SOCIETY, MilkBouns.MILK_BOUNS.PARTNER, MilkBouns.MILK_BOUNS.J_1KFTBUS, MilkBouns.MILK_BOUNS.EBELN, MilkBouns.MILK_BOUNS.EBELP, MilkBouns.MILK_BOUNS.CRDAT, MilkBouns.MILK_BOUNS.SHIFT, MilkBouns.MILK_BOUNS.INC_TYPE, MilkBouns.MILK_BOUNS.MILK_TYPE }, true);
    public static final UniqueKey<MilkCustomerSchemeRecord> KEY_MILK_CUSTOMER_SCHEME_PRIMARY = Internal.createUniqueKey(MilkCustomerScheme.MILK_CUSTOMER_SCHEME, DSL.name("KEY_milk_customer_scheme_PRIMARY"), new TableField[] { MilkCustomerScheme.MILK_CUSTOMER_SCHEME.CUSTOMER_CODE }, true);
    public static final UniqueKey<MilkDeductionRecord> KEY_MILK_DEDUCTION_PRIMARY = Internal.createUniqueKey(MilkDeduction.MILK_DEDUCTION, DSL.name("KEY_milk_deduction_PRIMARY"), new TableField[] { MilkDeduction.MILK_DEDUCTION.COMP_CODE, MilkDeduction.MILK_DEDUCTION.ZDOCNO, MilkDeduction.MILK_DEDUCTION.ZDOCITEM }, true);
    public static final UniqueKey<MilkDeductionSdRecord> KEY_MILK_DEDUCTION_SD_PRIMARY = Internal.createUniqueKey(MilkDeductionSd.MILK_DEDUCTION_SD, DSL.name("KEY_milk_deduction_sd_PRIMARY"), new TableField[] { MilkDeductionSd.MILK_DEDUCTION_SD.COMP_CODE, MilkDeductionSd.MILK_DEDUCTION_SD.VBELN, MilkDeductionSd.MILK_DEDUCTION_SD.POSNR, MilkDeductionSd.MILK_DEDUCTION_SD.ERDAT }, true);
    public static final UniqueKey<MilkIncentiveRecord> KEY_MILK_INCENTIVE_PRIMARY = Internal.createUniqueKey(MilkIncentive.MILK_INCENTIVE, DSL.name("KEY_milk_incentive_PRIMARY"), new TableField[] { MilkIncentive.MILK_INCENTIVE.COMP_CODE, MilkIncentive.MILK_INCENTIVE.POSTINGDATE, MilkIncentive.MILK_INCENTIVE.WERKS, MilkIncentive.MILK_INCENTIVE.SOCIETY, MilkIncentive.MILK_INCENTIVE.PARTNER, MilkIncentive.MILK_INCENTIVE.J_1KFTBUS, MilkIncentive.MILK_INCENTIVE.EBELN, MilkIncentive.MILK_INCENTIVE.EBELP, MilkIncentive.MILK_INCENTIVE.CRDAT, MilkIncentive.MILK_INCENTIVE.SHIFT, MilkIncentive.MILK_INCENTIVE.INC_TYPE, MilkIncentive.MILK_INCENTIVE.MILK_TYPE }, true);
    public static final UniqueKey<MilkIncentiveArchRecord> KEY_MILK_INCENTIVE_ARCH_PRIMARY = Internal.createUniqueKey(MilkIncentiveArch.MILK_INCENTIVE_ARCH, DSL.name("KEY_milk_incentive_arch_PRIMARY"), new TableField[] { MilkIncentiveArch.MILK_INCENTIVE_ARCH.COMP_CODE, MilkIncentiveArch.MILK_INCENTIVE_ARCH.POSTINGDATE, MilkIncentiveArch.MILK_INCENTIVE_ARCH.WERKS, MilkIncentiveArch.MILK_INCENTIVE_ARCH.SOCIETY, MilkIncentiveArch.MILK_INCENTIVE_ARCH.PARTNER, MilkIncentiveArch.MILK_INCENTIVE_ARCH.J_1KFTBUS, MilkIncentiveArch.MILK_INCENTIVE_ARCH.EBELN, MilkIncentiveArch.MILK_INCENTIVE_ARCH.EBELP, MilkIncentiveArch.MILK_INCENTIVE_ARCH.CRDAT, MilkIncentiveArch.MILK_INCENTIVE_ARCH.SHIFT, MilkIncentiveArch.MILK_INCENTIVE_ARCH.INC_TYPE, MilkIncentiveArch.MILK_INCENTIVE_ARCH.MILK_TYPE }, true);
    public static final UniqueKey<MilkIncentiveMasterRecord> KEY_MILK_INCENTIVE_MASTER_PRIMARY = Internal.createUniqueKey(MilkIncentiveMaster.MILK_INCENTIVE_MASTER, DSL.name("KEY_milk_incentive_master_PRIMARY"), new TableField[] { MilkIncentiveMaster.MILK_INCENTIVE_MASTER.COMP_CODE, MilkIncentiveMaster.MILK_INCENTIVE_MASTER.INC_TYPE, MilkIncentiveMaster.MILK_INCENTIVE_MASTER.INC_VALID_FROM, MilkIncentiveMaster.MILK_INCENTIVE_MASTER.INC_VALID_TO }, true);
    public static final UniqueKey<MilkLiabilityRecord> KEY_MILK_LIABILITY_PRIMARY = Internal.createUniqueKey(MilkLiability.MILK_LIABILITY, DSL.name("KEY_milk_liability_PRIMARY"), new TableField[] { MilkLiability.MILK_LIABILITY.WERKS, MilkLiability.MILK_LIABILITY.SOCIETY, MilkLiability.MILK_LIABILITY.FROM_DATE, MilkLiability.MILK_LIABILITY.TO_DATE }, true);
    public static final UniqueKey<MilkPaymentHaRecord> KEY_MILK_PAYMENT_HA_PRIMARY = Internal.createUniqueKey(MilkPaymentHa.MILK_PAYMENT_HA, DSL.name("KEY_milk_payment_ha_PRIMARY"), new TableField[] { MilkPaymentHa.MILK_PAYMENT_HA.BILL_NUM, MilkPaymentHa.MILK_PAYMENT_HA.DATE_FRM, MilkPaymentHa.MILK_PAYMENT_HA.DATE_TO, MilkPaymentHa.MILK_PAYMENT_HA.PLANT, MilkPaymentHa.MILK_PAYMENT_HA.COMP_CODE }, true);
    public static final UniqueKey<MilkPaymentHaArchRecord> KEY_MILK_PAYMENT_HA_ARCH_PRIMARY = Internal.createUniqueKey(MilkPaymentHaArch.MILK_PAYMENT_HA_ARCH, DSL.name("KEY_milk_payment_ha_arch_PRIMARY"), new TableField[] { MilkPaymentHaArch.MILK_PAYMENT_HA_ARCH.BILL_NUM, MilkPaymentHaArch.MILK_PAYMENT_HA_ARCH.DATE_FRM, MilkPaymentHaArch.MILK_PAYMENT_HA_ARCH.DATE_TO, MilkPaymentHaArch.MILK_PAYMENT_HA_ARCH.PLANT, MilkPaymentHaArch.MILK_PAYMENT_HA_ARCH.COMP_CODE }, true);
    public static final UniqueKey<MilkPaymentHaTempRecord> KEY_MILK_PAYMENT_HA_TEMP_PRIMARY = Internal.createUniqueKey(MilkPaymentHaTemp.MILK_PAYMENT_HA_TEMP, DSL.name("KEY_milk_payment_ha_temp_PRIMARY"), new TableField[] { MilkPaymentHaTemp.MILK_PAYMENT_HA_TEMP.BILL_NUM, MilkPaymentHaTemp.MILK_PAYMENT_HA_TEMP.DATE_FRM, MilkPaymentHaTemp.MILK_PAYMENT_HA_TEMP.DATE_TO, MilkPaymentHaTemp.MILK_PAYMENT_HA_TEMP.PLANT, MilkPaymentHaTemp.MILK_PAYMENT_HA_TEMP.COMP_CODE }, true);
    public static final UniqueKey<MilkPaymentLiRecord> KEY_MILK_PAYMENT_LI_PRIMARY = Internal.createUniqueKey(MilkPaymentLi.MILK_PAYMENT_LI, DSL.name("KEY_milk_payment_li_PRIMARY"), new TableField[] { MilkPaymentLi.MILK_PAYMENT_LI.COMP_CODE, MilkPaymentLi.MILK_PAYMENT_LI.PLANT, MilkPaymentLi.MILK_PAYMENT_LI.SOCIETY, MilkPaymentLi.MILK_PAYMENT_LI.SS_DATE, MilkPaymentLi.MILK_PAYMENT_LI.SHIFT, MilkPaymentLi.MILK_PAYMENT_LI.MILK_TYPE, MilkPaymentLi.MILK_PAYMENT_LI.FARMER }, true);
    public static final UniqueKey<MilkPaymentLiArchRecord> KEY_MILK_PAYMENT_LI_ARCH_PRIMARY = Internal.createUniqueKey(MilkPaymentLiArch.MILK_PAYMENT_LI_ARCH, DSL.name("KEY_milk_payment_li_arch_PRIMARY"), new TableField[] { MilkPaymentLiArch.MILK_PAYMENT_LI_ARCH.COMP_CODE, MilkPaymentLiArch.MILK_PAYMENT_LI_ARCH.PLANT, MilkPaymentLiArch.MILK_PAYMENT_LI_ARCH.SOCIETY, MilkPaymentLiArch.MILK_PAYMENT_LI_ARCH.SS_DATE, MilkPaymentLiArch.MILK_PAYMENT_LI_ARCH.SHIFT, MilkPaymentLiArch.MILK_PAYMENT_LI_ARCH.MILK_TYPE, MilkPaymentLiArch.MILK_PAYMENT_LI_ARCH.FARMER }, true);
    public static final UniqueKey<MilkPlantRecord> KEY_MILK_PLANT_PRIMARY = Internal.createUniqueKey(MilkPlant.MILK_PLANT, DSL.name("KEY_milk_plant_PRIMARY"), new TableField[] { MilkPlant.MILK_PLANT.PLANT }, true);
    public static final UniqueKey<MilkRecoveryRecord> KEY_MILK_RECOVERY_PRIMARY = Internal.createUniqueKey(MilkRecovery.MILK_RECOVERY, DSL.name("KEY_milk_recovery_PRIMARY"), new TableField[] { MilkRecovery.MILK_RECOVERY.COMP_CODE, MilkRecovery.MILK_RECOVERY.POST_DAT, MilkRecovery.MILK_RECOVERY.POST_TIME, MilkRecovery.MILK_RECOVERY.PLANT, MilkRecovery.MILK_RECOVERY.RECOVERY, MilkRecovery.MILK_RECOVERY.RECVRY_DATE, MilkRecovery.MILK_RECOVERY.RECVRY_SHIFT, MilkRecovery.MILK_RECOVERY.MILK_TYPE, MilkRecovery.MILK_RECOVERY.SOCIETY, MilkRecovery.MILK_RECOVERY.P_CODE, MilkRecovery.MILK_RECOVERY.FARMER }, true);
    public static final UniqueKey<MilkSnfCompareRecord> KEY_MILK_SNF_COMPARE_PRIMARY = Internal.createUniqueKey(MilkSnfCompare.MILK_SNF_COMPARE, DSL.name("KEY_milk_snf_compare_PRIMARY"), new TableField[] { MilkSnfCompare.MILK_SNF_COMPARE.PLANT, MilkSnfCompare.MILK_SNF_COMPARE.SOCIETY, MilkSnfCompare.MILK_SNF_COMPARE.SS_DATE, MilkSnfCompare.MILK_SNF_COMPARE.SHIFT }, true);
    public static final UniqueKey<MilkSpoilageRecord> KEY_MILK_SPOILAGE_PRIMARY = Internal.createUniqueKey(MilkSpoilage.MILK_SPOILAGE, DSL.name("KEY_milk_spoilage_PRIMARY"), new TableField[] { MilkSpoilage.MILK_SPOILAGE.CRDAT, MilkSpoilage.MILK_SPOILAGE.SHIFT, MilkSpoilage.MILK_SPOILAGE.MILK_CATEGORY, MilkSpoilage.MILK_SPOILAGE.WERKS, MilkSpoilage.MILK_SPOILAGE.SOCIETY }, true);
    public static final UniqueKey<MilkSpoilageCategoryRecord> KEY_MILK_SPOILAGE_CATEGORY_PRIMARY = Internal.createUniqueKey(MilkSpoilageCategory.MILK_SPOILAGE_CATEGORY, DSL.name("KEY_milk_spoilage_category_PRIMARY"), new TableField[] { MilkSpoilageCategory.MILK_SPOILAGE_CATEGORY.MILK_CODE }, true);
    public static final UniqueKey<MonthlyVehicleSummaryRecord> KEY_MONTHLY_VEHICLE_SUMMARY_PRIMARY = Internal.createUniqueKey(MonthlyVehicleSummary.MONTHLY_VEHICLE_SUMMARY, DSL.name("KEY_monthly_vehicle_summary_PRIMARY"), new TableField[] { MonthlyVehicleSummary.MONTHLY_VEHICLE_SUMMARY.COMP_CODE, MonthlyVehicleSummary.MONTHLY_VEHICLE_SUMMARY.SHIPMENT_NO, MonthlyVehicleSummary.MONTHLY_VEHICLE_SUMMARY.LBLNI }, true);
    public static final UniqueKey<MspDetailsRecord> KEY_MSP_DETAILS_PRIMARY = Internal.createUniqueKey(MspDetails.MSP_DETAILS, DSL.name("KEY_msp_details_PRIMARY"), new TableField[] { MspDetails.MSP_DETAILS.CUSTOMER_CODE }, true);
    public static final UniqueKey<NewsLetterRecord> KEY_NEWS_LETTER_PRIMARY = Internal.createUniqueKey(NewsLetter.NEWS_LETTER, DSL.name("KEY_news_letter_PRIMARY"), new TableField[] { NewsLetter.NEWS_LETTER.COUNTRY_CODE, NewsLetter.NEWS_LETTER.REGION_CODE, NewsLetter.NEWS_LETTER.TYPE_ID, NewsLetter.NEWS_LETTER.UPLOAD_TYPE_ID, NewsLetter.NEWS_LETTER.SERIAL_NO }, true);
    public static final UniqueKey<NewsLetterLanguageRecord> KEY_NEWS_LETTER_LANGUAGE_PRIMARY = Internal.createUniqueKey(NewsLetterLanguage.NEWS_LETTER_LANGUAGE, DSL.name("KEY_news_letter_language_PRIMARY"), new TableField[] { NewsLetterLanguage.NEWS_LETTER_LANGUAGE.LANGUAGE_ID }, true);
    public static final UniqueKey<NumberRangeRecord> KEY_NUMBER_RANGE_PRIMARY = Internal.createUniqueKey(NumberRange.NUMBER_RANGE, DSL.name("KEY_number_range_PRIMARY"), new TableField[] { NumberRange.NUMBER_RANGE.NUMBER_ID }, true);
    public static final UniqueKey<OrderIndentRecord> KEY_ORDER_INDENT_PRIMARY = Internal.createUniqueKey(OrderIndent.ORDER_INDENT, DSL.name("KEY_order_indent_PRIMARY"), new TableField[] { OrderIndent.ORDER_INDENT.CUSTOMER_CODE, OrderIndent.ORDER_INDENT.MONTH, OrderIndent.ORDER_INDENT.YEAR, OrderIndent.ORDER_INDENT.MATERIAL_CODE }, true);
    public static final UniqueKey<OtpLoginHistoryRecord> KEY_OTP_LOGIN_HISTORY_PRIMARY = Internal.createUniqueKey(OtpLoginHistory.OTP_LOGIN_HISTORY, DSL.name("KEY_otp_login_history_PRIMARY"), new TableField[] { OtpLoginHistory.OTP_LOGIN_HISTORY.COMP_CODE, OtpLoginHistory.OTP_LOGIN_HISTORY.USER_ID, OtpLoginHistory.OTP_LOGIN_HISTORY.OTP_GEN_TIME }, true);
    public static final UniqueKey<PincodeMasterRecord> KEY_PINCODE_MASTER_PRIMARY = Internal.createUniqueKey(PincodeMaster.PINCODE_MASTER, DSL.name("KEY_pincode_master_PRIMARY"), new TableField[] { PincodeMaster.PINCODE_MASTER.PINCODE }, true);
    public static final UniqueKey<PlantMasterRecord> KEY_PLANT_MASTER_PRIMARY = Internal.createUniqueKey(PlantMaster.PLANT_MASTER, DSL.name("KEY_plant_master_PRIMARY"), new TableField[] { PlantMaster.PLANT_MASTER.PLANT }, true);
    public static final UniqueKey<PoAcknowledgementRecord> KEY_PO_ACKNOWLEDGEMENT_PRIMARY = Internal.createUniqueKey(PoAcknowledgement.PO_ACKNOWLEDGEMENT, DSL.name("KEY_po_acknowledgement_PRIMARY"), new TableField[] { PoAcknowledgement.PO_ACKNOWLEDGEMENT.VENDOR_CODE, PoAcknowledgement.PO_ACKNOWLEDGEMENT.PO_NUMBER }, true);
    public static final UniqueKey<PoHeaderRecord> KEY_PO_HEADER_PRIMARY = Internal.createUniqueKey(PoHeader.PO_HEADER, DSL.name("KEY_po_header_PRIMARY"), new TableField[] { PoHeader.PO_HEADER.PO_NUMBER, PoHeader.PO_HEADER.VENDOR_CODE, PoHeader.PO_HEADER.COMP_CODE }, true);
    public static final UniqueKey<PoItemRecord> KEY_PO_ITEM_PRIMARY = Internal.createUniqueKey(PoItem.PO_ITEM, DSL.name("KEY_po_item_PRIMARY"), new TableField[] { PoItem.PO_ITEM.PO_NUMBER, PoItem.PO_ITEM.PO_ITEM_NO, PoItem.PO_ITEM.COMP_CODE }, true);
    public static final UniqueKey<PoItemHistoryRecord> KEY_PO_ITEM_HISTORY_PRIMARY = Internal.createUniqueKey(PoItemHistory.PO_ITEM_HISTORY, DSL.name("KEY_po_item_history_PRIMARY"), new TableField[] { PoItemHistory.PO_ITEM_HISTORY.PO_NUMBER, PoItemHistory.PO_ITEM_HISTORY.PO_ITEM_NO, PoItemHistory.PO_ITEM_HISTORY.COMP_CODE, PoItemHistory.PO_ITEM_HISTORY.MAT_DOC, PoItemHistory.PO_ITEM_HISTORY.DOC_YEAR, PoItemHistory.PO_ITEM_HISTORY.MATDOC_ITM }, true);
    public static final UniqueKey<PoItemServiceRecord> KEY_PO_ITEM_SERVICE_PRIMARY = Internal.createUniqueKey(PoItemService.PO_ITEM_SERVICE, DSL.name("KEY_po_item_service_PRIMARY"), new TableField[] { PoItemService.PO_ITEM_SERVICE.PCKG_NO, PoItemService.PO_ITEM_SERVICE.COMP_CODE, PoItemService.PO_ITEM_SERVICE.SUBPCKG_NO }, true);
    public static final UniqueKey<PoListRecord> KEY_PO_LIST_PRIMARY = Internal.createUniqueKey(PoList.PO_LIST, DSL.name("KEY_po_list_PRIMARY"), new TableField[] { PoList.PO_LIST.COMP_CODE, PoList.PO_LIST.VENDOR_CODE, PoList.PO_LIST.PO_NUMBER, PoList.PO_LIST.PO_ITEM_NO }, true);
    public static final UniqueKey<PoPdfRecord> KEY_PO_PDF_PRIMARY = Internal.createUniqueKey(PoPdf.PO_PDF, DSL.name("KEY_po_pdf_PRIMARY"), new TableField[] { PoPdf.PO_PDF.COMP_CODE, PoPdf.PO_PDF.VENDOR_CODE, PoPdf.PO_PDF.PO_NUMBER }, true);
    public static final UniqueKey<PortalUsageMasterRecord> KEY_PORTAL_USAGE_MASTER_PRIMARY = Internal.createUniqueKey(PortalUsageMaster.PORTAL_USAGE_MASTER, DSL.name("KEY_portal_usage_master_PRIMARY"), new TableField[] { PortalUsageMaster.PORTAL_USAGE_MASTER.S_NO, PortalUsageMaster.PORTAL_USAGE_MASTER.ACC_GRP_CODE }, true);
    public static final UniqueKey<PortalUserAccessRecord> KEY_PORTAL_USER_ACCESS_PRIMARY = Internal.createUniqueKey(PortalUserAccess.PORTAL_USER_ACCESS, DSL.name("KEY_portal_user_access_PRIMARY"), new TableField[] { PortalUserAccess.PORTAL_USER_ACCESS.COMP_CODE, PortalUserAccess.PORTAL_USER_ACCESS.ROLE_ID, PortalUserAccess.PORTAL_USER_ACCESS.PORTAL_ACCESS_ID }, true);
    public static final UniqueKey<PositionRecord> KEY_POSITION_PRIMARY = Internal.createUniqueKey(Position.POSITION, DSL.name("KEY_position_PRIMARY"), new TableField[] { Position.POSITION.POSITION_ID }, true);
    public static final UniqueKey<ProductRecord> KEY_PRODUCT_PRIMARY = Internal.createUniqueKey(Product.PRODUCT, DSL.name("KEY_product_PRIMARY"), new TableField[] { Product.PRODUCT.ITEM_NO, Product.PRODUCT.COMP_CODE, Product.PRODUCT.DEPARTMENT_ID }, true);
    public static final UniqueKey<ProductLiRecord> KEY_PRODUCT_LI_PRIMARY = Internal.createUniqueKey(ProductLi.PRODUCT_LI, DSL.name("KEY_product_li_PRIMARY"), new TableField[] { ProductLi.PRODUCT_LI.ITEM_NO, ProductLi.PRODUCT_LI.COMP_CODE, ProductLi.PRODUCT_LI.DEPARTMENT_ID, ProductLi.PRODUCT_LI.DEPARTMENT_VISIBLE_ID }, true);
    public static final UniqueKey<ProvisionalDepartmentRecord> KEY_PROVISIONAL_DEPARTMENT_PRIMARY = Internal.createUniqueKey(ProvisionalDepartment.PROVISIONAL_DEPARTMENT, DSL.name("KEY_provisional_department_PRIMARY"), new TableField[] { ProvisionalDepartment.PROVISIONAL_DEPARTMENT.DEPT_ID }, true);
    public static final UniqueKey<ProvisionalExpMasterRecord> KEY_PROVISIONAL_EXP_MASTER_PRIMARY = Internal.createUniqueKey(ProvisionalExpMaster.PROVISIONAL_EXP_MASTER, DSL.name("KEY_provisional_exp_master_PRIMARY"), new TableField[] { ProvisionalExpMaster.PROVISIONAL_EXP_MASTER.SERIAL_NO }, true);
    public static final UniqueKey<ProvisionalGlMasterRecord> KEY_PROVISIONAL_GL_MASTER_PRIMARY = Internal.createUniqueKey(ProvisionalGlMaster.PROVISIONAL_GL_MASTER, DSL.name("KEY_provisional_gl_master_PRIMARY"), new TableField[] { ProvisionalGlMaster.PROVISIONAL_GL_MASTER.GL_ACC_NO }, true);
    public static final UniqueKey<ProvisionalMonthlyRecord> KEY_PROVISIONAL_MONTHLY_PRIMARY = Internal.createUniqueKey(ProvisionalMonthly.PROVISIONAL_MONTHLY, DSL.name("KEY_provisional_monthly_PRIMARY"), new TableField[] { ProvisionalMonthly.PROVISIONAL_MONTHLY.YEAR, ProvisionalMonthly.PROVISIONAL_MONTHLY.MONTH, ProvisionalMonthly.PROVISIONAL_MONTHLY.PROVISION_DESC }, true);
    public static final UniqueKey<ProvisionalProfitcenterRecord> KEY_PROVISIONAL_PROFITCENTER_PRIMARY = Internal.createUniqueKey(ProvisionalProfitcenter.PROVISIONAL_PROFITCENTER, DSL.name("KEY_provisional_profitcenter_PRIMARY"), new TableField[] { ProvisionalProfitcenter.PROVISIONAL_PROFITCENTER.PROFIT_CENTER, ProvisionalProfitcenter.PROVISIONAL_PROFITCENTER.COST_CETER }, true);
    public static final UniqueKey<PurchasePlantMasterRecord> KEY_PURCHASE_PLANT_MASTER_PRIMARY = Internal.createUniqueKey(PurchasePlantMaster.PURCHASE_PLANT_MASTER, DSL.name("KEY_purchase_plant_master_PRIMARY"), new TableField[] { PurchasePlantMaster.PURCHASE_PLANT_MASTER.PLAN_CODE }, true);
    public static final UniqueKey<PurchaseVendorMenuApprovalRecord> KEY_PURCHASE_VENDOR_MENU_APPROVAL_PRIMARY = Internal.createUniqueKey(PurchaseVendorMenuApproval.PURCHASE_VENDOR_MENU_APPROVAL, DSL.name("KEY_purchase_vendor_menu_approval_PRIMARY"), new TableField[] { PurchaseVendorMenuApproval.PURCHASE_VENDOR_MENU_APPROVAL.VENDOR_CODE }, true);
    public static final UniqueKey<PurchaseVendorOtpHistoryRecord> KEY_PURCHASE_VENDOR_OTP_HISTORY_PRIMARY = Internal.createUniqueKey(PurchaseVendorOtpHistory.PURCHASE_VENDOR_OTP_HISTORY, DSL.name("KEY_purchase_vendor_otp_history_PRIMARY"), new TableField[] { PurchaseVendorOtpHistory.PURCHASE_VENDOR_OTP_HISTORY.COMP_CODE, PurchaseVendorOtpHistory.PURCHASE_VENDOR_OTP_HISTORY.USER_ID, PurchaseVendorOtpHistory.PURCHASE_VENDOR_OTP_HISTORY.OTP_GEN_TIME }, true);
    public static final UniqueKey<PurgrpMatMasterRecord> KEY_PURGRP_MAT_MASTER_PRIMARY = Internal.createUniqueKey(PurgrpMatMaster.PURGRP_MAT_MASTER, DSL.name("KEY_purGrp_mat_master_PRIMARY"), new TableField[] { PurgrpMatMaster.PURGRP_MAT_MASTER.PURGRP }, true);
    public static final UniqueKey<RbBuildingMasterRecord> KEY_RB_BUILDING_MASTER_PRIMARY = Internal.createUniqueKey(RbBuildingMaster.RB_BUILDING_MASTER, DSL.name("KEY_RB_BUILDING_MASTER_PRIMARY"), new TableField[] { RbBuildingMaster.RB_BUILDING_MASTER.BUILDING_CODE, RbBuildingMaster.RB_BUILDING_MASTER.RB_LOCATION_CODE }, true);
    public static final UniqueKey<RbFloorMasterRecord> KEY_RB_FLOOR_MASTER_PRIMARY = Internal.createUniqueKey(RbFloorMaster.RB_FLOOR_MASTER, DSL.name("KEY_RB_FLOOR_MASTER_PRIMARY"), new TableField[] { RbFloorMaster.RB_FLOOR_MASTER.FLOOR_CODE, RbFloorMaster.RB_FLOOR_MASTER.BUILDING_CODE, RbFloorMaster.RB_FLOOR_MASTER.RB_LOCATION_CODE }, true);
    public static final UniqueKey<RbLocationMasterRecord> KEY_RB_LOCATION_MASTER_PRIMARY = Internal.createUniqueKey(RbLocationMaster.RB_LOCATION_MASTER, DSL.name("KEY_RB_LOCATION_MASTER_PRIMARY"), new TableField[] { RbLocationMaster.RB_LOCATION_MASTER.RB_LOCATION_CODE }, true);
    public static final UniqueKey<RbRoomBookingRecord> KEY_RB_ROOM_BOOKING_PRIMARY = Internal.createUniqueKey(RbRoomBooking.RB_ROOM_BOOKING, DSL.name("KEY_RB_ROOM_BOOKING_PRIMARY"), new TableField[] { RbRoomBooking.RB_ROOM_BOOKING.RB_LOCATION_CODE, RbRoomBooking.RB_ROOM_BOOKING.BUILDING_CODE, RbRoomBooking.RB_ROOM_BOOKING.FLOOR_CODE, RbRoomBooking.RB_ROOM_BOOKING.ROOM_CODE, RbRoomBooking.RB_ROOM_BOOKING.BOOKED_DATE, RbRoomBooking.RB_ROOM_BOOKING.FROM_TIME }, true);
    public static final UniqueKey<RbRoomBookingLogRecord> KEY_RB_ROOM_BOOKING_LOG_PRIMARY = Internal.createUniqueKey(RbRoomBookingLog.RB_ROOM_BOOKING_LOG, DSL.name("KEY_RB_ROOM_BOOKING_LOG_PRIMARY"), new TableField[] { RbRoomBookingLog.RB_ROOM_BOOKING_LOG.RB_LOCATION_CODE, RbRoomBookingLog.RB_ROOM_BOOKING_LOG.BUILDING_CODE, RbRoomBookingLog.RB_ROOM_BOOKING_LOG.FLOOR_CODE, RbRoomBookingLog.RB_ROOM_BOOKING_LOG.ROOM_CODE, RbRoomBookingLog.RB_ROOM_BOOKING_LOG.BOOKED_DATE, RbRoomBookingLog.RB_ROOM_BOOKING_LOG.FROM_TIME, RbRoomBookingLog.RB_ROOM_BOOKING_LOG.STATUS_FLAG }, true);
    public static final UniqueKey<RbRoomMasterRecord> KEY_RB_ROOM_MASTER_PRIMARY = Internal.createUniqueKey(RbRoomMaster.RB_ROOM_MASTER, DSL.name("KEY_RB_ROOM_MASTER_PRIMARY"), new TableField[] { RbRoomMaster.RB_ROOM_MASTER.ROOM_CODE, RbRoomMaster.RB_ROOM_MASTER.FLOOR_CODE, RbRoomMaster.RB_ROOM_MASTER.BUILDING_CODE, RbRoomMaster.RB_ROOM_MASTER.RB_LOCATION_CODE }, true);
    public static final UniqueKey<ReceiptTypeMasterRecord> KEY_RECEIPT_TYPE_MASTER_PRIMARY = Internal.createUniqueKey(ReceiptTypeMaster.RECEIPT_TYPE_MASTER, DSL.name("KEY_receipt_type_master_PRIMARY"), new TableField[] { ReceiptTypeMaster.RECEIPT_TYPE_MASTER.NO }, true);
    public static final UniqueKey<RecoveryMasterRecord> KEY_RECOVERY_MASTER_PRIMARY = Internal.createUniqueKey(RecoveryMaster.RECOVERY_MASTER, DSL.name("KEY_recovery_master_PRIMARY"), new TableField[] { RecoveryMaster.RECOVERY_MASTER.RECOVERY_CODE }, true);
    public static final UniqueKey<RegionMasterRecord> KEY_REGION_MASTER_PRIMARY = Internal.createUniqueKey(RegionMaster.REGION_MASTER, DSL.name("KEY_region_master_PRIMARY"), new TableField[] { RegionMaster.REGION_MASTER.REGION_CODE, RegionMaster.REGION_MASTER.COUNTRY_CODE }, true);
    public static final UniqueKey<RentAttachmentRecord> KEY_RENT_ATTACHMENT_PRIMARY = Internal.createUniqueKey(RentAttachment.RENT_ATTACHMENT, DSL.name("KEY_rent_attachment_PRIMARY"), new TableField[] { RentAttachment.RENT_ATTACHMENT.COMP_CODE, RentAttachment.RENT_ATTACHMENT.RENT_ID }, true);
    public static final UniqueKey<RentFieldforceRecord> KEY_RENT_FIELDFORCE_PRIMARY = Internal.createUniqueKey(RentFieldforce.RENT_FIELDFORCE, DSL.name("KEY_rent_fieldforce_PRIMARY"), new TableField[] { RentFieldforce.RENT_FIELDFORCE.COMP_CODE, RentFieldforce.RENT_FIELDFORCE.VENDOR_CODE }, true);
    public static final UniqueKey<RentHaRecord> KEY_RENT_HA_PRIMARY = Internal.createUniqueKey(RentHa.RENT_HA, DSL.name("KEY_rent_ha_PRIMARY"), new TableField[] { RentHa.RENT_HA.COMP_CODE, RentHa.RENT_HA.RENT_AGR_ID }, true);
    public static final UniqueKey<RentLandlordCustomerCareRecord> KEY_RENT_LANDLORD_CUSTOMER_CARE_PRIMARY = Internal.createUniqueKey(RentLandlordCustomerCare.RENT_LANDLORD_CUSTOMER_CARE, DSL.name("KEY_rent_landlord_customer_care_PRIMARY"), new TableField[] { RentLandlordCustomerCare.RENT_LANDLORD_CUSTOMER_CARE.CUSTOMER_CARE_MOBILE_NO }, true);
    public static final UniqueKey<RentVendorRecord> KEY_RENT_VENDOR_PRIMARY = Internal.createUniqueKey(RentVendor.RENT_VENDOR, DSL.name("KEY_rent_vendor_PRIMARY"), new TableField[] { RentVendor.RENT_VENDOR.COMP_CODE, RentVendor.RENT_VENDOR.RENT_AGR_ID, RentVendor.RENT_VENDOR.VEN_LINE_ITM, RentVendor.RENT_VENDOR.INC_IND, RentVendor.RENT_VENDOR.VENDOR_ID, RentVendor.RENT_VENDOR.REN_ST_DAT }, true);
    public static final UniqueKey<RetailerMasterRecord> KEY_RETAILER_MASTER_PRIMARY = Internal.createUniqueKey(RetailerMaster.RETAILER_MASTER, DSL.name("KEY_retailer_master_PRIMARY"), new TableField[] { RetailerMaster.RETAILER_MASTER.RETAILER_CODE, RetailerMaster.RETAILER_MASTER.CUSTOMER_CODE }, true);
    public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = Internal.createUniqueKey(Role.ROLE, DSL.name("KEY_role_PRIMARY"), new TableField[] { Role.ROLE.COMP_CODE, Role.ROLE.ROLE_ID }, true);
    public static final UniqueKey<RoleAccessRecord> KEY_ROLE_ACCESS_PRIMARY = Internal.createUniqueKey(RoleAccess.ROLE_ACCESS, DSL.name("KEY_role_access_PRIMARY"), new TableField[] { RoleAccess.ROLE_ACCESS.COMP_CODE, RoleAccess.ROLE_ACCESS.ROLE_ID, RoleAccess.ROLE_ACCESS.MENU_ORDER_ID, RoleAccess.ROLE_ACCESS.MENU_ID }, true);
    public static final UniqueKey<RspCertificateAttachmentRecord> KEY_RSP_CERTIFICATE_ATTACHMENT_PRIMARY = Internal.createUniqueKey(RspCertificateAttachment.RSP_CERTIFICATE_ATTACHMENT, DSL.name("KEY_rsp_certificate_attachment_PRIMARY"), new TableField[] { RspCertificateAttachment.RSP_CERTIFICATE_ATTACHMENT.COMP_CODE, RspCertificateAttachment.RSP_CERTIFICATE_ATTACHMENT.CUSTOMER_CODE, RspCertificateAttachment.RSP_CERTIFICATE_ATTACHMENT.SERIAL_NO, RspCertificateAttachment.RSP_CERTIFICATE_ATTACHMENT.ATTACHED_DATETIME }, true);
    public static final UniqueKey<SalesHierarchyRecord> KEY_SALES_HIERARCHY_PRIMARY = Internal.createUniqueKey(SalesHierarchy.SALES_HIERARCHY, DSL.name("KEY_sales_hierarchy_PRIMARY"), new TableField[] { SalesHierarchy.SALES_HIERARCHY.CUSTOMER_CODE }, true);
    public static final UniqueKey<SapLogonRecord> KEY_SAP_LOGON_PRIMARY = Internal.createUniqueKey(SapLogon.SAP_LOGON, DSL.name("KEY_sap_logon_PRIMARY"), new TableField[] { SapLogon.SAP_LOGON.SAP_CLIENT }, true);
    public static final UniqueKey<SchedulerLogRecord> KEY_SCHEDULER_LOG_PRIMARY = Internal.createUniqueKey(SchedulerLog.SCHEDULER_LOG, DSL.name("KEY_scheduler_log_PRIMARY"), new TableField[] { SchedulerLog.SCHEDULER_LOG.USER_ID, SchedulerLog.SCHEDULER_LOG.CREATED_ON }, true);
    public static final UniqueKey<SchemeRecord> KEY_SCHEME_PRIMARY = Internal.createUniqueKey(Scheme.SCHEME, DSL.name("KEY_scheme_PRIMARY"), new TableField[] { Scheme.SCHEME.ITEM_NO, Scheme.SCHEME.COMP_CODE, Scheme.SCHEME.DEPARTMENT_ID }, true);
    public static final UniqueKey<SchemeLiRecord> KEY_SCHEME_LI_PRIMARY = Internal.createUniqueKey(SchemeLi.SCHEME_LI, DSL.name("KEY_scheme_li_PRIMARY"), new TableField[] { SchemeLi.SCHEME_LI.ITEM_NO, SchemeLi.SCHEME_LI.COMP_CODE, SchemeLi.SCHEME_LI.DEPARTMENT_ID, SchemeLi.SCHEME_LI.DEPARTMENT_VISIBLE_ID }, true);
    public static final UniqueKey<SkuTargetUploadRecord> KEY_SKU_TARGET_UPLOAD_PRIMARY = Internal.createUniqueKey(SkuTargetUpload.SKU_TARGET_UPLOAD, DSL.name("KEY_sku_target_upload_PRIMARY"), new TableField[] { SkuTargetUpload.SKU_TARGET_UPLOAD.CUSTOMER_CODE, SkuTargetUpload.SKU_TARGET_UPLOAD.FROM_DATE, SkuTargetUpload.SKU_TARGET_UPLOAD.TO_DATE }, true);
    public static final UniqueKey<SmsConfigurationRecord> KEY_SMS_CONFIGURATION_PRIMARY = Internal.createUniqueKey(SmsConfiguration.SMS_CONFIGURATION, DSL.name("KEY_sms_configuration_PRIMARY"), new TableField[] { SmsConfiguration.SMS_CONFIGURATION.CONFIG_ID }, true);
    public static final UniqueKey<SoHeaderRecord> KEY_SO_HEADER_PRIMARY = Internal.createUniqueKey(SoHeader.SO_HEADER, DSL.name("KEY_so_header_PRIMARY"), new TableField[] { SoHeader.SO_HEADER.COMP_CODE, SoHeader.SO_HEADER.CUSTOMER_CODE, SoHeader.SO_HEADER.DOC_NO }, true);
    public static final UniqueKey<SocietyInchargeMappingRecord> KEY_SOCIETY_INCHARGE_MAPPING_PRIMARY = Internal.createUniqueKey(SocietyInchargeMapping.SOCIETY_INCHARGE_MAPPING, DSL.name("KEY_society_incharge_mapping_PRIMARY"), new TableField[] { SocietyInchargeMapping.SOCIETY_INCHARGE_MAPPING.COMP_CODE, SocietyInchargeMapping.SOCIETY_INCHARGE_MAPPING.SOCIETY, SocietyInchargeMapping.SOCIETY_INCHARGE_MAPPING.EKORG, SocietyInchargeMapping.SOCIETY_INCHARGE_MAPPING.PARVW }, true);
    public static final UniqueKey<SocietyMasterRecord> KEY_SOCIETY_MASTER_PRIMARY = Internal.createUniqueKey(SocietyMaster.SOCIETY_MASTER, DSL.name("KEY_society_master_PRIMARY"), new TableField[] { SocietyMaster.SOCIETY_MASTER.PLANT, SocietyMaster.SOCIETY_MASTER.SOCIETY }, true);
    public static final UniqueKey<SplGlRecord> KEY_SPL_GL_PRIMARY = Internal.createUniqueKey(SplGl.SPL_GL, DSL.name("KEY_spl_gl_PRIMARY"), new TableField[] { SplGl.SPL_GL.MANDT, SplGl.SPL_GL.SPRAS, SplGl.SPL_GL.KOART, SplGl.SPL_GL.SHBKZ }, true);
    public static final UniqueKey<SplGlMappingRecord> KEY_SPL_GL_MAPPING_PRIMARY = Internal.createUniqueKey(SplGlMapping.SPL_GL_MAPPING, DSL.name("KEY_spl_gl_mapping_PRIMARY"), new TableField[] { SplGlMapping.SPL_GL_MAPPING.ITEM_NO, SplGlMapping.SPL_GL_MAPPING.SPL_GL }, true);
    public static final UniqueKey<StockAuditCfaImageRecord> KEY_STOCK_AUDIT_CFA_IMAGE_PRIMARY = Internal.createUniqueKey(StockAuditCfaImage.STOCK_AUDIT_CFA_IMAGE, DSL.name("KEY_stock_audit_cfa_image_PRIMARY"), new TableField[] { StockAuditCfaImage.STOCK_AUDIT_CFA_IMAGE.COMP_CODE, StockAuditCfaImage.STOCK_AUDIT_CFA_IMAGE.PLANT_CODE, StockAuditCfaImage.STOCK_AUDIT_CFA_IMAGE.CREATED_ON, StockAuditCfaImage.STOCK_AUDIT_CFA_IMAGE.STORAGE_LOCATION }, true);
    public static final UniqueKey<StockAuditPlantRecord> KEY_STOCK_AUDIT_PLANT_PRIMARY = Internal.createUniqueKey(StockAuditPlant.STOCK_AUDIT_PLANT, DSL.name("KEY_stock_audit_plant_PRIMARY"), new TableField[] { StockAuditPlant.STOCK_AUDIT_PLANT.PLANT }, true);
    public static final UniqueKey<StockAuditUserLockRecord> KEY_STOCK_AUDIT_USER_LOCK_PRIMARY = Internal.createUniqueKey(StockAuditUserLock.STOCK_AUDIT_USER_LOCK, DSL.name("KEY_stock_audit_user_lock_PRIMARY"), new TableField[] { StockAuditUserLock.STOCK_AUDIT_USER_LOCK.USER_ID, StockAuditUserLock.STOCK_AUDIT_USER_LOCK.PLANT_CODE, StockAuditUserLock.STOCK_AUDIT_USER_LOCK.STORAGE_LOCATION }, true);
    public static final UniqueKey<StockauditConfirmstockRecord> KEY_STOCKAUDIT_CONFIRMSTOCK_PRIMARY = Internal.createUniqueKey(StockauditConfirmstock.STOCKAUDIT_CONFIRMSTOCK, DSL.name("KEY_stockaudit_confirmstock_PRIMARY"), new TableField[] { StockauditConfirmstock.STOCKAUDIT_CONFIRMSTOCK.COMP_CODE, StockauditConfirmstock.STOCKAUDIT_CONFIRMSTOCK.WERKS, StockauditConfirmstock.STOCKAUDIT_CONFIRMSTOCK.LGORT, StockauditConfirmstock.STOCKAUDIT_CONFIRMSTOCK.MATNR, StockauditConfirmstock.STOCKAUDIT_CONFIRMSTOCK.VFDAT, StockauditConfirmstock.STOCKAUDIT_CONFIRMSTOCK.CREATED_BY, StockauditConfirmstock.STOCKAUDIT_CONFIRMSTOCK.CREATED_ON }, true);
    public static final UniqueKey<StockauditLgortRecord> KEY_STOCKAUDIT_LGORT_PRIMARY = Internal.createUniqueKey(StockauditLgort.STOCKAUDIT_LGORT, DSL.name("KEY_stockaudit_lgort_PRIMARY"), new TableField[] { StockauditLgort.STOCKAUDIT_LGORT.PLANT, StockauditLgort.STOCKAUDIT_LGORT.STORAGE_LOCATION }, true);
    public static final UniqueKey<StockauditMaterialwisestockRecord> KEY_STOCKAUDIT_MATERIALWISESTOCK_PRIMARY = Internal.createUniqueKey(StockauditMaterialwisestock.STOCKAUDIT_MATERIALWISESTOCK, DSL.name("KEY_stockaudit_materialwisestock_PRIMARY"), new TableField[] { StockauditMaterialwisestock.STOCKAUDIT_MATERIALWISESTOCK.COMP_CODE, StockauditMaterialwisestock.STOCKAUDIT_MATERIALWISESTOCK.WERKS, StockauditMaterialwisestock.STOCKAUDIT_MATERIALWISESTOCK.LGORT, StockauditMaterialwisestock.STOCKAUDIT_MATERIALWISESTOCK.MATNR }, true);
    public static final UniqueKey<SuperRoleAccessRecord> KEY_SUPER_ROLE_ACCESS_PRIMARY = Internal.createUniqueKey(SuperRoleAccess.SUPER_ROLE_ACCESS, DSL.name("KEY_super_role_access_PRIMARY"), new TableField[] { SuperRoleAccess.SUPER_ROLE_ACCESS.COMP_CODE, SuperRoleAccess.SUPER_ROLE_ACCESS.ROLE_ID, SuperRoleAccess.SUPER_ROLE_ACCESS.ACCESS_ROLE_ID }, true);
    public static final UniqueKey<TcBuildingMasterRecord> KEY_TC_BUILDING_MASTER_PRIMARY = Internal.createUniqueKey(TcBuildingMaster.TC_BUILDING_MASTER, DSL.name("KEY_TC_BUILDING_MASTER_PRIMARY"), new TableField[] { TcBuildingMaster.TC_BUILDING_MASTER.BUILDING_CODE, TcBuildingMaster.TC_BUILDING_MASTER.TR_CENTER_CODE, TcBuildingMaster.TC_BUILDING_MASTER.FROM_DATE }, true);
    public static final UniqueKey<TcCalenderPlannerRecord> KEY_TC_CALENDER_PLANNER_PRIMARY = Internal.createUniqueKey(TcCalenderPlanner.TC_CALENDER_PLANNER, DSL.name("KEY_TC_CALENDER_PLANNER_PRIMARY"), new TableField[] { TcCalenderPlanner.TC_CALENDER_PLANNER.TRAINING_CENTER_CODE, TcCalenderPlanner.TC_CALENDER_PLANNER.DATE, TcCalenderPlanner.TC_CALENDER_PLANNER.YEAR, TcCalenderPlanner.TC_CALENDER_PLANNER.MONTH }, true);
    public static final UniqueKey<TcCeritificateIssueRecord> KEY_TC_CERITIFICATE_ISSUE_PRIMARY = Internal.createUniqueKey(TcCeritificateIssue.TC_CERITIFICATE_ISSUE, DSL.name("KEY_TC_CERITIFICATE_ISSUE_PRIMARY"), new TableField[] { TcCeritificateIssue.TC_CERITIFICATE_ISSUE.LINE_ID, TcCeritificateIssue.TC_CERITIFICATE_ISSUE.REQUEST_ID }, true);
    public static final UniqueKey<TcDeptMasterRecord> KEY_TC_DEPT_MASTER_PRIMARY = Internal.createUniqueKey(TcDeptMaster.TC_DEPT_MASTER, DSL.name("KEY_TC_DEPT_MASTER_PRIMARY"), new TableField[] { TcDeptMaster.TC_DEPT_MASTER.DEPT_CODE, TcDeptMaster.TC_DEPT_MASTER.FROM_DATE }, true);
    public static final UniqueKey<TcDesignationRecord> KEY_TC_DESIGNATION_PRIMARY = Internal.createUniqueKey(TcDesignation.TC_DESIGNATION, DSL.name("KEY_TC_DESIGNATION_PRIMARY"), new TableField[] { TcDesignation.TC_DESIGNATION.DESIG_CODE, TcDesignation.TC_DESIGNATION.DEPT_CODE, TcDesignation.TC_DESIGNATION.FROM_DATE }, true);
    public static final UniqueKey<TcFloorMasterRecord> KEY_TC_FLOOR_MASTER_PRIMARY = Internal.createUniqueKey(TcFloorMaster.TC_FLOOR_MASTER, DSL.name("KEY_TC_FLOOR_MASTER_PRIMARY"), new TableField[] { TcFloorMaster.TC_FLOOR_MASTER.FLOOR_CODE, TcFloorMaster.TC_FLOOR_MASTER.BUILDING_CODE, TcFloorMaster.TC_FLOOR_MASTER.FROM_DATE }, true);
    public static final UniqueKey<TcGiftMasterRecord> KEY_TC_GIFT_MASTER_PRIMARY = Internal.createUniqueKey(TcGiftMaster.TC_GIFT_MASTER, DSL.name("KEY_TC_GIFT_MASTER_PRIMARY"), new TableField[] { TcGiftMaster.TC_GIFT_MASTER.ITEM_CODE, TcGiftMaster.TC_GIFT_MASTER.FROM_DATE }, true);
    public static final UniqueKey<TcHapEmpMasterRecord> KEY_TC_HAP_EMP_MASTER_PRIMARY = Internal.createUniqueKey(TcHapEmpMaster.TC_HAP_EMP_MASTER, DSL.name("KEY_TC_HAP_EMP_MASTER_PRIMARY"), new TableField[] { TcHapEmpMaster.TC_HAP_EMP_MASTER.EMP_CODE }, true);
    public static final UniqueKey<TcMonthStatusMasterRecord> KEY_TC_MONTH_STATUS_MASTER_PRIMARY = Internal.createUniqueKey(TcMonthStatusMaster.TC_MONTH_STATUS_MASTER, DSL.name("KEY_TC_MONTH_STATUS_MASTER_PRIMARY"), new TableField[] { TcMonthStatusMaster.TC_MONTH_STATUS_MASTER.YEAR, TcMonthStatusMaster.TC_MONTH_STATUS_MASTER.MONTH }, true);
    public static final UniqueKey<TcParticipantFoodRecord> KEY_TC_PARTICIPANT_FOOD_PRIMARY = Internal.createUniqueKey(TcParticipantFood.TC_PARTICIPANT_FOOD, DSL.name("KEY_TC_PARTICIPANT_FOOD_PRIMARY"), new TableField[] { TcParticipantFood.TC_PARTICIPANT_FOOD.LINE_ID, TcParticipantFood.TC_PARTICIPANT_FOOD.REQUEST_ID, TcParticipantFood.TC_PARTICIPANT_FOOD.TRAINING_DATE }, true);
    public static final UniqueKey<TcParticipantRoomRecord> KEY_TC_PARTICIPANT_ROOM_PRIMARY = Internal.createUniqueKey(TcParticipantRoom.TC_PARTICIPANT_ROOM, DSL.name("KEY_TC_PARTICIPANT_ROOM_PRIMARY"), new TableField[] { TcParticipantRoom.TC_PARTICIPANT_ROOM.REQUEST_ID, TcParticipantRoom.TC_PARTICIPANT_ROOM.LINE_ID }, true);
    public static final UniqueKey<TcPlantVisitRecord> KEY_TC_PLANT_VISIT_PRIMARY = Internal.createUniqueKey(TcPlantVisit.TC_PLANT_VISIT, DSL.name("KEY_TC_PLANT_VISIT_PRIMARY"), new TableField[] { TcPlantVisit.TC_PLANT_VISIT.REQUEST_ID, TcPlantVisit.TC_PLANT_VISIT.PLANT_CODE }, true);
    public static final UniqueKey<TcReimbursementClaimRecord> KEY_TC_REIMBURSEMENT_CLAIM_PRIMARY = Internal.createUniqueKey(TcReimbursementClaim.TC_REIMBURSEMENT_CLAIM, DSL.name("KEY_TC_REIMBURSEMENT_CLAIM_PRIMARY"), new TableField[] { TcReimbursementClaim.TC_REIMBURSEMENT_CLAIM.LINE_ID, TcReimbursementClaim.TC_REIMBURSEMENT_CLAIM.REQUEST_ID }, true);
    public static final UniqueKey<TcReimbursementMasterRecord> KEY_TC_REIMBURSEMENT_MASTER_PRIMARY = Internal.createUniqueKey(TcReimbursementMaster.TC_REIMBURSEMENT_MASTER, DSL.name("KEY_TC_REIMBURSEMENT_MASTER_PRIMARY"), new TableField[] { TcReimbursementMaster.TC_REIMBURSEMENT_MASTER.REIMBURSE_CODE, TcReimbursementMaster.TC_REIMBURSEMENT_MASTER.FROM_DATE }, true);
    public static final UniqueKey<TcReimbursementTypeMasterRecord> KEY_TC_REIMBURSEMENT_TYPE_MASTER_PRIMARY = Internal.createUniqueKey(TcReimbursementTypeMaster.TC_REIMBURSEMENT_TYPE_MASTER, DSL.name("KEY_TC_REIMBURSEMENT_TYPE_MASTER_PRIMARY"), new TableField[] { TcReimbursementTypeMaster.TC_REIMBURSEMENT_TYPE_MASTER.ID }, true);
    public static final UniqueKey<TcRequestFsRecord> KEY_TC_REQUEST_FS_PRIMARY = Internal.createUniqueKey(TcRequestFs.TC_REQUEST_FS, DSL.name("KEY_TC_REQUEST_FS_PRIMARY"), new TableField[] { TcRequestFs.TC_REQUEST_FS.LINE_ID, TcRequestFs.TC_REQUEST_FS.REQUEST_ID, TcRequestFs.TC_REQUEST_FS.DESIG_CODE }, true);
    public static final UniqueKey<TcRequestGiftRecord> KEY_TC_REQUEST_GIFT_PRIMARY = Internal.createUniqueKey(TcRequestGift.TC_REQUEST_GIFT, DSL.name("KEY_TC_REQUEST_GIFT_PRIMARY"), new TableField[] { TcRequestGift.TC_REQUEST_GIFT.LINE_ID, TcRequestGift.TC_REQUEST_GIFT.REQUEST_ID, TcRequestGift.TC_REQUEST_GIFT.GIFT_CODE }, true);
    public static final UniqueKey<TcRequestHaRecord> KEY_TC_REQUEST_HA_PRIMARY = Internal.createUniqueKey(TcRequestHa.TC_REQUEST_HA, DSL.name("KEY_TC_REQUEST_HA_PRIMARY"), new TableField[] { TcRequestHa.TC_REQUEST_HA.REQUEST_ID }, true);
    public static final UniqueKey<TcRequestLiRecord> KEY_TC_REQUEST_LI_PRIMARY = Internal.createUniqueKey(TcRequestLi.TC_REQUEST_LI, DSL.name("KEY_TC_REQUEST_LI_PRIMARY"), new TableField[] { TcRequestLi.TC_REQUEST_LI.LINE_ID, TcRequestLi.TC_REQUEST_LI.REQUEST_ID }, true);
    public static final UniqueKey<TcRequestRspRecord> KEY_TC_REQUEST_RSP_PRIMARY = Internal.createUniqueKey(TcRequestRsp.TC_REQUEST_RSP, DSL.name("KEY_TC_REQUEST_RSP_PRIMARY"), new TableField[] { TcRequestRsp.TC_REQUEST_RSP.LINE_ID, TcRequestRsp.TC_REQUEST_RSP.REQUEST_ID }, true);
    public static final UniqueKey<TcRequestUserMappingRecord> KEY_TC_REQUEST_USER_MAPPING_PRIMARY = Internal.createUniqueKey(TcRequestUserMapping.TC_REQUEST_USER_MAPPING, DSL.name("KEY_TC_REQUEST_USER_MAPPING_PRIMARY"), new TableField[] { TcRequestUserMapping.TC_REQUEST_USER_MAPPING.REQUEST_ID, TcRequestUserMapping.TC_REQUEST_USER_MAPPING.USER_ID }, true);
    public static final UniqueKey<TcRoomBedMasterRecord> KEY_TC_ROOM_BED_MASTER_PRIMARY = Internal.createUniqueKey(TcRoomBedMaster.TC_ROOM_BED_MASTER, DSL.name("KEY_TC_ROOM_BED_MASTER_PRIMARY"), new TableField[] { TcRoomBedMaster.TC_ROOM_BED_MASTER.ROOM_CODE, TcRoomBedMaster.TC_ROOM_BED_MASTER.FLOOR_CODE, TcRoomBedMaster.TC_ROOM_BED_MASTER.BUILDING_CODE, TcRoomBedMaster.TC_ROOM_BED_MASTER.FROM_DATE, TcRoomBedMaster.TC_ROOM_BED_MASTER.BED_CODE }, true);
    public static final UniqueKey<TcRoomBedTypeMasterRecord> KEY_TC_ROOM_BED_TYPE_MASTER_PRIMARY = Internal.createUniqueKey(TcRoomBedTypeMaster.TC_ROOM_BED_TYPE_MASTER, DSL.name("KEY_TC_ROOM_BED_TYPE_MASTER_PRIMARY"), new TableField[] { TcRoomBedTypeMaster.TC_ROOM_BED_TYPE_MASTER.BED_TYPE_CODE, TcRoomBedTypeMaster.TC_ROOM_BED_TYPE_MASTER.FROM_DATE }, true);
    public static final UniqueKey<TcRoomMasterRecord> KEY_TC_ROOM_MASTER_PRIMARY = Internal.createUniqueKey(TcRoomMaster.TC_ROOM_MASTER, DSL.name("KEY_TC_ROOM_MASTER_PRIMARY"), new TableField[] { TcRoomMaster.TC_ROOM_MASTER.ROOM_CODE, TcRoomMaster.TC_ROOM_MASTER.FLOOR_CODE, TcRoomMaster.TC_ROOM_MASTER.BUILDING_CODE, TcRoomMaster.TC_ROOM_MASTER.FROM_DATE }, true);
    public static final UniqueKey<TcRoomTypeMasterRecord> KEY_TC_ROOM_TYPE_MASTER_PRIMARY = Internal.createUniqueKey(TcRoomTypeMaster.TC_ROOM_TYPE_MASTER, DSL.name("KEY_TC_ROOM_TYPE_MASTER_PRIMARY"), new TableField[] { TcRoomTypeMaster.TC_ROOM_TYPE_MASTER.ROOM_TYPE_CODE, TcRoomTypeMaster.TC_ROOM_TYPE_MASTER.FROM_DATE }, true);
    public static final UniqueKey<TcRouteMasterRecord> KEY_TC_ROUTE_MASTER_PRIMARY = Internal.createUniqueKey(TcRouteMaster.TC_ROUTE_MASTER, DSL.name("KEY_TC_ROUTE_MASTER_PRIMARY"), new TableField[] { TcRouteMaster.TC_ROUTE_MASTER.ROUTE_CODE, TcRouteMaster.TC_ROUTE_MASTER.TR_CENTER_CODE, TcRouteMaster.TC_ROUTE_MASTER.FROM_DATE }, true);
    public static final UniqueKey<TcStaffMasterRecord> KEY_TC_STAFF_MASTER_PRIMARY = Internal.createUniqueKey(TcStaffMaster.TC_STAFF_MASTER, DSL.name("KEY_TC_STAFF_MASTER_PRIMARY"), new TableField[] { TcStaffMaster.TC_STAFF_MASTER.EMP_CODE, TcStaffMaster.TC_STAFF_MASTER.DESIG_CODE, TcStaffMaster.TC_STAFF_MASTER.DEPT_CODE, TcStaffMaster.TC_STAFF_MASTER.FROM_DATE }, true);
    public static final UniqueKey<TcStatusMasterRecord> KEY_TC_STATUS_MASTER_PRIMARY = Internal.createUniqueKey(TcStatusMaster.TC_STATUS_MASTER, DSL.name("KEY_TC_STATUS_MASTER_PRIMARY"), new TableField[] { TcStatusMaster.TC_STATUS_MASTER.ID }, true);
    public static final UniqueKey<TcTrainingCenterRecord> KEY_TC_TRAINING_CENTER_PRIMARY = Internal.createUniqueKey(TcTrainingCenter.TC_TRAINING_CENTER, DSL.name("KEY_TC_TRAINING_CENTER_PRIMARY"), new TableField[] { TcTrainingCenter.TC_TRAINING_CENTER.TR_CENTER_CODE }, true);
    public static final UniqueKey<TcTrainingCreationLiRecord> KEY_TC_TRAINING_CREATION_LI_PRIMARY = Internal.createUniqueKey(TcTrainingCreationLi.TC_TRAINING_CREATION_LI, DSL.name("KEY_TC_TRAINING_CREATION_LI_PRIMARY"), new TableField[] { TcTrainingCreationLi.TC_TRAINING_CREATION_LI.REQUEST_ID, TcTrainingCreationLi.TC_TRAINING_CREATION_LI.ITEM_NO, TcTrainingCreationLi.TC_TRAINING_CREATION_LI.TRAINING_CENTER_CODE, TcTrainingCreationLi.TC_TRAINING_CREATION_LI.DEPT_CODE, TcTrainingCreationLi.TC_TRAINING_CREATION_LI.TRAINING_CODE, TcTrainingCreationLi.TC_TRAINING_CREATION_LI.DATE }, true);
    public static final UniqueKey<TcTrainingMasterRecord> KEY_TC_TRAINING_MASTER_PRIMARY = Internal.createUniqueKey(TcTrainingMaster.TC_TRAINING_MASTER, DSL.name("KEY_TC_TRAINING_MASTER_PRIMARY"), new TableField[] { TcTrainingMaster.TC_TRAINING_MASTER.TRAINING_CODE, TcTrainingMaster.TC_TRAINING_MASTER.TR_CENTER_CODE, TcTrainingMaster.TC_TRAINING_MASTER.FROM_DATE }, true);
    public static final UniqueKey<TcTrainingRoomRecord> KEY_TC_TRAINING_ROOM_PRIMARY = Internal.createUniqueKey(TcTrainingRoom.TC_TRAINING_ROOM, DSL.name("KEY_TC_TRAINING_ROOM_PRIMARY"), new TableField[] { TcTrainingRoom.TC_TRAINING_ROOM.REQUEST_ID, TcTrainingRoom.TC_TRAINING_ROOM.ROOM_TYPE_CODE, TcTrainingRoom.TC_TRAINING_ROOM.ROOM_CODE }, true);
    public static final UniqueKey<TcTrainingTrainerMappingRecord> KEY_TC_TRAINING_TRAINER_MAPPING_PRIMARY = Internal.createUniqueKey(TcTrainingTrainerMapping.TC_TRAINING_TRAINER_MAPPING, DSL.name("KEY_TC_TRAINING_TRAINER_MAPPING_PRIMARY"), new TableField[] { TcTrainingTrainerMapping.TC_TRAINING_TRAINER_MAPPING.CENTER_CODE, TcTrainingTrainerMapping.TC_TRAINING_TRAINER_MAPPING.TRAINING_CODE, TcTrainingTrainerMapping.TC_TRAINING_TRAINER_MAPPING.EMP_CODE }, true);
    public static final UniqueKey<TcTransportRecord> KEY_TC_TRANSPORT_PRIMARY = Internal.createUniqueKey(TcTransport.TC_TRANSPORT, DSL.name("KEY_TC_TRANSPORT_PRIMARY"), new TableField[] { TcTransport.TC_TRANSPORT.REQUEST_ID, TcTransport.TC_TRANSPORT.TRANSPORTER_CODE, TcTransport.TC_TRANSPORT.TRAVEL_TYPE, TcTransport.TC_TRANSPORT.ROUTE_CODE }, true);
    public static final UniqueKey<TcTransportRateRecord> KEY_TC_TRANSPORT_RATE_PRIMARY = Internal.createUniqueKey(TcTransportRate.TC_TRANSPORT_RATE, DSL.name("KEY_TC_TRANSPORT_RATE_PRIMARY"), new TableField[] { TcTransportRate.TC_TRANSPORT_RATE.TRANS_VENDOR_CODE, TcTransportRate.TC_TRANSPORT_RATE.TR_CENTER_CODE, TcTransportRate.TC_TRANSPORT_RATE.UOM, TcTransportRate.TC_TRANSPORT_RATE.FROM_DATE }, true);
    public static final UniqueKey<TcUserRoleDeptRecord> KEY_TC_USER_ROLE_DEPT_PRIMARY = Internal.createUniqueKey(TcUserRoleDept.TC_USER_ROLE_DEPT, DSL.name("KEY_TC_USER_ROLE_DEPT_PRIMARY"), new TableField[] { TcUserRoleDept.TC_USER_ROLE_DEPT.USER_ID, TcUserRoleDept.TC_USER_ROLE_DEPT.ROLE_ID, TcUserRoleDept.TC_USER_ROLE_DEPT.USER_TYPE_ID, TcUserRoleDept.TC_USER_ROLE_DEPT.DEPT_ID }, true);
    public static final UniqueKey<TcUserTrainingCenterMasterRecord> KEY_TC_USER_TRAINING_CENTER_MASTER_PRIMARY = Internal.createUniqueKey(TcUserTrainingCenterMaster.TC_USER_TRAINING_CENTER_MASTER, DSL.name("KEY_TC_USER_TRAINING_CENTER_MASTER_PRIMARY"), new TableField[] { TcUserTrainingCenterMaster.TC_USER_TRAINING_CENTER_MASTER.USER_ID, TcUserTrainingCenterMaster.TC_USER_TRAINING_CENTER_MASTER.TR_CENTER_CODE }, true);
    public static final UniqueKey<TdsCetificateRecord> KEY_TDS_CETIFICATE_PRIMARY = Internal.createUniqueKey(TdsCetificate.TDS_CETIFICATE, DSL.name("KEY_tds_cetificate_PRIMARY"), new TableField[] { TdsCetificate.TDS_CETIFICATE.COMP_CODE, TdsCetificate.TDS_CETIFICATE.FICSAL_YEAR, TdsCetificate.TDS_CETIFICATE.QUATER, TdsCetificate.TDS_CETIFICATE.PAN_NO }, true);
    public static final UniqueKey<TdsDeclarationUploadRecord> KEY_TDS_DECLARATION_UPLOAD_PRIMARY = Internal.createUniqueKey(TdsDeclarationUpload.TDS_DECLARATION_UPLOAD, DSL.name("KEY_tds_declaration_upload_PRIMARY"), new TableField[] { TdsDeclarationUpload.TDS_DECLARATION_UPLOAD.COMP_CODE, TdsDeclarationUpload.TDS_DECLARATION_UPLOAD.YEAR, TdsDeclarationUpload.TDS_DECLARATION_UPLOAD.VENDOR_CODE, TdsDeclarationUpload.TDS_DECLARATION_UPLOAD.TDS_TYPE }, true);
    public static final UniqueKey<TeamleadMasterRecord> KEY_TEAMLEAD_MASTER_PRIMARY = Internal.createUniqueKey(TeamleadMaster.TEAMLEAD_MASTER, DSL.name("KEY_teamlead_master_PRIMARY"), new TableField[] { TeamleadMaster.TEAMLEAD_MASTER.PLANT }, true);
    public static final UniqueKey<TransporterDashboardRecord> KEY_TRANSPORTER_DASHBOARD_PRIMARY = Internal.createUniqueKey(TransporterDashboard.TRANSPORTER_DASHBOARD, DSL.name("KEY_transporter_dashboard_PRIMARY"), new TableField[] { TransporterDashboard.TRANSPORTER_DASHBOARD.VENDOR_CODE, TransporterDashboard.TRANSPORTER_DASHBOARD.FROM_DATE, TransporterDashboard.TRANSPORTER_DASHBOARD.TO_DATE }, true);
    public static final UniqueKey<TransporterMspDetailsRecord> KEY_TRANSPORTER_MSP_DETAILS_PRIMARY = Internal.createUniqueKey(TransporterMspDetails.TRANSPORTER_MSP_DETAILS, DSL.name("KEY_transporter_msp_details_PRIMARY"), new TableField[] { TransporterMspDetails.TRANSPORTER_MSP_DETAILS.VENDOR_CODE }, true);
    public static final UniqueKey<TransporterSummaryRecord> KEY_TRANSPORTER_SUMMARY_PRIMARY = Internal.createUniqueKey(TransporterSummary.TRANSPORTER_SUMMARY, DSL.name("KEY_transporter_summary_PRIMARY"), new TableField[] { TransporterSummary.TRANSPORTER_SUMMARY.VENDOR_CODE, TransporterSummary.TRANSPORTER_SUMMARY.FROM_DATE, TransporterSummary.TRANSPORTER_SUMMARY.TO_DATE }, true);
    public static final UniqueKey<TsRecoveryRecord> KEY_TS_RECOVERY_PRIMARY = Internal.createUniqueKey(TsRecovery.TS_RECOVERY, DSL.name("KEY_ts_recovery_PRIMARY"), new TableField[] { TsRecovery.TS_RECOVERY.PLANT_CODE, TsRecovery.TS_RECOVERY.HMB, TsRecovery.TS_RECOVERY.DATE_FRM, TsRecovery.TS_RECOVERY.DATE_TO }, true);
    public static final UniqueKey<UserControlRecord> KEY_USER_CONTROL_PRIMARY = Internal.createUniqueKey(UserControl.USER_CONTROL, DSL.name("KEY_user_control_PRIMARY"), new TableField[] { UserControl.USER_CONTROL.SEQ_ID }, true);
    public static final UniqueKey<UserMasterRecord> KEY_USER_MASTER_PRIMARY = Internal.createUniqueKey(UserMaster.USER_MASTER, DSL.name("KEY_user_master_PRIMARY"), new TableField[] { UserMaster.USER_MASTER.COMP_CODE, UserMaster.USER_MASTER.USER_ID, UserMaster.USER_MASTER.USER_TYPE_ID }, true);
    public static final UniqueKey<UserMasterSmsRecord> KEY_USER_MASTER_SMS_PRIMARY = Internal.createUniqueKey(UserMasterSms.USER_MASTER_SMS, DSL.name("KEY_user_master_sms_PRIMARY"), new TableField[] { UserMasterSms.USER_MASTER_SMS.COMP_CODE, UserMasterSms.USER_MASTER_SMS.USER_ID, UserMasterSms.USER_MASTER_SMS.MOBILE_NO }, true);
    public static final UniqueKey<UserMasterSmsMsgRecord> KEY_USER_MASTER_SMS_MSG_PRIMARY = Internal.createUniqueKey(UserMasterSmsMsg.USER_MASTER_SMS_MSG, DSL.name("KEY_user_master_sms_msg_PRIMARY"), new TableField[] { UserMasterSmsMsg.USER_MASTER_SMS_MSG.ACC_GRP, UserMasterSmsMsg.USER_MASTER_SMS_MSG.MSG_TYP }, true);
    public static final UniqueKey<UserMenuAssignmentRecord> KEY_USER_MENU_ASSIGNMENT_PRIMARY = Internal.createUniqueKey(UserMenuAssignment.USER_MENU_ASSIGNMENT, DSL.name("KEY_user_menu_assignment_PRIMARY"), new TableField[] { UserMenuAssignment.USER_MENU_ASSIGNMENT.COMP_CODE, UserMenuAssignment.USER_MENU_ASSIGNMENT.USER_ID, UserMenuAssignment.USER_MENU_ASSIGNMENT.USER_TYPE_ID, UserMenuAssignment.USER_MENU_ASSIGNMENT.ROLE_ID }, true);
    public static final UniqueKey<UserOverallCountRecord> KEY_USER_OVERALL_COUNT_PRIMARY = Internal.createUniqueKey(UserOverallCount.USER_OVERALL_COUNT, DSL.name("KEY_user_overall_count_PRIMARY"), new TableField[] { UserOverallCount.USER_OVERALL_COUNT.SNO }, true);
    public static final UniqueKey<UserPlantMasterRecord> KEY_USER_PLANT_MASTER_PRIMARY = Internal.createUniqueKey(UserPlantMaster.USER_PLANT_MASTER, DSL.name("KEY_user_plant_master_PRIMARY"), new TableField[] { UserPlantMaster.USER_PLANT_MASTER.COMP_CODE, UserPlantMaster.USER_PLANT_MASTER.USER_ID, UserPlantMaster.USER_PLANT_MASTER.USER_ACC_GRP }, true);
    public static final UniqueKey<UserRoleAssignmentRecord> KEY_USER_ROLE_ASSIGNMENT_PRIMARY = Internal.createUniqueKey(UserRoleAssignment.USER_ROLE_ASSIGNMENT, DSL.name("KEY_user_role_assignment_PRIMARY"), new TableField[] { UserRoleAssignment.USER_ROLE_ASSIGNMENT.COMP_CODE, UserRoleAssignment.USER_ROLE_ASSIGNMENT.USER_ID, UserRoleAssignment.USER_ROLE_ASSIGNMENT.USER_TYPE_ID, UserRoleAssignment.USER_ROLE_ASSIGNMENT.ROLE_ID }, true);
    public static final UniqueKey<UserTrackRecord> KEY_USER_TRACK_PRIMARY = Internal.createUniqueKey(UserTrack.USER_TRACK, DSL.name("KEY_user_track_PRIMARY"), new TableField[] { UserTrack.USER_TRACK.SESSION_ID, UserTrack.USER_TRACK.USER_ID }, true);
    public static final UniqueKey<VehicleSubsidyRecord> KEY_VEHICLE_SUBSIDY_PRIMARY = Internal.createUniqueKey(VehicleSubsidy.VEHICLE_SUBSIDY, DSL.name("KEY_vehicle_subsidy_PRIMARY"), new TableField[] { VehicleSubsidy.VEHICLE_SUBSIDY.SERIAL_NO, VehicleSubsidy.VEHICLE_SUBSIDY.CUSTOMER_CODE }, true);
    public static final UniqueKey<VehicleTrackerRecord> KEY_VEHICLE_TRACKER_PRIMARY = Internal.createUniqueKey(VehicleTracker.VEHICLE_TRACKER, DSL.name("KEY_vehicle_tracker_PRIMARY"), new TableField[] { VehicleTracker.VEHICLE_TRACKER.SOCIETY }, true);
    public static final UniqueKey<VendorAccountGroupRecord> KEY_VENDOR_ACCOUNT_GROUP_PRIMARY = Internal.createUniqueKey(VendorAccountGroup.VENDOR_ACCOUNT_GROUP, DSL.name("KEY_vendor_account_group_PRIMARY"), new TableField[] { VendorAccountGroup.VENDOR_ACCOUNT_GROUP.VENDOR_ACC_GRP_CODE, VendorAccountGroup.VENDOR_ACCOUNT_GROUP.COMP_CODE }, true);
    public static final UniqueKey<VendorBankDetailsRecord> KEY_VENDOR_BANK_DETAILS_PRIMARY = Internal.createUniqueKey(VendorBankDetails.VENDOR_BANK_DETAILS, DSL.name("KEY_vendor_bank_details_PRIMARY"), new TableField[] { VendorBankDetails.VENDOR_BANK_DETAILS.ACCOUNT_NO, VendorBankDetails.VENDOR_BANK_DETAILS.VENDOR_CODE, VendorBankDetails.VENDOR_BANK_DETAILS.COMP_CODE }, true);
    public static final UniqueKey<VendorBankDetailsArchRecord> KEY_VENDOR_BANK_DETAILS_ARCH_PRIMARY = Internal.createUniqueKey(VendorBankDetailsArch.VENDOR_BANK_DETAILS_ARCH, DSL.name("KEY_vendor_bank_details_arch_PRIMARY"), new TableField[] { VendorBankDetailsArch.VENDOR_BANK_DETAILS_ARCH.ACCOUNT_NO, VendorBankDetailsArch.VENDOR_BANK_DETAILS_ARCH.VENDOR_CODE, VendorBankDetailsArch.VENDOR_BANK_DETAILS_ARCH.COMP_CODE }, true);
    public static final UniqueKey<VendorContactRecord> KEY_VENDOR_CONTACT_PRIMARY = Internal.createUniqueKey(VendorContact.VENDOR_CONTACT, DSL.name("KEY_vendor_contact_PRIMARY"), new TableField[] { VendorContact.VENDOR_CONTACT.VENDOR_CODE, VendorContact.VENDOR_CONTACT.SERIAL_NO }, true);
    public static final UniqueKey<VendorContactHistoryRecord> KEY_VENDOR_CONTACT_HISTORY_PRIMARY = Internal.createUniqueKey(VendorContactHistory.VENDOR_CONTACT_HISTORY, DSL.name("KEY_vendor_contact_history_PRIMARY"), new TableField[] { VendorContactHistory.VENDOR_CONTACT_HISTORY.VENDOR_CODE, VendorContactHistory.VENDOR_CONTACT_HISTORY.SERIAL_NO, VendorContactHistory.VENDOR_CONTACT_HISTORY.LAST_EDITED_ON }, true);
    public static final UniqueKey<VendorEvaluationRecord> KEY_VENDOR_EVALUATION_PRIMARY = Internal.createUniqueKey(VendorEvaluation.VENDOR_EVALUATION, DSL.name("KEY_vendor_evaluation_PRIMARY"), new TableField[] { VendorEvaluation.VENDOR_EVALUATION.VENDOR_CODE, VendorEvaluation.VENDOR_EVALUATION.SERIAL_NO }, true);
    public static final UniqueKey<VendorFeedbackRecord> KEY_VENDOR_FEEDBACK_PRIMARY = Internal.createUniqueKey(VendorFeedback.VENDOR_FEEDBACK, DSL.name("KEY_vendor_feedback_PRIMARY"), new TableField[] { VendorFeedback.VENDOR_FEEDBACK.SERIAL_NO, VendorFeedback.VENDOR_FEEDBACK.COMP_CODE, VendorFeedback.VENDOR_FEEDBACK.VENDOR_CODE, VendorFeedback.VENDOR_FEEDBACK.PO_NO, VendorFeedback.VENDOR_FEEDBACK.PO_ITEM_NO }, true);
    public static final UniqueKey<VendorKycBankDetailsRecord> KEY_VENDOR_KYC_BANK_DETAILS_PRIMARY = Internal.createUniqueKey(VendorKycBankDetails.VENDOR_KYC_BANK_DETAILS, DSL.name("KEY_vendor_kyc_bank_details_PRIMARY"), new TableField[] { VendorKycBankDetails.VENDOR_KYC_BANK_DETAILS.VENDOR_CODE, VendorKycBankDetails.VENDOR_KYC_BANK_DETAILS.ACCOUNT_NO }, true);
    public static final UniqueKey<VendorKycBankDetailsHistoryRecord> KEY_VENDOR_KYC_BANK_DETAILS_HISTORY_PRIMARY = Internal.createUniqueKey(VendorKycBankDetailsHistory.VENDOR_KYC_BANK_DETAILS_HISTORY, DSL.name("KEY_vendor_kyc_bank_details_history_PRIMARY"), new TableField[] { VendorKycBankDetailsHistory.VENDOR_KYC_BANK_DETAILS_HISTORY.LAST_EDITED_ON, VendorKycBankDetailsHistory.VENDOR_KYC_BANK_DETAILS_HISTORY.VENDOR_CODE, VendorKycBankDetailsHistory.VENDOR_KYC_BANK_DETAILS_HISTORY.ACCOUNT_NO }, true);
    public static final UniqueKey<VendorKycDetailsRecord> KEY_VENDOR_KYC_DETAILS_PRIMARY = Internal.createUniqueKey(VendorKycDetails.VENDOR_KYC_DETAILS, DSL.name("KEY_vendor_KYC_details_PRIMARY"), new TableField[] { VendorKycDetails.VENDOR_KYC_DETAILS.VENDOR_CODE, VendorKycDetails.VENDOR_KYC_DETAILS.SERIAL_NO }, true);
    public static final UniqueKey<VendorKycDetailsHistoryRecord> KEY_VENDOR_KYC_DETAILS_HISTORY_PRIMARY = Internal.createUniqueKey(VendorKycDetailsHistory.VENDOR_KYC_DETAILS_HISTORY, DSL.name("KEY_vendor_KYC_details_history_PRIMARY"), new TableField[] { VendorKycDetailsHistory.VENDOR_KYC_DETAILS_HISTORY.VENDOR_CODE, VendorKycDetailsHistory.VENDOR_KYC_DETAILS_HISTORY.SERIAL_NO, VendorKycDetailsHistory.VENDOR_KYC_DETAILS_HISTORY.LAST_EDITED_ON }, true);
    public static final UniqueKey<VendorLocationRecord> KEY_VENDOR_LOCATION_PRIMARY = Internal.createUniqueKey(VendorLocation.VENDOR_LOCATION, DSL.name("KEY_vendor_location_PRIMARY"), new TableField[] { VendorLocation.VENDOR_LOCATION.VENDOR_CODE, VendorLocation.VENDOR_LOCATION.SERIAL_NO }, true);
    public static final UniqueKey<VendorLocationHistoryRecord> KEY_VENDOR_LOCATION_HISTORY_PRIMARY = Internal.createUniqueKey(VendorLocationHistory.VENDOR_LOCATION_HISTORY, DSL.name("KEY_vendor_location_history_PRIMARY"), new TableField[] { VendorLocationHistory.VENDOR_LOCATION_HISTORY.VENDOR_CODE, VendorLocationHistory.VENDOR_LOCATION_HISTORY.SERIAL_NO, VendorLocationHistory.VENDOR_LOCATION_HISTORY.LAST_EDITED_ON }, true);
    public static final UniqueKey<VendorMasterRecord> KEY_VENDOR_MASTER_PRIMARY = Internal.createUniqueKey(VendorMaster.VENDOR_MASTER, DSL.name("KEY_vendor_master_PRIMARY"), new TableField[] { VendorMaster.VENDOR_MASTER.COMP_CODE, VendorMaster.VENDOR_MASTER.VENDOR_CODE }, true);
    public static final UniqueKey<VendorProfileRecord> KEY_VENDOR_PROFILE_PRIMARY = Internal.createUniqueKey(VendorProfile.VENDOR_PROFILE, DSL.name("KEY_vendor_profile_PRIMARY"), new TableField[] { VendorProfile.VENDOR_PROFILE.VENDOR_CODE }, true);
    public static final UniqueKey<VendorProfileHistoryRecord> KEY_VENDOR_PROFILE_HISTORY_PRIMARY = Internal.createUniqueKey(VendorProfileHistory.VENDOR_PROFILE_HISTORY, DSL.name("KEY_vendor_profile_history_PRIMARY"), new TableField[] { VendorProfileHistory.VENDOR_PROFILE_HISTORY.VENDOR_CODE, VendorProfileHistory.VENDOR_PROFILE_HISTORY.LAST_EDITED_ON }, true);
    public static final UniqueKey<VendorTurnoverRecord> KEY_VENDOR_TURNOVER_PRIMARY = Internal.createUniqueKey(VendorTurnover.VENDOR_TURNOVER, DSL.name("KEY_vendor_turnover_PRIMARY"), new TableField[] { VendorTurnover.VENDOR_TURNOVER.VENDOR_CODE, VendorTurnover.VENDOR_TURNOVER.FINANCIAL_YEAR }, true);
    public static final UniqueKey<VendorTurnoverHistoryRecord> KEY_VENDOR_TURNOVER_HISTORY_PRIMARY = Internal.createUniqueKey(VendorTurnoverHistory.VENDOR_TURNOVER_HISTORY, DSL.name("KEY_vendor_turnover_history_PRIMARY"), new TableField[] { VendorTurnoverHistory.VENDOR_TURNOVER_HISTORY.VENDOR_CODE, VendorTurnoverHistory.VENDOR_TURNOVER_HISTORY.FINANCIAL_YEAR, VendorTurnoverHistory.VENDOR_TURNOVER_HISTORY.LAST_EDITED_ON }, true);
    public static final UniqueKey<VendorVehicleDetailsRecord> KEY_VENDOR_VEHICLE_DETAILS_PRIMARY = Internal.createUniqueKey(VendorVehicleDetails.VENDOR_VEHICLE_DETAILS, DSL.name("KEY_vendor_vehicle_details_PRIMARY"), new TableField[] { VendorVehicleDetails.VENDOR_VEHICLE_DETAILS.COMP_CODE, VendorVehicleDetails.VENDOR_VEHICLE_DETAILS.SERVICE_AGENT }, true);
    public static final UniqueKey<VisitorRegisterRecord> KEY_VISITOR_REGISTER_PRIMARY = Internal.createUniqueKey(VisitorRegister.VISITOR_REGISTER, DSL.name("KEY_visitor_register_PRIMARY"), new TableField[] { VisitorRegister.VISITOR_REGISTER.CUSTOMER_CODE, VisitorRegister.VISITOR_REGISTER.COMP_CODE, VisitorRegister.VISITOR_REGISTER.ENTRY_DATE }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CcmsCanteenEntryRecord, CcmsEmployeeRecord> EMP_FK = Internal.createForeignKey(CcmsCanteenEntry.CCMS_CANTEEN_ENTRY, DSL.name("emp_fk"), new TableField[] { CcmsCanteenEntry.CCMS_CANTEEN_ENTRY.EMP_CODE }, Keys.KEY_CCMS_EMPLOYEE_PRIMARY, new TableField[] { CcmsEmployee.CCMS_EMPLOYEE.EMP_CODE }, true);
    public static final ForeignKey<CcmsCanteenEntryRecord, CcmsShiftMasterRecord> SHIFT_FK = Internal.createForeignKey(CcmsCanteenEntry.CCMS_CANTEEN_ENTRY, DSL.name("shift_fk"), new TableField[] { CcmsCanteenEntry.CCMS_CANTEEN_ENTRY.SHIFT_ID }, Keys.KEY_CCMS_SHIFT_MASTER_PRIMARY, new TableField[] { CcmsShiftMaster.CCMS_SHIFT_MASTER.ID }, true);
    public static final ForeignKey<HapPoItemRecord, HapPoHeaderRecord> FK_HAP_PO_HEADER_PO_ITEM = Internal.createForeignKey(HapPoItem.HAP_PO_ITEM, DSL.name("fk_hap_po_header_po_item"), new TableField[] { HapPoItem.HAP_PO_ITEM.COMP_CODE, HapPoItem.HAP_PO_ITEM.PO_NUMBER }, Keys.KEY_HAP_PO_HEADER_PRIMARY, new TableField[] { HapPoHeader.HAP_PO_HEADER.COMP_CODE, HapPoHeader.HAP_PO_HEADER.PO_NUMBER }, true);
    public static final ForeignKey<HapPoItemServiceRecord, HapPoItemRecord> FK_HAP_PO_ITEM_PO_ITEM_SERVICE = Internal.createForeignKey(HapPoItemService.HAP_PO_ITEM_SERVICE, DSL.name("FK_HAP_PO_ITEM_PO_ITEM_SERVICE"), new TableField[] { HapPoItemService.HAP_PO_ITEM_SERVICE.COMP_CODE, HapPoItemService.HAP_PO_ITEM_SERVICE.PO_NUMBER, HapPoItemService.HAP_PO_ITEM_SERVICE.PO_ITEM_NO }, Keys.KEY_HAP_PO_ITEM_PRIMARY, new TableField[] { HapPoItem.HAP_PO_ITEM.COMP_CODE, HapPoItem.HAP_PO_ITEM.PO_NUMBER, HapPoItem.HAP_PO_ITEM.PO_ITEM_NO }, true);
    public static final ForeignKey<HapPoItemServiceMmRecord, HapPoItemRecord> FK_HAP_PO_ITEM_PO_ITEM_SERVICE_MM = Internal.createForeignKey(HapPoItemServiceMm.HAP_PO_ITEM_SERVICE_MM, DSL.name("FK_HAP_PO_ITEM_PO_ITEM_SERVICE_MM"), new TableField[] { HapPoItemServiceMm.HAP_PO_ITEM_SERVICE_MM.COMP_CODE, HapPoItemServiceMm.HAP_PO_ITEM_SERVICE_MM.PO_NUMBER, HapPoItemServiceMm.HAP_PO_ITEM_SERVICE_MM.PO_ITEM_NO }, Keys.KEY_HAP_PO_ITEM_PRIMARY, new TableField[] { HapPoItem.HAP_PO_ITEM.COMP_CODE, HapPoItem.HAP_PO_ITEM.PO_NUMBER, HapPoItem.HAP_PO_ITEM.PO_ITEM_NO }, true);
    public static final ForeignKey<MilkSpoilageRecord, MilkSpoilageCategoryRecord> FK_MILK_CATEGORY = Internal.createForeignKey(MilkSpoilage.MILK_SPOILAGE, DSL.name("FK_MILK_CATEGORY"), new TableField[] { MilkSpoilage.MILK_SPOILAGE.MILK_CATEGORY }, Keys.KEY_MILK_SPOILAGE_CATEGORY_PRIMARY, new TableField[] { MilkSpoilageCategory.MILK_SPOILAGE_CATEGORY.MILK_CODE }, true);
    public static final ForeignKey<RbBuildingMasterRecord, RbLocationMasterRecord> FK_RB_LOCATION_CODE = Internal.createForeignKey(RbBuildingMaster.RB_BUILDING_MASTER, DSL.name("FK_RB_LOCATION_CODE"), new TableField[] { RbBuildingMaster.RB_BUILDING_MASTER.RB_LOCATION_CODE }, Keys.KEY_RB_LOCATION_MASTER_PRIMARY, new TableField[] { RbLocationMaster.RB_LOCATION_MASTER.RB_LOCATION_CODE }, true);
    public static final ForeignKey<RbFloorMasterRecord, RbBuildingMasterRecord> FK_RB_FLOOR_BUILDING = Internal.createForeignKey(RbFloorMaster.RB_FLOOR_MASTER, DSL.name("FK_RB_FLOOR_BUILDING"), new TableField[] { RbFloorMaster.RB_FLOOR_MASTER.BUILDING_CODE, RbFloorMaster.RB_FLOOR_MASTER.RB_LOCATION_CODE }, Keys.KEY_RB_BUILDING_MASTER_PRIMARY, new TableField[] { RbBuildingMaster.RB_BUILDING_MASTER.BUILDING_CODE, RbBuildingMaster.RB_BUILDING_MASTER.RB_LOCATION_CODE }, true);
    public static final ForeignKey<RbRoomMasterRecord, RbFloorMasterRecord> FK_RB_ROOM_MASTER_FLOOR = Internal.createForeignKey(RbRoomMaster.RB_ROOM_MASTER, DSL.name("FK_RB_ROOM_MASTER_FLOOR"), new TableField[] { RbRoomMaster.RB_ROOM_MASTER.FLOOR_CODE, RbRoomMaster.RB_ROOM_MASTER.BUILDING_CODE, RbRoomMaster.RB_ROOM_MASTER.RB_LOCATION_CODE }, Keys.KEY_RB_FLOOR_MASTER_PRIMARY, new TableField[] { RbFloorMaster.RB_FLOOR_MASTER.FLOOR_CODE, RbFloorMaster.RB_FLOOR_MASTER.BUILDING_CODE, RbFloorMaster.RB_FLOOR_MASTER.RB_LOCATION_CODE }, true);
    public static final ForeignKey<TcBuildingMasterRecord, TcTrainingCenterRecord> FK_TC_CENTER_CODE = Internal.createForeignKey(TcBuildingMaster.TC_BUILDING_MASTER, DSL.name("FK_TC_CENTER_CODE"), new TableField[] { TcBuildingMaster.TC_BUILDING_MASTER.TR_CENTER_CODE }, Keys.KEY_TC_TRAINING_CENTER_PRIMARY, new TableField[] { TcTrainingCenter.TC_TRAINING_CENTER.TR_CENTER_CODE }, true);
    public static final ForeignKey<TcCeritificateIssueRecord, TcRequestLiRecord> FK_REQ_LI_CI = Internal.createForeignKey(TcCeritificateIssue.TC_CERITIFICATE_ISSUE, DSL.name("FK_REQ_LI_CI"), new TableField[] { TcCeritificateIssue.TC_CERITIFICATE_ISSUE.LINE_ID, TcCeritificateIssue.TC_CERITIFICATE_ISSUE.REQUEST_ID }, Keys.KEY_TC_REQUEST_LI_PRIMARY, new TableField[] { TcRequestLi.TC_REQUEST_LI.LINE_ID, TcRequestLi.TC_REQUEST_LI.REQUEST_ID }, true);
    public static final ForeignKey<TcParticipantFoodRecord, TcRequestLiRecord> FK_RQ_LI_FOOD = Internal.createForeignKey(TcParticipantFood.TC_PARTICIPANT_FOOD, DSL.name("FK_RQ_LI_FOOD"), new TableField[] { TcParticipantFood.TC_PARTICIPANT_FOOD.LINE_ID, TcParticipantFood.TC_PARTICIPANT_FOOD.REQUEST_ID }, Keys.KEY_TC_REQUEST_LI_PRIMARY, new TableField[] { TcRequestLi.TC_REQUEST_LI.LINE_ID, TcRequestLi.TC_REQUEST_LI.REQUEST_ID }, true);
    public static final ForeignKey<TcPlantVisitRecord, TcRequestHaRecord> FK_REQUEST_HA_PV = Internal.createForeignKey(TcPlantVisit.TC_PLANT_VISIT, DSL.name("FK_REQUEST_HA_PV"), new TableField[] { TcPlantVisit.TC_PLANT_VISIT.REQUEST_ID }, Keys.KEY_TC_REQUEST_HA_PRIMARY, new TableField[] { TcRequestHa.TC_REQUEST_HA.REQUEST_ID }, true);
    public static final ForeignKey<TcReimbursementClaimRecord, TcRequestLiRecord> FK_REQ_LI_RBM = Internal.createForeignKey(TcReimbursementClaim.TC_REIMBURSEMENT_CLAIM, DSL.name("FK_REQ_LI_RBM"), new TableField[] { TcReimbursementClaim.TC_REIMBURSEMENT_CLAIM.LINE_ID, TcReimbursementClaim.TC_REIMBURSEMENT_CLAIM.REQUEST_ID }, Keys.KEY_TC_REQUEST_LI_PRIMARY, new TableField[] { TcRequestLi.TC_REQUEST_LI.LINE_ID, TcRequestLi.TC_REQUEST_LI.REQUEST_ID }, true);
    public static final ForeignKey<TcRequestFsRecord, TcRequestLiRecord> FK_REQ_LI_FS = Internal.createForeignKey(TcRequestFs.TC_REQUEST_FS, DSL.name("FK_REQ_LI_FS"), new TableField[] { TcRequestFs.TC_REQUEST_FS.LINE_ID, TcRequestFs.TC_REQUEST_FS.REQUEST_ID }, Keys.KEY_TC_REQUEST_LI_PRIMARY, new TableField[] { TcRequestLi.TC_REQUEST_LI.LINE_ID, TcRequestLi.TC_REQUEST_LI.REQUEST_ID }, true);
    public static final ForeignKey<TcRequestGiftRecord, TcGiftMasterRecord> FK_GIFT_MASTER = Internal.createForeignKey(TcRequestGift.TC_REQUEST_GIFT, DSL.name("FK_GIFT_MASTER"), new TableField[] { TcRequestGift.TC_REQUEST_GIFT.GIFT_CODE }, Keys.KEY_TC_GIFT_MASTER_PRIMARY, new TableField[] { TcGiftMaster.TC_GIFT_MASTER.ITEM_CODE }, true);
    public static final ForeignKey<TcRequestGiftRecord, TcRequestLiRecord> FK_REQ_LI_GIFT = Internal.createForeignKey(TcRequestGift.TC_REQUEST_GIFT, DSL.name("FK_REQ_LI_GIFT"), new TableField[] { TcRequestGift.TC_REQUEST_GIFT.LINE_ID, TcRequestGift.TC_REQUEST_GIFT.REQUEST_ID }, Keys.KEY_TC_REQUEST_LI_PRIMARY, new TableField[] { TcRequestLi.TC_REQUEST_LI.LINE_ID, TcRequestLi.TC_REQUEST_LI.REQUEST_ID }, true);
    public static final ForeignKey<TcRequestLiRecord, TcRequestHaRecord> FK_REQUEST_ID_HA = Internal.createForeignKey(TcRequestLi.TC_REQUEST_LI, DSL.name("FK_REQUEST_ID_HA"), new TableField[] { TcRequestLi.TC_REQUEST_LI.REQUEST_ID }, Keys.KEY_TC_REQUEST_HA_PRIMARY, new TableField[] { TcRequestHa.TC_REQUEST_HA.REQUEST_ID }, true);
    public static final ForeignKey<TcRequestRspRecord, RegionMasterRecord> FK_RM_RSP = Internal.createForeignKey(TcRequestRsp.TC_REQUEST_RSP, DSL.name("FK_RM_RSP"), new TableField[] { TcRequestRsp.TC_REQUEST_RSP.STATE, TcRequestRsp.TC_REQUEST_RSP.COUNTRY }, Keys.KEY_REGION_MASTER_PRIMARY, new TableField[] { RegionMaster.REGION_MASTER.REGION_CODE, RegionMaster.REGION_MASTER.COUNTRY_CODE }, true);
    public static final ForeignKey<TcRequestRspRecord, TcRequestLiRecord> FK_RQ_LI_RSP = Internal.createForeignKey(TcRequestRsp.TC_REQUEST_RSP, DSL.name("FK_RQ_LI_RSP"), new TableField[] { TcRequestRsp.TC_REQUEST_RSP.LINE_ID, TcRequestRsp.TC_REQUEST_RSP.REQUEST_ID }, Keys.KEY_TC_REQUEST_LI_PRIMARY, new TableField[] { TcRequestLi.TC_REQUEST_LI.LINE_ID, TcRequestLi.TC_REQUEST_LI.REQUEST_ID }, true);
    public static final ForeignKey<TcRoomBedMasterRecord, TcRoomMasterRecord> FK_ROOM_BED_MASTER_RM = Internal.createForeignKey(TcRoomBedMaster.TC_ROOM_BED_MASTER, DSL.name("FK_ROOM_BED_MASTER_RM"), new TableField[] { TcRoomBedMaster.TC_ROOM_BED_MASTER.ROOM_CODE, TcRoomBedMaster.TC_ROOM_BED_MASTER.FLOOR_CODE, TcRoomBedMaster.TC_ROOM_BED_MASTER.BUILDING_CODE, TcRoomBedMaster.TC_ROOM_BED_MASTER.FROM_DATE }, Keys.KEY_TC_ROOM_MASTER_PRIMARY, new TableField[] { TcRoomMaster.TC_ROOM_MASTER.ROOM_CODE, TcRoomMaster.TC_ROOM_MASTER.FLOOR_CODE, TcRoomMaster.TC_ROOM_MASTER.BUILDING_CODE, TcRoomMaster.TC_ROOM_MASTER.FROM_DATE }, true);
    public static final ForeignKey<TcRouteMasterRecord, TcTrainingCenterRecord> FK_RM_CENTER_CODE = Internal.createForeignKey(TcRouteMaster.TC_ROUTE_MASTER, DSL.name("FK_RM_CENTER_CODE"), new TableField[] { TcRouteMaster.TC_ROUTE_MASTER.TR_CENTER_CODE }, Keys.KEY_TC_TRAINING_CENTER_PRIMARY, new TableField[] { TcTrainingCenter.TC_TRAINING_CENTER.TR_CENTER_CODE }, true);
    public static final ForeignKey<TcTrainingMasterRecord, TcTrainingCenterRecord> FK_CENTER_CODE_TM = Internal.createForeignKey(TcTrainingMaster.TC_TRAINING_MASTER, DSL.name("FK_CENTER_CODE_TM"), new TableField[] { TcTrainingMaster.TC_TRAINING_MASTER.TR_CENTER_CODE }, Keys.KEY_TC_TRAINING_CENTER_PRIMARY, new TableField[] { TcTrainingCenter.TC_TRAINING_CENTER.TR_CENTER_CODE }, true);
    public static final ForeignKey<TcTrainingRoomRecord, TcRequestHaRecord> FK_REQUEST_HA_TR = Internal.createForeignKey(TcTrainingRoom.TC_TRAINING_ROOM, DSL.name("FK_REQUEST_HA_TR"), new TableField[] { TcTrainingRoom.TC_TRAINING_ROOM.REQUEST_ID }, Keys.KEY_TC_REQUEST_HA_PRIMARY, new TableField[] { TcRequestHa.TC_REQUEST_HA.REQUEST_ID }, true);
    public static final ForeignKey<TcTransportRecord, TcRequestHaRecord> FK_REQUEST_HA_TRASNSPORT = Internal.createForeignKey(TcTransport.TC_TRANSPORT, DSL.name("FK_REQUEST_HA_TRASNSPORT"), new TableField[] { TcTransport.TC_TRANSPORT.REQUEST_ID }, Keys.KEY_TC_REQUEST_HA_PRIMARY, new TableField[] { TcRequestHa.TC_REQUEST_HA.REQUEST_ID }, true);
    public static final ForeignKey<TcTransportRateRecord, TcTrainingCenterRecord> FK_TR_TRAINING_CODE = Internal.createForeignKey(TcTransportRate.TC_TRANSPORT_RATE, DSL.name("FK_TR_TRAINING_CODE"), new TableField[] { TcTransportRate.TC_TRANSPORT_RATE.TR_CENTER_CODE }, Keys.KEY_TC_TRAINING_CENTER_PRIMARY, new TableField[] { TcTrainingCenter.TC_TRAINING_CENTER.TR_CENTER_CODE }, true);
    public static final ForeignKey<TcUserTrainingCenterMasterRecord, TcTrainingCenterRecord> FK_USER_TRAINING_CODE = Internal.createForeignKey(TcUserTrainingCenterMaster.TC_USER_TRAINING_CENTER_MASTER, DSL.name("FK_USER_TRAINING_CODE"), new TableField[] { TcUserTrainingCenterMaster.TC_USER_TRAINING_CENTER_MASTER.TR_CENTER_CODE }, Keys.KEY_TC_TRAINING_CENTER_PRIMARY, new TableField[] { TcTrainingCenter.TC_TRAINING_CENTER.TR_CENTER_CODE }, true);
}
